{"version":3,"sources":["Images/cog.svg","Images/c-programming.svg","Images/cryingboy.svg","Utils/index.js","components/CodeStatus.js","components/ButtonPanel.js","Utils/Parser.js","components/WaitingScreen.js","components/ASTVisualizer.js","components/FrontPage.js","components/ErrorHandler.js","Utils/Tabs.js","Utils/Registry.js","Utils/Converter.js","ASMComponents/Vector.js","ASMComponents/ret.js","ASMComponents/UnsupportedCommand.js","ASMComponents/Function.js","ASMComponents/SequentialComponent.js","ASMComponents/Shift.js","ASMComponents/Arithmetic.js","components/ASMVisualizer.js","components/App.js","Utils/Compiler.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","getFlatColors","main","getComputedStyle","document","documentElement","getPropertyValue","darkMain","one","two","three","four","five","gray","clearTextColor","DarkTextColor","Status","styled","div","_templateObject","_ref","bg","CodeStatus","_ref2","_ref2$status","status","color","message","react_default","a","createElement","ButtonPanelContainer","ButtonPanel_templateObject","Top","_templateObject2","Buttons","_templateObject3","ButtonPanel","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","bitly","BitlyClient","toggleShare","bind","assertThisInitialized","state","popoverOpen","shareLink","textAreaRef","React","createRef","_this2","longUrl","getShareLink","setState","shorten","then","result","url","catch","error","console","_this3","_this$props","visualize","restart","_this$props$disabled","disabled","onClick","id","className","reactstrap_es","placement","isOpen","target","toggle","readOnly","ref","value","addonType","lib","text","onCopy","Component","testASR","Node","type","name","line","functionName","Cog","WaitingScreen_templateObject","WaitingScreen","cog","cogAnim","anime","targets","current","loop","rotate","duration","easing","getChildren","node","body","declarations","init","expression","left","right","callee","arguments","object","property","properties","key","argument","test","consequent","alternate","getLabel","raw","operator","params1","_","params","join","params2","AstVisualizer","recursiveBuilder","children","tree","forEach","child","push","title","expanded","start","end","buildTree","ast","highlightCode","codeEditor","cm","editor","doc","fromIndex","posFromIndex","toIndex","markText","clearHighlightedCode","getAllMarks","m","clear","treeData","nextProps","index_esm","onChange","canDrag","generateNodeProps","onMouseEnter","onMouseLeave","Image","FrontPage_templateObject","AppTitle","FrontPage_templateObject2","AppDescription","FrontPage_templateObject3","Container","_templateObject4","GHButton","button","_templateObject5","ButtonGroup","_templateObject6","FrontPage","image","imageContainer","direction","scale","delay","CLogo","href","rel","src","frameBorder","scrolling","width","height","ErrorPageContainer","ErrorHandler_templateObject","TextJumbo","ErrorHandler_templateObject2","ErrorMessage","ErrorHandler_templateObject3","ErrorPosition","ErrorHandler_templateObject4","Robot","img","ErrorHandler_templateObject5","ErrorHandler","tag","lineLength","getLine","length","ch","getErrorMessage","getErrorPosition","column","log","SadRobot","Tabs","_Component","_getPrototypeOf2","_len","args","Array","_key","apply","concat","selected","handleClick","index","event","preventDefault","_renderTitles","map","activeClass","label","_renderContent","inherits","createClass","nextState","Pane","_Component2","TYPE_LENGTH","x","y","z","instance","Registry","set","register","array","_this$_keys$idx","idx","substring","_keys","splice","toConsumableArray","get","slice","fill","val","i","freeze","toUINT","toBitWidth","fromType","fromBitWidth","output","uint32","fromBytesBigEndian","Math","abs","getByteBigEndian","toINT","toDouble","convert","data","toType","values","convertToStrings","base","undefined","precision","toBase","toString","round","padStart","toUpper","Vector","updateWidth","window","innerWidth","numbersRef","vectorRef","addEventListener","removeEventListener","shiftData","bitWidth","shiftValues","elCount","rectLen","rectHeight","viewBox","xmlns","padding","rx","ry","Number","x1","y1","x2","y2","number","dy","offset","Fragment","defaultProps","Ret","returnValue","vector","computeCommand","timeline","autoplay","add","filter","Vector_Vector","UnsupportedCommand","FunctionContainer","Function_templateObject","FunctionName","Function_templateObject2","Function","SequentialComponent_templateObject","SequentialComponent","isHover","component","onEnter","hoverHighlight","childAnimation","isLoop","onLeave","seek","Infinity","container","onComplete","sequentialHighlight","c","getAnimation","animeRef","translateY","opacity","complete","timelineFinished","finished","allAnimationCompleted","shouldBeVisible","play","pause","SequentialComponent_Container","cloneElement","SHIFT_INDEX","INPUT_INDEX","Shift","registry","shiftLen","input","_this$state","shiftPercentage","translateX","_output","_this$props2","INPUT1_INDEX","INPUT2_INDEX","OUTPUT_INDEX","Arithmetic","input1","input2","input1_converted","input2_converted","output_converted","addMod32","showOutput","vector1","vector2","vector3","vector4","equals","mock","nextTick","currentTick","v","begin","update","animation","began","diff","colCount","style","operation","ButtonContainer","ASMVisualizer_templateObject","AnimationContainer","ASMVisualizer_templateObject2","AsmVisualizer","buildGraphicStack","stack","asm","func","commands","Function_Function","command","Shift_Shift","Arithmetic_Arithmetic","ret_Ret","UnsupportedCommand_UnsupportedCommand","commandFactory","getButtons","buttons","icon","outline","increment","setTimeout","componentDonePlaying","_this4","SequentialComponent_SequentialComponent","App_templateObject","LeftContainer","App_templateObject2","RightContainer","App_templateObject3","App","handleClear","clearCode","code","callback","compiling","codeWasModifiedSinceLastCompile","keys","k","assign","JSON","parse","getValue","rawAsm","currentFunction","exec","source","trim","replace","split","generateASM","e","clangAst","request","method","headers","content-type","json","compiler","options","userArguments","compilerOptions","produceGccDump","produceCfg","produceAst","filters","binary","execute","labels","directives","commentOnly","intel","demangle","lang","response","alert","stderr","astOutput","qs","savedState","localStorage","getItem","history","createBrowserHistory","disableButtons","match","frontPage","FrontPage_FrontPage","waitingScreen","WaitingScreen_WaitingScreen","asmVisualizer","astVisualizer","components_ASMVisualizer","components_ASTVisualizer","refs","shiftVec","setItem","stringify","rightPage","components_ErrorHandler","Tabs_Tabs","Tabs_Pane","App_Container","ButtonPanel_ButtonPanel","react_codemirror2","mode","theme","lineNumbers","lineWrapping","gutters","onBeforeChange","location","pathname","onPaste","Boolean","hostname","ReactDOM","render","HashRouter","basename","process","Switch","Route","exact","path","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.83cb54f2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cog.a08a6ab0.svg\";","module.exports = __webpack_public_path__ + \"static/media/c-programming.811c1a47.svg\";","module.exports = __webpack_public_path__ + \"static/media/cryingboy.5b495fa1.svg\";","export function getFlatColors() {\n    return {\n        main: getComputedStyle(document.documentElement).getPropertyValue('--main'),\n        darkMain: getComputedStyle(document.documentElement).getPropertyValue('--dark-main'),\n        one: getComputedStyle(document.documentElement).getPropertyValue('--one'),\n        two: getComputedStyle(document.documentElement).getPropertyValue('--two'),\n        three: getComputedStyle(document.documentElement).getPropertyValue('--three'),\n        four: getComputedStyle(document.documentElement).getPropertyValue('--four'),\n        five: getComputedStyle(document.documentElement).getPropertyValue('--five'),\n        gray: getComputedStyle(document.documentElement).getPropertyValue('--gray'),\n        clearTextColor: getComputedStyle(document.documentElement).getPropertyValue('--clear-text-color'),\n        DarkTextColor: getComputedStyle(document.documentElement).getPropertyValue('--dark-text-color')\n    }\n}","import React from \"react\";\nimport styled from 'styled-components'\nimport {getFlatColors} from \"../Utils\";\n\nconst Status = styled.div`\n  background: ${({bg}) => bg};\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  font-weight: 300\n  font-size: 14px;\n  padding: 5px;\n  padding-left: 10px;\n  margin-bottom: 5px;\n\n  > span {\n    font-weight: 500;\n    margin-left: 10px;\n  }\n\n  @media (max-width: 700px) {\n    font-size: 8px;\n  }\n`\n\nexport default function CodeStatus({status = 'compiles'}) {\n    let color = '';\n    let message = '';\n    if (status === 'compiles') {\n        color = getFlatColors().five;\n        message = 'Code status: Compiles..';\n    }\n    else if (status === 'error') {\n        color = getFlatColors().two;\n        message = 'Code status: Error..';\n    }\n    else if (status === 'warning') {\n        color = getFlatColors().four;\n        message = 'Code status: warning..';\n    }\n\n    return (\n        <Status bg={color}>\n            {message}\n        </Status>\n    );\n}","import React, {Component} from 'react';\nimport styled from 'styled-components'\nimport CodeStatus from \"./CodeStatus\";\nimport {Popover, PopoverBody} from 'reactstrap';\nimport {BitlyClient} from 'bitly';\nimport {InputGroup, InputGroupAddon, Button, Input} from 'reactstrap';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\nconst ButtonPanelContainer = styled.div`\n  background: #1F292E;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst Top = styled.div`\n  padding: 3px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 10px;\n`\n\nconst Buttons = styled.div`\n    width: 100%;\n    display: flex;\n  > button {\n    border: none;\n    background: none;\n    color: #fff;\n    font-size: 18px;\n    padding: 8px;\n    text-shadow: -1px -1px 1px rgba(255,255,255,.1), 1px 1px 1px rgba(0,0,0,.5);\n\n    @media (max-width: 700px) {\n      font-size: 10px;\n    }\n  }\n\n  > button:hover {\n    color: #fff;\n    cursor: pointer;\n  }\n\n  > button:disabled {\n    color: #919191;\n  }\n\n  > button:active {\n    color: #fff;\n    text-shadow: none;\n  }\n  \n  > #sharePopover {\n    margin-left:auto;\n    opacity: 0.6;\n  }\n  \n  > #sharePopover:hover {\n    opacity: 1;\n  }\n`\n\nexport default class ButtonPanel extends Component {\n\n    constructor(props) {\n        super(props);\n        this.bitly = new BitlyClient('e17981e1eef5e2ec83995b478b899564448b9496', {});\n\n        this.toggleShare = this.toggleShare.bind(this);\n        this.state = {\n            popoverOpen: false,\n            shareLink: 'Loading...'\n        };\n\n        this.textAreaRef = React.createRef();\n    }\n\n    toggleShare() {\n        let longUrl = this.props.getShareLink();\n        this.setState({\n            popoverOpen: !this.state.popoverOpen\n        });\n        this.bitly\n            .shorten(longUrl)\n            .then((result) => {\n                this.setState({\n                    shareLink: result.url\n                });\n            })\n            .catch((error) => {\n                this.setState({\n                    shareLink: longUrl\n                });\n                console.error(error);\n            });\n\n\n    }\n\n    render() {\n        let {visualize, restart, disabled = false, status} = this.props;\n\n        return (\n            <ButtonPanelContainer>\n                <Top>\n                    <Buttons>\n                        <button disabled={disabled} onClick={visualize}>Visualize</button>\n                        <button onClick={restart}>Restart</button>\n                        <button id='sharePopover' onClick={this.toggleShare}><i className=\"fas fa-share-square\"></i>\n                        </button>\n                    </Buttons>\n\n\n                    <Popover placement=\"left\" isOpen={this.state.popoverOpen} target=\"sharePopover\"\n                             toggle={this.toggleShare}>\n                        <PopoverBody>\n                            <InputGroup>\n                                <Input readOnly ref={this.textAreaRef} value={this.state.shareLink}/>\n                                <InputGroupAddon addonType=\"prepend\">\n\n                                    <CopyToClipboard text={this.state.shareLink}\n                                                     onCopy={() => this.setState({popoverOpen: false})}>\n                                        <Button color=\"info\"> <i className=\"far fa-copy\"></i> </Button>\n                                    </CopyToClipboard>\n\n\n                                </InputGroupAddon>\n                            </InputGroup>\n                        </PopoverBody>\n                    </Popover>\n                </Top>\n                <CodeStatus status={status}/>\n            </ButtonPanelContainer>\n        );\n    }\n}","//import * as acorn from \"acorn\";\n\n\nconst testASR = `{\"type\": \"Program\",\\n  \"start\": 0,\\n  \"end\": 198,\\n  \"body\": [\\n    {\\n      \"type\": \"ImportDeclaration\",\\n      \"start\": 0,\\n      \"end\": 20,\\n      \"specifiers\": [],\\n      \"source\": {\\n        \"type\": \"Literal\",\\n        \"start\": 7,\\n        \"end\": 20,\\n        \"value\": \"x86intrin.h\",\\n        \"raw\": \"\\\\\"x86intrin.h\\\\\"\"\\n      }\\n    },\\n    {\\n      \"type\": \"FunctionDeclaration\",\\n      \"start\": 22,\\n      \"end\": 198,\\n      \"id\": {\\n        \"type\": \"Identifier\",\\n        \"start\": 31,\\n        \"end\": 40,\\n        \"name\": \"PrefixSum\"\\n      },\\n      \"generator\": false,\\n      \"expression\": false,\\n      \"params\": [\\n        {\\n          \"type\": \"Identifier\",\\n          \"start\": 41,\\n          \"end\": 45,\\n          \"name\": \"curr\"\\n        }\\n      ],\\n      \"body\": {\\n        \"type\": \"BlockStatement\",\\n        \"start\": 47,\\n        \"end\": 198,\\n        \"body\": [\\n          {\\n            \"type\": \"VariableDeclaration\",\\n            \"start\": 53,\\n            \"end\": 87,\\n            \"declarations\": [\\n              {\\n                \"type\": \"VariableDeclarator\",\\n                \"start\": 57,\\n                \"end\": 86,\\n                \"id\": {\\n                  \"type\": \"Identifier\",\\n                  \"start\": 57,\\n                  \"end\": 60,\\n                  \"name\": \"Add\"\\n                },\\n                \"init\": {\\n                  \"type\": \"CallExpression\",\\n                  \"start\": 63,\\n                  \"end\": 86,\\n                  \"callee\": {\\n                    \"type\": \"Identifier\",\\n                    \"start\": 63,\\n                    \"end\": 77,\\n                    \"name\": \"_mm_slli_si128\"\\n                  },\\n                  \"arguments\": [\\n                    {\\n                      \"type\": \"Identifier\",\\n                      \"start\": 78,\\n                      \"end\": 82,\\n                      \"name\": \"curr\"\\n                    },\\n                    {\\n                      \"type\": \"Literal\",\\n                      \"start\": 84,\\n                      \"end\": 85,\\n                      \"value\": 4,\\n                      \"raw\": \"4\"\\n                    }\\n                  ]\\n                }\\n              }\\n            ],\\n            \"kind\": \"let\"\\n          },\\n          {\\n            \"type\": \"ExpressionStatement\",\\n            \"start\": 92,\\n            \"end\": 124,\\n            \"expression\": {\\n              \"type\": \"AssignmentExpression\",\\n              \"start\": 92,\\n              \"end\": 123,\\n              \"operator\": \"=\",\\n              \"left\": {\\n                \"type\": \"Identifier\",\\n                \"start\": 92,\\n                \"end\": 96,\\n                \"name\": \"curr\"\\n              },\\n              \"right\": {\\n                \"type\": \"CallExpression\",\\n                \"start\": 99,\\n                \"end\": 123,\\n                \"callee\": {\\n                  \"type\": \"Identifier\",\\n                  \"start\": 99,\\n                  \"end\": 112,\\n                  \"name\": \"_mm_add_epi32\"\\n                },\\n                \"arguments\": [\\n                  {\\n                    \"type\": \"Identifier\",\\n                    \"start\": 113,\\n                    \"end\": 117,\\n                    \"name\": \"curr\"\\n                  },\\n                  {\\n                    \"type\": \"Identifier\",\\n                    \"start\": 119,\\n                    \"end\": 122,\\n                    \"name\": \"Add\"\\n                  }\\n                ]\\n              }\\n            }\\n          },\\n          {\\n            \"type\": \"ExpressionStatement\",\\n            \"start\": 129,\\n            \"end\": 159,\\n            \"expression\": {\\n              \"type\": \"AssignmentExpression\",\\n              \"start\": 129,\\n              \"end\": 158,\\n              \"operator\": \"=\",\\n              \"left\": {\\n                \"type\": \"Identifier\",\\n                \"start\": 129,\\n                \"end\": 132,\\n                \"name\": \"Add\"\\n              },\\n              \"right\": {\\n                \"type\": \"CallExpression\",\\n                \"start\": 135,\\n                \"end\": 158,\\n                \"callee\": {\\n                  \"type\": \"Identifier\",\\n                  \"start\": 135,\\n                  \"end\": 149,\\n                  \"name\": \"_mm_slli_si128\"\\n                },\\n                \"arguments\": [\\n                  {\\n                    \"type\": \"Identifier\",\\n                    \"start\": 150,\\n                    \"end\": 154,\\n                    \"name\": \"curr\"\\n                  },\\n                  {\\n                    \"type\": \"Literal\",\\n                    \"start\": 156,\\n                    \"end\": 157,\\n                    \"value\": 8,\\n                    \"raw\": \"8\"\\n                  }\\n                ]\\n              }\\n            }\\n          },\\n          {\\n            \"type\": \"ReturnStatement\",\\n            \"start\": 164,\\n            \"end\": 196,\\n            \"argument\": {\\n              \"type\": \"CallExpression\",\\n              \"start\": 171,\\n              \"end\": 195,\\n              \"callee\": {\\n                \"type\": \"Identifier\",\\n                \"start\": 171,\\n                \"end\": 184,\\n                \"name\": \"_mm_add_epi32\"\\n              },\\n              \"arguments\": [\\n                {\\n                  \"type\": \"Identifier\",\\n                  \"start\": 185,\\n                  \"end\": 189,\\n                  \"name\": \"curr\"\\n                },\\n                {\\n                  \"type\": \"Identifier\",\\n                  \"start\": 191,\\n                  \"end\": 194,\\n                  \"name\": \"Add\"\\n                }\\n              ]\\n            }\\n          }\\n        ]\\n      }\\n    }\\n  ],\\n  \"sourceType\": \"module\"\\n}`\nclass Node {\n    constructor(type, name, line) {\n        this.type = type;\n        this.name = name;\n        this.line = line;\n    }\n}\n\nexport function generateAST(editor) {\n    //let code = editor.doc.getValue();\n    // code = cleanExpression(code);\n    // let ast = new Node(\"Program\", 0, code.length);\n    // ast.body = recursiveASTBuilder(code, 0, 0);\n\n    //code = code.replace(new RegExp('int', 'g'), 'let');\n\n    //return acorn.parse(code)\n\n    //Temporary.. We disable AST parsing.. We\"ll come back to AST later.\n    return JSON.parse(testASR)\n}\n\nconst functionName = /([\\w]+): # @.*/;\n\n\nexport function generateASM(rawAsm) {\n    let asm = [];\n    let currentFunction = {\n        body: []\n    };\n    rawAsm.forEach(line => {\n        if (functionName.test(line.text)) {\n            let name = functionName.exec(line.text)[1];\n            currentFunction = new Node(\"Function\", name, 0);\n            currentFunction.body = [];\n            asm.push(currentFunction);\n        }\n        else if (line.text.length > 0 && line.source) {\n            // Remove comments, commas, trim it and then split\n            let command = line.text.trim().replace(/,| #.*/g, '').split(\" \");\n            let name = command[0];\n            let params = command.slice(1, command.length);\n\n            let node = new Node(\"Command\", name, line.source.line);\n            node.params = params;\n            currentFunction.body.push(node);\n        }\n    });\n    return asm\n}\n\n\n// function recursiveASTBuilder(code, start) {\n//     let ast = [];\n//\n//     if (isAssignExpr(code)) {\n//         let tokens = getAssignExpr(code);\n//         let end = start + code.length;\n//         let node = new Node(\"VariableDeclaration\", start, end)\n//         node.kind = tokens[1];\n//         console.log(tokens);\n//         ast.push(node)\n//     }\n//     if (isFuncDeclaration(code)) {\n//         let tokens = getFuncDeclaration(code);\n//         let end = start + code.length;\n//         let node = new Node(\"FunctionDeclaration\", start, end)\n//         ast.push(node)\n//     }\n//     if (isFuncCall(code)) {\n//         let tokens = getFuncCall(code);\n//         let end = start + code.length;\n//         let node = new Node(\"FunctionCall\", start, end)\n//         ast.push(node)\n//     }\n//     if (isReturnExpr(code)) {\n//         let tokens = getReturnExpr(code);\n//         let end = start + code.length;\n//         let node = new Node(\"ReturnExpression\", start, end)\n//         ast.push(node)\n//     }\n//\n//\n//     return ast;\n// }\n//\n// function cleanExpression(s){ //just supress superfluous space and other invisible characters\n//     return (s.replace(/\\s{1,}/g, ' ')).trim();\n// }\n//\n// function extractExpression(s){     //this function extract the different expressions of a given c code, by expression we mean a piece of code situated after a ';' or a '{' and ended either by ';' or by '}'.This extract the expressions at the \"same level\"\n//     s=cleanExpression(s);\n//     var accoladeIndication=0;\n//     var expresions=[];\n//     const delimiters=new Set([';', '}']);\n//     var i=s.indexOf('{')+1,lengthS=s.lastIndexOf('}'); // we first determine the begining and the ending of the piece of c code\n//     var  semicolonPosition=i;\n//     while(i<lengthS){\n//         if (s[i]==='{'){\n//             accoladeIndication++; //indicates if we are not inside an expression\n//         }\n//         if (s[i]==='}'){\n//             accoladeIndication--;\n//         }\n//\n//         if(delimiters.has(s[i]) && accoladeIndication === 0){ // if the caracter is a delimiter of expression and if we are not inside an expression\n//             expresions.push((s.slice(semicolonPosition+1, i)).trim()) //we extract the expression begining from the last delimiter to this delimiter\n//             semicolonPosition=i; // we save the position of this delimiter\n//         }\n//         i++;\n//     }\n//     return expresions;\n// }\n//\n// function extractParameter(s){     //this function extract the different effective parameter of a c function (call function)\n//     s=cleanExpression(s);\n//     var semicolonIndication=0;\n//     var expresions=[];\n//     const delimiters=new Set([',']);\n//     var i=0,lengthS=s.length; // we first determine the begining and the ending of the parameter previously extracted\n//     var  semicolonPosition=i;\n//     while(i<lengthS){\n//         if (s[i]==='('){\n//             semicolonIndication++; //indicates if we are not inside an expression\n//         }\n//         if (s[i]===')'){\n//             semicolonIndication--;\n//         }\n//\n//         if(delimiters.has(s[i]) && semicolonIndication === 0){ // if the caracter is a delimiter of expression and if we are not inside an expression\n//             expresions.push((s.slice(semicolonPosition, i)).trim()) //we extract the expression begining from the last delimiter to this delimiter\n//             semicolonPosition=i+1; // we save the position of this delimiter\n//         }\n//         i++;\n//         if(i===lengthS){\n//             expresions.push((s.slice(semicolonPosition, i)).trim()) //to take the last string\n//         }\n//     }\n//     return expresions;\n// }\n//\n// function processCCode(cCode){\n//     var tab=[];\n//     if(isSimpleExpression(cCode)){\n//         tab=Array.of(cCode);\n//         return tab;\n//     }\n//     if(regexFunctionDeclar.test(cCode)){\n//         var t=extractExpression(cCode);\n//         t.push('body');\n//         tab=Array.of(regexFunctionDeclar.exec(cCode)[2], ['returntype',[regexFunctionDeclar.exec(cCode)[1]]],t.reverse());\n//         for(var j=1; j<tab[2].length; j++){\n//             if (isSimpleExpression(tab[2][j])){\n//                 tab[2][j]=Array.of(tab[2][j]);\n//                 continue;\n//             }\n//             else{\n//                 tab[2][j]=processCCode(tab[2][j]);\n//             }\n//\n//         }\n//         return tab;\n//     }\n//\n//     if(regexFunctionCall.test(cCode)){\n//         var paramString = regexFunctionCall.exec(cCode)[2]\n//         var t=extractParameter(paramString);\n//         t.push('parameters');\n//         tab=Array.of(regexFunctionCall.exec(cCode)[1], t.reverse());\n//         for(var j=1; j<tab[1].length; j++){\n//             if (isSimpleExpression(tab[1][j])){\n//                 tab[1][j]=Array.of(tab[1][j]);\n//                 continue;\n//             }\n//             else{\n//                 tab[1][j]=processCCode(tab[1][j]);\n//             }\n//\n//         }\n//         return tab;\n//     }\n//     if(regexAssignExpr.test(cCode)){\n//         var regArray = regexAssignExpr.exec(cCode)\n//         tab=Array.of('=',[regArray[2],[regArray[1]]], [regArray[3]]);\n//         if (isSimpleExpression(tab[2][0])){\n//             tab[2][0]=Array.of(tab[2][0]);\n//         }\n//         else\n//         {\n//             tab[2][0]=processCCode(tab[2][0]);\n//         }\n//\n//\n//         return tab;\n//     }\n//     if(regexReturnExpr.test(cCode)){\n//         tab=Array.of('return',[regexReturnExpr.exec(cCode)[1]]);\n//         if (isSimpleExpression(tab[1][0])){\n//             tab[1][0]=Array.of(tab[1][0]);\n//         }\n//         else\n//         {\n//             tab[1][0]=processCCode(tab[1][0]);\n//         }\n//\n//\n//         return tab;\n//     }\n//\n//\n// }\n//\n// function isSimpleExpression(s){\n//     return !(isFuncDeclaration(s)||isFuncCall(s)||isAssignExpr(s)||isReturnExpr(s));\n// }\n//\n// function identifyNatureOfExpr(s){\n//     var regex=/^\\s*(?:void|char|uint8_t|short|int|long|float|double|signed|unsigned|Bool|Complex|__m128|__m128d|__m128i|__m256|__m256d|__m256i|__m512|__m512d|__m512i)\\s+(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s*\\(\\s*(?:void|char|uint8_t|short|int|long|float|double|signed|unsigned|Bool|Complex|__m128|__m128d|__m128i|__m256|__m256d|__m256i|__m512|__m512d|__m512i)\\s+(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s*(?:,(?:void|char|uint8_t|short|int|long|float|double|signed|unsigned|Bool|Complex|__m128|__m128d|__m128i|__m256|__m256d|__m256i|__m512|__m512d|__m512i)\\s+(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s*)*\\s*(?:\\)\\s*(?=\\{))/;\n// }\n//\n// const regexFunctionDeclar=/^\\s*([_$a-zA-Z][_$a-zA-Z0-9]*)\\s+([_$a-zA-Z][_$a-zA-Z0-9]*)\\s*\\(\\s*(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s+\\*?(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s*(?:,(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s+\\*?(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s*)*\\s*(?:\\)\\s*(?=\\{))/;\n// const regexFunctionCall=/^\\s*([_$a-zA-Z][_$a-zA-Z0-9]*)\\s*\\((.*)(?=\\)$|\\)(?=;))/;\n// const regexReturnExpr=/^\\s*return\\s+(.*)/;\n// const regexAssignExpr=/^\\s*(?:([_a-zA-Z][\\._a-zA-Z0-9]*)\\s+)?([\\*_$a-zA-Z][\\._a-zA-Z0-9]*)\\s*=\\s*(.*)/;\n//\n// function isFuncDeclaration(code) {\n//     return regexFunctionDeclar.test(code)\n// }\n// function isFuncCall(code) {\n//     return regexFunctionCall.test(code)\n// }\n// function isReturnExpr(code) {\n//     return regexReturnExpr.test(code)\n// }\n// function isAssignExpr(code) {\n//     return regexAssignExpr.test(code)\n// }\n// function getFuncDeclaration(code) {\n//     return regexFunctionDeclar.exec(code);\n// }\n// function getFuncCall(code) {\n//     return regexFunctionCall.exec(code);\n// }\n// function getReturnExpr(code) {\n//     return regexReturnExpr.exec(code);\n// }\n// function getAssignExpr(code) {\n//     return regexAssignExpr.exec(code);\n// }\n","import React, {Component} from 'react';\nimport styled from 'styled-components'\nimport cog from \"../Images/cog.svg\";\nimport anime from \"animejs\";\n\nconst Cog = styled.div`\n    content: ${({url}) => 'url(' + url + ');'}\n    height: 40vh;\n    margin: 30vh auto;\n    color: var(--dark-main)\n`\n\nexport default class WaitingScreen extends Component {\n\n    constructor() {\n        super();\n\n        this.cog = React.createRef();\n    }\n\n    componentDidMount() {\n        this.cogAnim = anime({\n            targets: this.cog.current,\n            loop: true,\n            rotate: '360deg',\n            duration: 4000,\n            easing: 'linear'\n        })\n    }\n\n    render() {\n        return <Cog ref={this.cog} url={cog}/>\n    }\n}","import React, {Component} from 'react';\nimport * as _ from \"lodash\";\nimport SortableTree from \"react-sortable-tree\";\nimport 'react-sortable-tree/style.css';\nimport '../css/ASTVisualizer.css'\n\nlet getChildren = (node) => {\n\n    switch (node.type) {\n\n        case 'Program':\n            return node.body;\n\n        case 'VariableDeclaration':\n            return node.declarations;\n\n        case 'VariableDeclarator':\n            return node.init ? [node.id, node.init] : [node.id];\n\n        case 'ExpressionStatement':\n            return [node.expression];\n\n        case 'BinaryExpression':\n            return [node.left, node.right];\n\n        case 'AssignmentExpression':\n            return [node.left, node.right];\n\n        case 'CallExpression':\n            return [node.callee, {type: 'arguments', arguments: node.arguments}];\n\n        case 'arguments':\n            return node.arguments;\n\n        case 'MemberExpression':\n            return [node.object, node.property];\n\n        case 'NewExpression':\n            return node.arguments;\n\n        case 'ObjectExpression':\n            return node.properties;\n\n        case 'Property':\n            return [node.key, node.value];\n\n        case 'FunctionDeclaration':\n            return [node.body];\n\n        case 'FunctionExpression':\n            return [node.body];\n\n        case 'BlockStatement':\n            return node.body;\n\n        case 'ReturnStatement':\n            return node.argument ? [node.argument] : [];\n\n        case 'UnaryExpression':\n            return [node.argument];\n\n        case 'IfStatement':\n            return [node.test, node.consequent];\n\n        case 'ConditionalExpression':\n            return [node.test, node.consequent, node.alternate];\n\n        default:\n            return [];\n    }\n};\n\nlet getLabel = (node) => {\n\n    switch (node.type) {\n\n        case 'Identifier':\n            return node.name;\n\n        case 'Literal':\n            return node.raw;\n\n        case 'UnaryExpression':\n            return node.operator;\n\n        case 'BinaryExpression':\n            return node.operator;\n\n        case 'AssignmentExpression':\n            return node.operator;\n\n        case 'FunctionDeclaration':\n            var params1 = _.map(node.params, 'name').join(',');\n            return 'function ' + (!(!(node.id && node.id.name) && !'')) + '(' + params1 + ')';\n\n        case 'FunctionExpression':\n            var params2 = _.map(node.params, 'name').join(',');\n            return 'function ' + (!(!(node.id && node.id.name) && !'')) + '(' + params2 + ')';\n\n        default:\n            return node.type;\n    }\n};\n\nclass AstVisualizer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            treeData: [],\n        };\n\n    }\n\n    componentDidMount() {\n        this.setState({treeData: this.buildTree(this.props.ast)})\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({treeData: this.buildTree(nextProps.ast)})\n    }\n\n    recursiveBuilder = (node) => {\n        let children = getChildren(node);\n        let tree = [];\n        if (children === [])\n            return children;\n        children.forEach((child) => {\n            tree.push({\n                title: getLabel(child),\n                children: this.recursiveBuilder(child),\n                expanded: true,\n                type: child.type,\n                start: child.start,\n                end: child.end\n            });\n        });\n        return tree\n    };\n\n    buildTree = (ast) => {\n        let tree = [];\n        tree.push({\n            title: getLabel(ast),\n            children: this.recursiveBuilder(ast),\n            expanded: true,\n            type: ast.type,\n            start: ast.start,\n            end: ast.end\n        });\n        return tree\n    };\n\n    highlightCode = (start, end) => {\n        let codeEditor = this.props.cm.editor.doc;\n        const fromIndex = codeEditor.posFromIndex(start);\n        const toIndex = codeEditor.posFromIndex(end);\n        codeEditor.markText(fromIndex, toIndex, {\n            className: 'highlighted-code'\n        });\n    };\n\n    clearHighlightedCode = () => {\n        this.props.cm.editor.doc.getAllMarks().forEach((m) => {\n            m.clear()\n        })\n    };\n\n    render() {\n        return (\n            <SortableTree\n                treeData={this.state.treeData}\n                onChange={treeData => this.setState({treeData})}\n                canDrag={false}\n                generateNodeProps={({node}) => {\n                    return {\n                        className: node.type,\n                        onMouseEnter: () => this.highlightCode(node.start, node.end),\n                        onMouseLeave: () => this.clearHighlightedCode()\n                    };\n                }}\n            />\n        );\n    }\n}\n\nexport default AstVisualizer;","import React, {Component} from 'react';\nimport styled from 'styled-components'\nimport CLogo from \"../Images/c-programming.svg\";\nimport anime from \"animejs\";\n\n\nconst Image = styled.div`\n    content: ${({url}) => 'url(' + url + ');'}\n    width: 40vmin;\n    margin: 8vh auto;\n`\nconst AppTitle = styled.div`\n    text-align: center;\n    font-weight: 300;\n    font-size: calc(12px + 3.6vw);\n    letter-spacing: 1.8px;\n    margin-top: 40px;\n    border: medium none;\n    margin-bottom: 20px;\n`\nconst AppDescription = styled.div`\n    text-align: center;\n    font-weight: 300;\n    margin: 0px auto;\n    font-size: calc(8px + 0.91vw);\n`\nconst Container = styled.div`\n`\n\nconst GHButton = styled.button`\n    padding: 3px 10px 3px 8px;\n    font-size: 16px;\n    line-height: 22px;\n    border-radius: 4px;\n    text-shadow: 0 1px 0 #fff;\n    white-space: nowrap;\n    cursor: pointer;\n    color: #333;\n    background-repeat: no-repeat;\n    border: 1px solid #d5d5d5;\n    font-weight: 700;\n    vertical-align: top;\n    margin: 0 10px;\n    \n    :hover{\n        text-decoration: none;\n        background-color: #ddd;\n        background-image: -webkit-gradient(linear,left top,left bottom,color-stop(0,#eee),color-stop(100%,#ddd));\n        background-image: -webkit-linear-gradient(top,#eee 0,#ddd 100%);\n        background-image: -moz-linear-gradient(top,#eee 0,#ddd 100%);\n        background-image: -ms-linear-gradient(top,#eee 0,#ddd 100%);\n        background-image: -o-linear-gradient(top,#eee 0,#ddd 100%);\n        background-image: linear-gradient(to bottom,#eee 0,#ddd 100%);\n        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#eeeeee', endColorstr='#dddddd', GradientType=0);\n        border-color: #ccc;\n    }\n`\n\nconst ButtonGroup = styled.div`\n    margin-top: 40px;\n    text-align: center;\n`\n\nexport default class FrontPage extends Component {\n    constructor() {\n        super();\n\n        this.image = React.createRef();\n        this.imageContainer = React.createRef();\n    }\n\n    componentDidMount() {\n        let scaleAnime = anime({\n            easing: \"easeOutCubic\",\n            targets: this.imageContainer.current,\n            direction: 'alternate',\n            duration: 2000,\n            scale: '.9',\n            loop: true\n        });\n\n        let spinAnime = anime({\n            targets: this.image.current,\n            delay: 6000,\n            duration: 4000,\n            rotate: '360deg',\n            loop: true\n        })\n    }\n\n\n    render() {\n        return <Container>\n\n            <div ref={this.imageContainer}>\n                <Image url={CLogo} ref={this.image}/>\n            </div>\n\n            <AppTitle>The Ultimate SIMD visualizer</AppTitle>\n            <AppDescription>\n                Built by <strong>Jérémie Piotte</strong>, <strong>Daniel Lemire</strong> and <strong>Pierre Marie\n                Ntang</strong>\n            </AppDescription>\n            <ButtonGroup>\n                <a href=\"https://github.com/piotte13/SIMD-Visualiser\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <GHButton>View on GitHub</GHButton>\n                </a>\n                <iframe\n                    src=\"https://ghbtns.com/github-btn.html?user=piotte13&repo=SIMD-Visualiser&type=star&count=true&size=large\"\n                    frameBorder=\"0\" scrolling=\"0\" width=\"160px\" height=\"30px\"/>\n            </ButtonGroup>\n        </Container>;\n    }\n}","import React, {Component} from 'react';\nimport styled from \"styled-components\";\nimport SadRobot from \"../Images/cryingboy.svg\";\n\nconst ErrorPageContainer = styled.div`\n    padding: 50px;\n`\n\nconst TextJumbo = styled.div`\n    font-size: 60px;\n    font-weight: 700;\n    color: rgb(72, 72, 72);\n    margin-bottom: 15px;\n`\n\nconst ErrorMessage = styled.div`\n    font-size: 32px;\n    font-weight: normal;\n    color: rgb(72, 72, 72);\n    margin-bottom: 15px;\n    margin-top: 25px;\n`\n\nconst ErrorPosition = styled.div`\n    font-size: 14px;\n    font-weight: bold;\n    color: #767676;\n    margin-bottom: 15px;\n    margin-top: 25px;\n`\nconst Robot = styled.img`\n    position: absolute;\n    bottom: 0;\n    right: 0;\n    width: 50vh;\n`\n\nclass ErrorHandler extends Component {\n\n    constructor(props) {\n        super(props)\n        console.log(props.error)\n        if (props.error.length !== 0) {\n            this.highlightCode()\n        }\n    }\n\n    componentWillUnmount() {\n        this.clearHighlightedCode()\n    }\n\n    highlightCode = () => {\n        const line = this.props.error[0].tag.line - 1;\n        const lineLength = this.props.cm.editor.getLine(line).length;\n        this.props.cm.editor.doc.markText({line, ch: 0}, {line, ch: lineLength}, {\n            className: 'highlighted-code'\n        });\n    };\n\n    clearHighlightedCode = () => {\n        this.props.cm.editor.doc.getAllMarks().forEach((m) => {\n            m.clear()\n        })\n    };\n\n    getErrorMessage = () => {\n        return this.props.error[0].tag.text;\n    }\n    getErrorPosition = () => {\n        return <div>\n            <p>Line: {this.props.error[0].tag.line} </p>\n            <p> Column: {this.props.error[0].tag.column} </p>\n        </div>\n\n    }\n\n    render() {\n        return (\n            <ErrorPageContainer>\n                <TextJumbo>Oops!</TextJumbo>\n                <ErrorMessage>\n                    {this.getErrorMessage()}\n                </ErrorMessage>\n                <ErrorPosition>\n                    {this.getErrorPosition()}\n                </ErrorPosition>\n                <Robot src={SadRobot}/>\n            </ErrorPageContainer>\n        );\n    }\n}\n\nexport default ErrorHandler;","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from \"react\";\nimport \"../css/Tabs.css\"\n\nexport class Tabs extends Component {\n    state = {\n        selected: this.props.selected\n    };\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return this.props !== nextProps || this.state !== nextState;\n    }\n\n    handleClick = (index, event) => {\n        event.preventDefault();\n        this.setState({\n            selected: index\n        });\n    }\n    _renderTitles = () => {\n        function labels(child, index) {\n            var activeClass = (this.state.selected === index ? 'active' : '');\n            return (\n                <li key={index}>\n                    <a href=\"#\"\n                       className={activeClass}\n                       onClick={this.handleClick.bind(this, index)}>\n                        {child.props.label}\n                    </a>\n                </li>\n            );\n        }\n\n        return (\n            <ul className=\"tabs__labels\">\n                {this.props.children.map(labels.bind(this))}\n            </ul>\n        );\n    };\n\n    _renderContent = () => {\n        return (\n            <div className=\"tabs__content\">\n                {this.props.children[this.state.selected]}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <div className=\"tabs\">\n                {this._renderTitles()}\n                {this._renderContent()}\n            </div>\n        );\n    }\n}\n\nexport class Pane extends Component {\n    render() {\n        return (\n            <div>\n                {this.props.children}\n            </div>\n        );\n    }\n};\n","import * as _ from \"lodash\";\n\nexport const NB_REGISTERS = 32;\nexport const VAR_SIZE = 8; //Octets\nexport const TYPE_LENGTH = {\n    x: 512 / (4 * VAR_SIZE),\n    y: 512 / (2 * VAR_SIZE),\n    z: 512 / VAR_SIZE\n};\n\nclass Registry {\n    constructor() {\n        // the array _keys contains NB_REGISTERS arrays\n        // of size 512 / VAR_SIZE filled with byte-sized values (randomized)\n        this._keys = new Array(NB_REGISTERS).fill(0).map(() =>\n            new Array(TYPE_LENGTH[\"z\"]).fill(0).map((val, i) => i)\n        );\n    }\n\n    // stores the value in array into the \"register\" where register is something like xmm0\n    set = (register, array) => {\n        const idx = +register.substring(3); // should  be the number of the register, between 0 and 32\n        const type = register[0];// should be x, y, z\n\n        this._keys[idx].splice(0, TYPE_LENGTH[type], ...array);\n    };\n\n    // get either an x, a y or a z register, where \"register\" is a string like xmm0\n    get = (register) => {\n        const idx = +register.substring(3);// number of the register, should be between 0 and 32 on x64\n        const type = register[0];// should be x, y or z\n        //return the last n elements of the register.\n        return this._keys[idx].slice(0, TYPE_LENGTH[type])// slice apparently copies the value\n    };\n\n    // clear resets the \"registers\" to randomized valued (?)\n    clear = () => {\n        this._keys.map(() =>\n            new Array(TYPE_LENGTH[\"z\"]).fill(0).map(() =>\n                _.random(1, 255)\n            ));\n    }\n}\n\nconst instance = new Registry();\nObject.freeze(instance);\n\nexport default instance;\n","// should be in a distinct file\nimport * as _ from \"lodash\";\nimport uint32 from \"uint32\";\n\n\nlet toUINT = (array, toBitWidth, fromType, fromBitWidth) => {\n\n    let output = [];\n\n    if (toBitWidth === 32) {\n        // we have four bytes per 32-bit int\n        output = _.times(array.length / 4).map(i =>\n            uint32.fromBytesBigEndian(array[4 * i], array[4 * i + 1], array[4 * i + 2], array[4 * i + 3])\n        );\n    }\n\n    else if (toBitWidth === 8) {\n        // Temporary... For testing purposes only.  Should and will be perfected.\n        if (fromBitWidth === 8)\n            output = array.map(value => Math.abs(value)) //new Uint8Array(array);\n\n        else if (fromBitWidth === 32) {\n            output = new Array(array.length * 4);\n            // we have four bytes per 32-bit ints\n            for (var z = 0; z < array.length; z++) {\n                output[4 * z] = uint32.getByteBigEndian(array[z], 3);\n                output[4 * z + 1] = uint32.getByteBigEndian(array[z], 2);\n                output[4 * z + 2] = uint32.getByteBigEndian(array[z], 1);\n                output[4 * z + 3] = uint32.getByteBigEndian(array[z], 0);\n            }\n        }\n    }\n\n    return output\n};\n\nlet toINT = (array, toBitWidth, fromType, fromBitWidth) => {\n    // TODO\n    return array\n};\n\nlet toDouble = (array, toBitWidth, fromType, fromBitWidth) => {\n    // TODO\n    return array\n};\n\n\nexport function convert(data, toType, toBitWidth, fromType, fromBitWidth) {\n    let values = [];\n\n    switch (toType) {\n        case \"uint\":\n            values = toUINT(data, toBitWidth, fromType, fromBitWidth);\n            break;\n        case \"int\":\n            values = toINT(data, toBitWidth, fromType, fromBitWidth);\n            break;\n        case \"double\":\n            values = toDouble(data, toBitWidth, fromType, fromBitWidth);\n            break;\n        default:\n            values = data.slice(0);\n    }\n\n    return values;\n}\n\n\nexport function convertToStrings(data, toType, toBitWidth, base = 16, precision = 0, fromType = \"int\", fromBitWidth = 8) {\n\n    let values = convert(data, toType, toBitWidth, fromType, fromBitWidth);\n    //Convert values to given base representation.  Ex: Hex, decimal, binary...\n\n    _.mixin({'toBase': (val, base) => val.toString(base)});\n\n    return values.map(value =>\n        _.chain(value)\n            .round(precision)\n            .toBase(base)\n            .padStart(toBitWidth / 4, '0')  //to be perfected.\n            .toUpper()\n            .value()\n    );\n};","import React, {Component} from \"react\";\nimport * as _ from \"lodash\";\nimport \"../css/Vector.css\";\nimport {convertToStrings} from \"../Utils/Converter\";\n\nexport default class Vector extends Component {\n\n    static defaultProps = {\n        type: \"uint\",\n        bitWidth: 32,\n        data: [],\n        base: 10,\n        shiftData: [],\n        numbersRef: () => {\n        },\n        vectorRef: () => {\n        }\n\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            width: window.innerWidth\n        };\n\n        this.numbersRef = React.createRef();\n        this.vectorRef = React.createRef();\n        props.numbersRef(this.numbersRef);\n        props.vectorRef(this.vectorRef);\n    }\n\n    componentDidMount() {\n        this.updateWidth();\n        window.addEventListener(\"resize\", this.updateWidth);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateWidth);\n    }\n\n    updateWidth = () => {\n        this.setState({width: window.innerWidth});\n    };\n\n    render() {\n        let {data, shiftData, type, bitWidth, base} = this.props;\n\n        let values = convertToStrings(data, type, bitWidth, base);\n        let shiftValues = convertToStrings(shiftData, type, bitWidth, base);\n        let elCount = values.length;\n        let rectHeight = 50;\n        let padding = 20;\n        let rectLen = (this.state.width / 2) - padding - 80;\n        return (\n            <svg width={rectLen + padding} height={rectHeight + padding} ref={this.vectorRef}\n                 viewBox={`0 0 ${rectLen + padding} ${rectHeight + padding}`} xmlns=\"http://www.w3.org/2000/svg\">\n                <rect x={padding / 2} y={padding / 2} width={rectLen} height={rectHeight} rx=\"3\" ry=\"3\"\n                      className=\"vector-container\"/>\n                {\n                    _.times(elCount - 1, Number).map(i => {\n                        let x = padding / 2 + (rectLen / elCount) * (i + 1);\n                        return <line key={i} x1={x} y1={padding / 2} x2={x} y2={rectHeight + padding / 2}\n                                     className=\"vector-line\"/>\n                    })\n                }\n                <svg width={rectLen} height={rectHeight} x={padding / 2} y={padding / 2}\n                     viewBox={`0 0 ${rectLen} ${rectHeight}`}>\n                    <g ref={this.numbersRef}>\n                        {\n                            values.map((number, i) => {\n                                let x = (rectLen / elCount) * i;\n                                return (\n                                    <svg key={i} width={rectLen / elCount} height={rectHeight} x={x}>\n                                            <text x=\"50%\" y=\"50%\" dy=\".3em\" className=\"vector-values\">{number}</text>\n                                        </svg>\n                                )\n                            })\n                        }\n                        {\n                            shiftValues.map((number, i) => {\n                                let x = (rectLen / elCount) * i;\n                                let offset = (rectLen / elCount) * shiftValues.length;\n                                return (\n                                    <React.Fragment key={i}>\n                                        <svg width={rectLen / elCount} height={rectHeight} x={x + rectLen}>\n                                            <text x=\"50%\" y=\"50%\" dy=\".3em\"\n                                                  className=\"shift-values-right\">{shiftValues[i]}</text>\n                                        </svg>\n                                        <svg width={rectLen / elCount} height={rectHeight} x={x - offset}>\n                                            <text x=\"50%\" y=\"50%\" dy=\".3em\"\n                                                  className=\"shift-values-left\">{shiftValues[i]}</text>\n                                        </svg>\n                                    </React.Fragment>\n                                )\n                            })\n                        }\n                    </g>\n                </svg>\n            </svg>\n        );\n    }\n}","import React, {Component} from \"react\";\nimport * as Registry from \"../Utils/Registry\";\nimport Vector from \"./Vector\";\nimport anime from 'animejs';\n\nexport default class Ret extends Component {\n\n    static defaultProps = {\n        type: \"uint\",\n        bitWidth: 32,\n        base: 16,\n    };\n\n    constructor(props) {\n        super(props);\n\n        let registry = Registry.default;\n        //Ret returns value on top of the stack.  For now we will assume the value is always 128 bits... (Xmm)\n        let returnValue = registry.get('xmm0');\n\n        this.state = {\n            returnValue,\n        };\n\n        this.vector = React.createRef();\n        this.computeCommand();\n    }\n\n    getAnimation() {\n\n        //We make an empty timeline because sequentialComponent needs to know when to jump to the next command.\n        let timeline = anime.timeline({\n            easing: \"linear\",\n            autoplay: false,\n        });\n\n        timeline\n            .add({\n                targets: this.vector.current,\n                duration: 1000\n            });\n\n        let eternalGlow = anime.timeline({\n            easing: \"linear\",\n            loop: true,\n            autoplay: true,\n            direction: 'alternate'\n        });\n\n        eternalGlow // Creates the glow arround the returned vector (glowing box shadow)\n            .add({\n                targets: this.vector.current,\n                filter: [\"drop-shadow(0px 0px 10px rgba(42, 54, 59, 1))\", \"drop-shadow(0px 0px 1px rgba(42, 54, 59, .5))\"],\n                duration: 1000\n            });\n\n        return timeline;\n    }\n\n    //Compute the command and set the registry.\n    computeCommand() {\n\n    }\n\n    render() {\n        let {returnValue} = this.state;\n        let {type, bitWidth, base} = this.props;\n\n        return (\n            <Vector type={type}\n                    bitWidth={bitWidth}\n                    base={base}\n                    data={returnValue}\n                    vectorRef={(ref) => this.vector = ref}/>\n        );\n    }\n}\n","import React, {Component} from \"react\";\n\nexport default class UnsupportedCommand extends Component {\n\n    render() {\n        return (\n            <div>Unsupported Command: \"{this.props.name}\"</div>\n        );\n    }\n}","import React, {Component} from \"react\";\nimport styled from \"styled-components\";\nimport * as Registry from \"../Utils/Registry\";\n\nconst FunctionContainer = styled.div`\n`\nconst FunctionName = styled.div`\n    font-size: 32px;\n    font-weight: normal;\n    color: rgb(72, 72, 72);\n    margin-bottom: 15px;\n    text-align: center;\n`\n\nexport default class Function extends Component {\n\n    constructor(props) {\n        super(props);\n\n        //Reset the registry because this is a new function!\n        let registry = Registry.default;\n        registry.clear()\n    }\n\n\n    render() {\n        return (\n            <FunctionContainer>\n                <FunctionName>{this.props.name}</FunctionName>\n                <hr/>\n            </FunctionContainer>\n        );\n    }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport anime from 'animejs';\n\nconst Container = styled.div`\n  margin: 40px 0 20px 0;\n  opacity: 0;\n  text-align: center;\n  \n  \n  \n  :first-child, last-child{\n    margin: 20px 0;\n  }\n`\n\nexport default class SequentialComponent extends React.Component {\n\n    constructor() {\n        super();\n        // create li DOM reference\n        this.container = React.createRef();\n        this.component = React.createRef();\n    }\n\n    allAnimationCompleted() {\n        this.props.onComplete(this.props.index);\n        //Remove sequential highlight since the component is done animating.\n        if (this.sequentialHighlight)\n            this.sequentialHighlight.clear();\n    }\n\n    componentDidMount() {\n        this.childAnimation = false;\n        let c = this.component.current;\n        if (c && c.getAnimation) {\n            this.childAnimation = c.getAnimation();\n        }\n\n        this.animeRef = anime({\n            targets: this.container.current,\n            easing: \"easeOutCubic\",\n            autoplay: false,\n            translateY: ['5vh', 0],\n            duration: 500,\n            delay: 800,\n            opacity: 1,\n            complete: () => {\n                if (this.childAnimation) {\n                    this.childAnimation.restart();\n                    this.timelineFinished = this.childAnimation.finished.then(() => this.allAnimationCompleted());\n                }\n                else\n                    this.props.onComplete(this.props.index)\n            }\n        });\n\n        if (this.props.shouldBeVisible) {\n            this.animeRef.restart()\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n        if (this.props.play === true && !nextProps.play) {\n            if (this.childAnimation) {\n                this.childAnimation.pause()\n            }\n        }\n        else if (!this.props.play === true && nextProps.play && nextProps.shouldBeVisible) {\n            if (this.childAnimation) {\n                this.childAnimation.play()\n            }\n        }\n\n        if (!nextProps.shouldBeVisible && this.props.shouldBeVisible) {\n            //Component is being hidden. Rewind animation.\n            if (this.sequentialHighlight)\n                this.sequentialHighlight.clear();\n            this.animeRef.seek(0);\n            if (this.childAnimation) {\n                this.childAnimation.seek(0);\n                this.childAnimation = this.component.current.getAnimation()\n            }\n        }\n        if (nextProps.shouldBeVisible && !this.props.shouldBeVisible) {\n            //Start Animation.\n            this.animeRef.restart();\n            //Highlight code to show user, which part of the code is being represented by this animation.\n            this.sequentialHighlight = this.highlightCode();\n\n        }\n    }\n\n    highlightCode = (isHover = false) => {\n        let line = this.component.current.props.line;\n        if (line) {\n            const lineLength = this.props.cm.editor.getLine(line).length;\n            return this.props.cm.editor.doc.markText({line, ch: 0}, {line, ch: lineLength}, {\n                className: isHover ? 'highlighted-code' : 'sequential-highlighted-code'\n            });\n        }\n        return null\n    };\n\n    onEnter = () => {\n        this.hoverHighlight = this.highlightCode(true);\n        if (this.childAnimation) {\n            this.isLoop = this.childAnimation.loop;\n            this.childAnimation.loop = true;\n            this.childAnimation.restart();\n        }\n    };\n\n    onLeave = () => {\n        if (this.hoverHighlight) this.hoverHighlight.clear();\n        if (this.childAnimation) {\n            this.childAnimation.loop = this.isLoop;\n            this.childAnimation.restart();\n            this.childAnimation.seek(Infinity);\n        }\n    }\n\n    render() {\n        return (\n            <Container\n                ref={this.container}\n                onMouseEnter={this.onEnter}\n                onMouseLeave={this.onLeave}\n            >\n                {React.cloneElement(this.props.component, {ref: this.component})}\n            </Container>\n        );\n    }\n}\n","import React, {Component} from \"react\";\nimport * as Registry from \"../Utils/Registry\";\nimport Vector from \"./Vector\";\nimport * as _ from \"lodash\";\nimport anime from 'animejs';\n\nconst SHIFT_INDEX = 2;\nconst INPUT_INDEX = 1;\nconst OUTPUT_INDEX = 0;\n\nexport default class Shift extends Component {\n\n    static defaultProps = {\n        type: \"uint\",\n        bitWidth: 32,\n        base: 16,\n        direction: 'left',\n        // if no shiftData provided, default to zeroes.\n        shiftData: new Array(64).fill(0)\n    };\n\n    constructor(props) {\n        super(props);\n\n        let registry = Registry.default;\n        let shiftLen = props.params[SHIFT_INDEX];\n        let input = registry.get(props.params[INPUT_INDEX]);\n\n        this.state = {\n            shiftLen,\n            input,\n            output: []\n        };\n        this.computeCommand();\n    }\n\n    getAnimation() {\n        let directionValue = {\"right\": 1, \"left\": -1};\n        let {bitWidth} = this.props;\n        let {shiftLen, input} = this.state;\n        //In order to make it responsive, we have to calculate the shift in percentage of the vector length. Clever.\n        let shiftPercentage = 100 * directionValue[this.props.direction] * shiftLen * bitWidth / (input.length * 8);\n\n        this.timeline = anime.timeline({\n            easing: \"easeOutCubic\",\n            loop: false,\n            autoplay: false\n        });\n\n        this.timeline\n            .add({\n                targets: this.numbersRef.current,\n                translateX: `${shiftPercentage}%`,\n                duration: 2000,\n                delay: 300\n            });\n\n        return this.timeline;\n    }\n\n    //Compute the command and set the registry.\n    computeCommand() {\n        let registry = Registry.default;\n        let {params, bitWidth} = this.props;\n        let shiftLen = params[SHIFT_INDEX] * (bitWidth / 8);\n        let input = registry.get(params[INPUT_INDEX]);\n        let output = _.cloneDeep(input);\n        output.push(...new Array(shiftLen).fill(0));\n        output = output.slice(-input.length);\n        registry.set(params[OUTPUT_INDEX], output);\n\n        //this.setState({output, input, shiftLen});\n    }\n\n    render() {\n        let {input} = this.state;\n        let {type, bitWidth, base, shiftData} = this.props;\n\n        return (\n            <Vector type={type}\n                    bitWidth={bitWidth}\n                    base={base}\n                    data={input}\n                    shiftData={shiftData}\n                    numbersRef={(ref) => this.numbersRef = ref}/>\n        );\n    }\n}","import React, {Component} from \"react\";\nimport Vector from \"./Vector\";\nimport * as Registry from \"../Utils/Registry\";\nimport {convert} from \"../Utils/Converter\";\nimport {Row, Col, Container} from 'reactstrap';\nimport * as _ from \"lodash\";\n\n\nimport anime from \"animejs\";\nimport uint32 from \"uint32\";\n\nconst INPUT1_INDEX = 1;\nconst INPUT2_INDEX = 2;\nconst OUTPUT_INDEX = 0;\n\nexport default class Arithmetic extends Component {\n    static defaultProps = {\n        type: \"uint\",\n        bitWidth: 32,\n        base: 16,\n        operation: 'add',\n    };\n\n    constructor(props) {\n        super(props);\n\n        let registry = Registry.default;\n        let input1 = registry.get(props.params[INPUT1_INDEX]);\n        let input2 = registry.get(props.params[INPUT2_INDEX]);\n        let input1_converted = convert(input1, props.type, props.bitWidth, 'uint', 8);\n        let input2_converted = convert(input2, props.type, props.bitWidth, 'uint', 8);\n        let output_converted = new Array(input1_converted.length);\n        // why not do the computation in the constructor? This seems simpler. No multiple render calls.\n        for (var i = 0; i < input1_converted.length; i++) {\n            output_converted[i] = uint32.addMod32(input1_converted[i], input2_converted[i])\n        }\n        let output = convert(output_converted, 'uint', 8, props.type, props.bitWidth);\n        registry.set(props.params[OUTPUT_INDEX], output);\n\n        this.state = {\n            input1,\n            input2,\n            output,\n            input1_converted,\n            input2_converted,\n            output_converted,\n            showOutput: false\n        };\n        this.state.output = _.cloneDeep(input2);\n        // console.log(input1_converted, output_converted);\n        // let test1 = convert(input1_converted, 'uint', 8, props.type, props.bitWidth);\n        // let test2 = convert(output_converted, 'uint', 8, props.type, props.bitWidth);\n        // test1 = convert(test1, props.type, props.bitWidth, 'uint', 8);\n        // test2 = convert(test2, props.type, props.bitWidth, 'uint', 8);\n        // console.log(test1, test2);\n\n        this.vector1 = React.createRef();\n        this.vector2 = React.createRef();\n        this.vector3 = React.createRef();\n        this.vector4 = React.createRef();\n        this.equals = React.createRef();\n    }\n\n    getAnimation() {\n\n        let timeline = anime.timeline({\n            easing: \"easeOutCubic\",\n            loop: false,\n            autoplay: false\n        });\n        let {output_converted} = this.state;\n        let input2_converted = _.cloneDeep(this.state.input2_converted);\n        let mock = {nextTick: 0, currentTick: 0};\n\n        timeline\n            .add({\n                targets: this.equals.current,\n                opacity: [0, 1],\n                duration: 500,\n                offset: 500\n            })\n            .add({\n                targets: this.vector3.current,\n                translateY: [-95, 0],\n                duration: 1500,\n                offset: \"+=500\"\n            })\n            .add({\n                targets: this.vector4.current,\n                translateY: [-258, -70],\n                duration: 1500,\n                offset: \"-=1500\"\n            })\n            .add({\n                targets: mock,\n                //find the maximum difference between input and output. this tells us the range of the animation (number of ticks).\n                nextTick: _.max(input2_converted.map((v, i) => Math.abs(output_converted[i] - v))),\n                duration: 2000,\n                round: 1,\n                offset: \"-=200\",\n                begin: () => {\n                    this.setState({output: _.cloneDeep(this.state.input2)});\n                },\n                update: (animation) => {\n                    //Update() is not called only upon update of the target... So we need to check if it changed...\n                    if (animation.began && mock.nextTick !== mock.currentTick) {\n                        input2_converted = input2_converted.map((val, i) => {\n                            let diff = output_converted[i] - val;\n                            if (diff > 0) return val + 1;\n                            if (diff < 0) return val - 1;\n                            return val;\n                        });\n                        mock.currentTick = mock.nextTick;\n                        this.setState({output: convert(input2_converted, 'uint', 8, this.props.type, this.props.bitWidth)});\n                    }\n                }\n            });\n\n        return timeline;\n    }\n\n\n    render() {\n        let {input1, input2, output} = this.state;\n        let {type, bitWidth, base} = this.props;\n        let colCount = input1.length * 8 / bitWidth;\n\n        return (\n            <div style={{'height': '260px'}}>\n                <Vector type={type}\n                        bitWidth={bitWidth}\n                        base={base}\n                        data={input1}\n                        vectorRef={(ref) => this.vector1 = ref}\n                />\n                <Container>\n                    <Row>\n                        {_.times(colCount).map(i => <Col key={i}>+</Col>)}\n                    </Row>\n                </Container>\n                <Vector type={type}\n                        bitWidth={bitWidth}\n                        base={base}\n                        data={input2}\n                        vectorRef={(ref) => this.vector2 = ref}\n                />\n                <div ref={this.equals}>\n                    <Container>\n                        <Row>\n                            {_.times(colCount).map(i => <Col key={i}>=</Col>)}\n                        </Row>\n                    </Container>\n                </div>\n                <Vector type={type}\n                        bitWidth={bitWidth}\n                        base={base}\n                        data={output}\n                        vectorRef={(ref) => this.vector3 = ref}\n                />\n                <Vector type={type}\n                        bitWidth={bitWidth}\n                        base={base}\n                        data={output}\n                        vectorRef={(ref) => this.vector4 = ref}\n                />\n            </div>\n        );\n    }\n}\n\n","import React, {Component} from 'react';\nimport Ret from \"../ASMComponents/ret\";\nimport UnsupportedCommand from \"../ASMComponents/UnsupportedCommand\";\nimport Function from \"../ASMComponents/Function\";\nimport SequentialComponent from \"../ASMComponents/SequentialComponent\";\nimport styled from \"styled-components\";\nimport {Row, Col, Button, Container} from 'reactstrap';\nimport '../css/ASMVisualizer.css'\nimport Shift from \"../ASMComponents/Shift\";\nimport Arithmetic from \"../ASMComponents/Arithmetic\";\n\n\nconst ButtonContainer = styled.div`\n    text-align: center;\n`\n\nconst AnimationContainer = styled.div`\n   overflow: auto;\n   height: calc(100% - 40px);\n`\n\nfunction commandFactory(c) {\n    switch (c.name) {\n        case \"vpslldq\":\n            return <Shift direction=\"left\" bitWidth={8}/>;\n        case \"vpsrldq\":\n            return <Shift direction=\"right\" bitWidth={8}/>;\n        case \"vpaddd\":\n            return <Arithmetic operation={\"add\"} bitWidth={32}/>;\n        case \"ret\":\n            return <Ret/>;\n        default:\n            return <UnsupportedCommand/>\n    }\n}\n\nclass AsmVisualizer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            idx: 0,\n            play: true,\n            restart: false\n        };\n\n    }\n\n    componentDidMount() {\n        this.props.cm.editor.doc.getAllMarks().forEach((m) => {\n            m.clear()\n        })\n    }\n\n    buildGraphicStack = () => {\n        let stack = [];\n        this.props.asm.forEach((func) => {\n            let commands = func.body;\n            stack.push(<Function name={func.name}/>);\n            commands.forEach(c => {\n                let command = commandFactory(c);\n                stack.push(\n                    //c.line - 1 because line number starts at 1 and we need to start at 0.\n                    React.cloneElement(command, {name: c.name, params: c.params, line: c.line - 1})\n                );\n            });\n        });\n        return stack;\n    };\n\n    componentDonePlaying(key) {\n        if (this.state.play) {\n            let increment = key === this.state.idx ? 1 : 0;\n            this.setState({idx: this.state.idx + increment});\n        }\n    }\n\n    play() {\n        // if (!this.state.play) {\n        //     this.setState({idx: this.state.idx + 1});\n        // }\n        this.setState({play: true})\n    }\n\n    pause() {\n        this.setState({play: false})\n    }\n\n    forward() {\n        this.setState({idx: this.state.idx + 1});\n        //this.componentDonePlaying(this.state.idx - 1);\n    }\n\n    backward() {\n        this.setState({idx: this.state.idx - 1});\n        setTimeout(() => {\n            this.componentDonePlaying(this.state.idx);\n        })\n    }\n\n    restart() {\n        this.setState({idx: -1});\n        setTimeout(() => {\n            this.setState({play: true});\n            this.componentDonePlaying(-1);\n        })\n    }\n\n    getButtons = (play) => {\n        let buttons = [];\n        //buttons.push(<FontAwesomeIcon icon=\"backward\" onClick={this.backward.bind(this)}/>);\n\n        play === true ?\n            buttons.push({icon: <i className=\"fas fa-pause\"></i>, onClick: this.pause.bind(this)})\n            :\n            buttons.push({icon: <i className=\"fas fa-play\"></i>, onClick: this.play.bind(this)});\n\n        //buttons.push(<FontAwesomeIcon icon=\"forward\" onClick={this.forward.bind(this)}/>);\n        buttons.push({icon: <i className=\"fas fa-sync-alt\"></i>, onClick: this.restart.bind(this)});\n\n        return (\n            <Container>\n                <Row>\n                    {\n                        buttons.map((button, i) => (\n                            <Col key={i}>\n                                <ButtonContainer>\n                                    <Button color=\"primary\" outline onClick={button.onClick}\n                                            className={'playback-button'}>\n                                        {button.icon}\n                                    </Button>\n                                </ButtonContainer>\n                            </Col>\n                        ))\n                    }\n                </Row>\n            </Container>\n        )\n    };\n\n    render() {\n        return (\n            this.props.asm.length > 0 ?\n                <div style={{\"height\": \"inherit\"}}>\n\n                {this.getButtons(this.state.play)}\n                    <AnimationContainer>\n                        {\n                            this.buildGraphicStack().map((func, index) => (\n                                <SequentialComponent\n                                    key={index}\n                                    index={index}\n                                    component={func}\n                                    play={this.state.play}\n                                    shouldBeVisible={this.state.idx >= index}\n                                    onComplete={this.componentDonePlaying.bind(this)}\n                                    cm={this.props.cm}\n                                />\n                            ))\n                        }\n                    </AnimationContainer>\n            </div>\n                :\n                []\n        );\n    }\n}\n\nexport default AsmVisualizer;","import React, {Component} from 'react';\nimport {Controlled as CodeMirror} from 'react-codemirror2'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/material.css'\nimport 'codemirror/mode/clike/clike.js'\nimport 'codemirror/addon/selection/mark-selection.js'\nimport '../css/App.css';\nimport styled from 'styled-components'\nimport ButtonPanel from \"./ButtonPanel\";\nimport {generateASM, generateAST} from \"../Utils/Parser\";\nimport WaitingScreen from \"./WaitingScreen\";\nimport AstVisualizer from \"./ASTVisualizer\";\nimport FrontPage from \"./FrontPage\";\nimport {compile} from \"../Utils/Compiler\";\nimport ErrorHandler from \"./ErrorHandler\";\nimport {Pane, Tabs} from \"../Utils/Tabs\";\nimport AsmVisualizer from \"./ASMVisualizer\";\nimport {createBrowserHistory} from 'history';\nimport * as qs from 'qs';\nimport Vector from \"../ASMComponents/Vector\";\nimport * as _ from \"lodash\";\nimport anime from 'animejs';\nimport Shift from \"../ASMComponents/Shift\";\nimport Arithmetic from \"../ASMComponents/Arithmetic\";\n\n\nconst Container = styled.div`\n  display: flex;\n`\n\nconst LeftContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh\n  width: 50vw;\n  overflow: auto;\n`\n\nconst RightContainer = styled.div`\n  width: 50vw;\n  height: 100vh;\n  overflow: hidden;\n`\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        let savedState = localStorage.getItem('app-state');\n        this.history = createBrowserHistory();\n        this.state = {\n            code: `#include <x86intrin.h>\\n\\n__m128i PrefixSum(__m128i curr) {\\n  __m128i Add = _mm_slli_si128(curr, 4); \\n  curr = _mm_add_epi32(curr, Add);   \\n  Add = _mm_slli_si128(curr, 8);    \\n  return _mm_add_epi32(curr, Add);       \\n}`,\n            codeWasModifiedSinceLastCompile: true,\n            disableButtons: false,\n            status: 'compiles',\n            compiling: false,\n            ast: {},\n            clangAst: {},\n            asm: [],\n            error: [],\n            visualize: false\n        };\n        if (this.props.match.params.code) {\n            this.state.code = qs.parse(this.props.match.params.code).code\n        }\n        else if (savedState) {\n            this.state = JSON.parse(savedState);\n            this.state.visualize = false;\n        }\n\n        this.frontPage = <FrontPage/>;\n        this.waitingScreen = <WaitingScreen/>;\n        this.asmVisualizer = null\n        this.astVisualizer = null;\n\n    }\n\n    handleClear = (clearCode = true) => {\n        this.setState(({code}) => ({\n            code: clearCode === true ? '' : code\n        }));\n    };\n\n    visualize = () => {\n        this.setState({compiling: true});\n        if (this.state.codeWasModifiedSinceLastCompile) {\n            this.setState((state) => {\n                Object.keys(state.ast).forEach(k => delete state.ast[k]);\n                Object.assign(state.ast, generateAST(this.cm.editor))\n            });\n            compile(this.cm.editor.getValue(), (error, asm, ast) => {\n                if (error.length === 0) {\n                    asm = generateASM(asm);\n                    this.setState((state) => {\n                        state.asm.splice(0, state.asm.length);\n                        asm.forEach(e => {\n                            state.asm.push(e)\n                        });\n                        return {\n                            compiling: false,\n                            status: 'compiles',\n                            error,\n                            clangAst: ast,\n                            codeWasModifiedSinceLastCompile: false,\n                            visualize: true\n                        }\n                    });\n                }\n                else {\n                    this.setState({compiling: false, status: 'error', error, clangAst: {}, asm: {}});\n                }\n            })\n        }\n        else this.setState({compiling: false, visualize: true});\n    };\n\n    componentDidMount() {\n        this.asmVisualizer = <AsmVisualizer cm={this.cm} asm={this.state.asm}/>;\n        this.astVisualizer = <AstVisualizer cm={this.cm} ast={this.state.ast}/>;\n\n        this.refs.shiftVec && this.refs.shiftVec.getAnimation().play()\n    }\n\n    componentWillUpdate(nextProps, nextState) {\n        localStorage.setItem(\"app-state\", JSON.stringify(nextState));\n    }\n\n    restart = () => {\n        this.setState((state) => {\n            Object.keys(state.ast).forEach(k => delete state.ast[k]);\n            state.asm.splice(0, state.asm.length);\n            return {\n                compiling: false,\n                codeWasModifiedSinceLastCompile: true,\n                clangAst: {},\n                error: [],\n                visualize: false\n            }\n        });\n    };\n\n    getShareLink = () => {\n        //We need to specify the whole URL since we are in dev and bitly cannot work with localhost links.\n        return 'https://piotte13.github.io/SIMD-Visualiser/#/link/' + qs.stringify({code: this.state.code})\n        //return window.location.origin + \"/link\" + qs.stringify(this.state)\n    };\n\n    render() {\n        const {code, disableButtons, status, compiling} = this.state;\n\n        //let rightPage = <Shift ref=\"shiftVec\" direction=\"left\" bitWidth={32} params={[\"xmm0\", \"xmm1\", \"2\"]}/>\n        //let rightPage = <Arithmetic ref=\"shiftVec\" bitWidth={32} base={10} params={[\"xmm0\", \"xmm1\", \"xmm0\"]}/>;\n        let rightPage = this.frontPage;\n\n        if (compiling) {\n            rightPage = this.waitingScreen;\n        }\n        else if (this.state.error.length > 0) {\n            rightPage = <ErrorHandler cm={this.cm} error={this.state.error}/>\n        }\n        else if (this.state.visualize) {\n            rightPage = <Tabs selected={0}>\n                <Pane label=\"Graphical\">\n                    {this.asmVisualizer}\n                </Pane>\n                <Pane label=\"AST\">\n                    {this.astVisualizer}\n                </Pane>\n            </Tabs>\n        }\n\n        return (\n            <Container>\n                <LeftContainer>\n                    <ButtonPanel\n                        visualize={this.visualize}\n                        restart={this.restart}\n                        getShareLink={this.getShareLink}\n                        disabled={disableButtons}\n                        status={status}\n                    />\n                    <CodeMirror\n                        ref={(cm) => this.cm = cm}\n                        value={code}\n                        options={{\n                            mode: 'text/x-csrc',\n                            theme: 'material',\n                            lineNumbers: true,\n                            lineWrapping: true,\n                            gutters: [\"CodeMirror-lint-markers\"],\n                        }}\n                        onBeforeChange={(editor, data, code) => {\n                            this.setState({codeWasModifiedSinceLastCompile: true});\n                            this.history.push(this.history.location.pathname);\n                            if (code === '') {\n                                this.handleClear(true)\n                            } else {\n                                this.setState({code});\n                                //this.myInterpreter = getInterpreter(code)\n                            }\n                        }}\n                        onPaste={() => {\n                            this.setState({codeWasModifiedSinceLastCompile: true});\n                            this.handleClear(false)\n                        }}\n                    />\n                </LeftContainer>\n                <RightContainer>\n                    {rightPage}\n                </RightContainer>\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","import * as request from 'request';\n\n\n//Callback must be -> callback(error, asm, ast)\nexport function compile(code, callback) {\n    let options = {\n        url: 'https://godbolt.org/api/compiler/cclang700/compile',\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json'\n        },\n        json: true,\n        body: {\n            \"source\": code,\n            \"compiler\": \"cclang700\",\n            \"options\": {\n                \"userArguments\": \"-O3 -march=native\",\n                \"compilerOptions\": {\n                    \"produceGccDump\": {},\n                    \"produceCfg\": false,\n                    \"produceAst\": true\n                },\n                \"filters\": {\n                    \"binary\": false,\n                    \"execute\": false,\n                    \"labels\": true,\n                    \"directives\": true,\n                    \"commentOnly\": true,\n                    \"trim\": true,\n                    \"intel\": true,\n                    \"demangle\": true\n                }\n            },\n            \"lang\": \"c\"\n        }\n    };\n    request(options, (error, response, body) => {\n        if (error) {\n            alert(\"oops! https://godbolt.org/ seems to be down! \\n You will have to wait my friend.\")\n            callback({}, [], \"\")\n        }\n        else {\n            callback(body.stderr, body.asm, body.astOutput)\n        }\n    })\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {HashRouter, Switch, Route} from \"react-router-dom\";\n\nReactDOM.render(\n    <HashRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n            <Route exact path='/' component={App}/>\n            <Route path='/link/:code' component={App}/>\n        </Switch>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}