{"version":3,"sources":["Utils/index.js","components/CodeStatus.js","components/ButtonPanel.js","Utils/Parser.js","Images/Cog.js","components/WaitingScreen.js","components/ASTVisualizer.js","Images/CProgramming.js","components/FrontPage.js","Images/Cryingboy.js","components/ErrorHandler.js","Utils/Tabs.js","Utils/Registry.js","Utils/Converter.js","ASMComponents/Vector.js","ASMComponents/ret.js","ASMComponents/UnsupportedCommand.js","ASMComponents/Function.js","ASMComponents/SequentialComponent.js","ASMComponents/Shift.js","ASMComponents/Arithmetic.js","components/ASMVisualizer.js","components/ParametersPage.js","components/App.js","Utils/Compiler.js","serviceWorker.js","index.js"],"names":["getFlatColors","main","getComputedStyle","document","documentElement","getPropertyValue","darkMain","one","two","three","four","five","gray","clearTextColor","DarkTextColor","Status","styled","div","_templateObject","_ref","bg","CodeStatus","_ref2","_ref2$status","status","color","message","react_default","a","createElement","ButtonPanelContainer","ButtonPanel_templateObject","Top","_templateObject2","Buttons","_templateObject3","ButtonPanel","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","bitly","BitlyClient","toggleShare","bind","assertThisInitialized","state","popoverOpen","shareLink","textAreaRef","React","createRef","_this2","longUrl","getShareLink","setState","shorten","then","result","url","catch","error","console","_this3","_this$props","visualize","restart","_this$props$disabled","disabled","onClick","id","className","reactstrap_es","placement","isOpen","target","toggle","readOnly","ref","value","addonType","lib","text","onCopy","Component","testASR","Node","type","name","line","getBitWidth","replace","log","concat","simplifyType","complexType","functionName","functionParams","vectorParam","SvgCog","forwardRef","assign","viewBox","d","fill","Container","WaitingScreen_templateObject","WaitingScreen","cog","cogAnim","anime","targets","current","loop","rotate","duration","easing","Cog","height","getChildren","node","body","declarations","init","expression","left","right","callee","arguments","object","property","properties","key","argument","test","consequent","alternate","getLabel","raw","operator","params1","_","params","join","params2","AstVisualizer","recursiveBuilder","children","tree","forEach","child","push","title","expanded","start","end","buildTree","ast","highlightCode","codeEditor","cm","editor","doc","fromIndex","posFromIndex","toIndex","markText","clearHighlightedCode","getAllMarks","m","clear","treeData","nextProps","index_esm","onChange","canDrag","generateNodeProps","onMouseEnter","onMouseLeave","SvgCProgramming","width","fillRule","Image","FrontPage_templateObject","AppTitle","FrontPage_templateObject2","AppDescription","FrontPage_templateObject3","_templateObject4","GHButton","button","_templateObject5","ButtonGroup","_templateObject6","FrontPage","image","imageContainer","direction","scale","delay","FrontPage_Container","CProgramming","href","rel","src","frameBorder","scrolling","SvgCryingboy","x","y","xmlSpace","stroke","strokeWidth","strokeMiterlimit","cx","cy","r","transform","rx","ry","ErrorPageContainer","ErrorHandler_templateObject","TextJumbo","ErrorHandler_templateObject2","ErrorMessage","ErrorHandler_templateObject3","ErrorPosition","ErrorHandler_templateObject4","ImageContainer","ErrorHandler_templateObject5","ErrorHandler","tag","lineLength","getLine","length","ch","getErrorMessage","getErrorPosition","column","Cryingboy","Tabs","_Component","_getPrototypeOf2","_len","args","Array","_key","apply","selected","handleClick","index","event","preventDefault","_renderTitles","map","label","_renderContent","inherits","createClass","nextState","Pane","_Component2","TYPE_LENGTH","z","isSIMDRegister","FAST_CALL_REGISTERS","GPRegistersNameMap","64","32","16","8","names","bitWidth","instance","Registry","set","register","array","_this$_SIMDRegisters$","idx","substring","_SIMDRegisters","splice","toConsumableArray","_this$_GPRegisters$in","_GPRegistersNameMap$r","_GPRegisters","get","slice","_GPRegistersNameMap$r2","val","i","ARCHITECTURE_SIZE","freeze","convert","data","toType","toBitWidth","fromType","fromBitWidth","values","lane","newLanes","mask","nl","newNbOfLanes","nbOfOldLanesInOneNewLane","currentPosition","lanesToMerge","newLane","laneToMerge","convertToStrings","base","undefined","precision","toBase","toString","round","toUpper","Vector","updateWidth","window","innerWidth","numbersRef","vectorRef","addEventListener","removeEventListener","shiftData","shiftValues","elCount","rectLen","rectHeight","xmlns","padding","Number","x1","y1","x2","y2","number","dy","offset","Fragment","defaultProps","Ret","returnValue","vector","computeCommand","timeline","autoplay","add","filter","Vector_Vector","UnsupportedCommand","FunctionContainer","Function_templateObject","FunctionName","Function_templateObject2","Function","param","SequentialComponent_templateObject","SequentialComponent","isHover","component","onEnter","hoverHighlight","childAnimation","isLoop","onLeave","seek","Infinity","touchable","container","onComplete","sequentialHighlight","c","getAnimation","animeRef","translateY","opacity","complete","finished","allAnimationCompleted","shouldBeVisible","remove","play","pause","SequentialComponent_Container","style","pointerEvents","cloneElement","SHIFT_INDEX","INPUT_INDEX","Shift","shiftLen","input","defaultBitWidth","defaultValues","defaultBase","output","_this$state","shiftPercentage","translateX","_output","_this$state2","_this$props2","INPUT1_INDEX","INPUT2_INDEX","OUTPUT_INDEX","Arithmetic","input1","input2","input1_converted","input2_converted","output_converted","Math","pow","showOutput","vector1","vector2","vector3","vector4","equals","mock","nextTick","currentTick","v","abs","begin","update","animation","began","colCount","operation","ButtonContainer","ASMVisualizer_templateObject","AnimationContainer","ASMVisualizer_templateObject2","AsmVisualizer","buildGraphicStack","stack","asm","func","commands","Function_Function","command","Shift_Shift","Arithmetic_Arithmetic","ret_Ret","UnsupportedCommand_UnsupportedCommand","commandFactory","some","e","getButtons","buttons","icon","onGoToParameters","marginBottom","outline","increment","setTimeout","componentDonePlaying","SequentialComponent_SequentialComponent","PageContainer","ParametersPage_templateObject","Title","ParametersPage_templateObject2","SubmitButton","ParametersPage_templateObject3","ParametersPage_templateObject4","ParametersPage_templateObject5","ParameterContainer","ParametersPage_templateObject6","ParameterOptionTitle","Col","_templateObject7","RandomizeButton","_templateObject8","VectorContainer","_templateObject9","ParametersPage","setRegistersNamesAndValues","generalPurposeRegisterCount","simdRegisterCount","j","lanes","randomizeRegister","paramBitLen","nbOfMarks","marks","functionNumber","paramNumber","forceUpdate","newWidth","bitLen","parseInt","content","ParametersPage_FunctionContainer","ParametersPage_FunctionName","getSliderMarks","k","onVectorValueChange","xs","sm","rc_slider_es","margin","handleStyle","marginLeft","marginTop","min","defaultValue","step","onWidthChange","onTypeChange","active","onBaseChange","buildContent","App_templateObject","LeftContainer","App_templateObject2","RightContainer","App_templateObject3","App","handleClear","clearCode","code","callback","compiling","codeWasModifiedSinceLastCompile","keys","JSON","parse","getValue","rawAsm","currentFunction","exec","split","parsedParams","p","parsedParam","source","trim","generateASM","clangAst","parametersChosen","request","method","headers","content-type","json","compiler","options","userArguments","compilerOptions","produceGccDump","produceCfg","produceAst","filters","binary","execute","labels","directives","commentOnly","intel","demangle","tools","lang","response","alert","stderr","astOutput","qs","savedState","localStorage","getItem","history","createBrowserHistory","disableButtons","match","setItem","stringify","react_codemirror2","mode","theme","lineNumbers","lineWrapping","gutters","onBeforeChange","location","pathname","onPaste","rightPage","FrontPage_FrontPage","WaitingScreen_WaitingScreen","components_ErrorHandler","Tabs_Tabs","Tabs_Pane","components_ASMVisualizer","components_ASTVisualizer","ParametersPage_ParametersPage","onParametersChosen","App_Container","ButtonPanel_ButtonPanel","getCodeMirror","Boolean","hostname","ReactDOM","render","HashRouter","basename","process","Switch","Route","exact","path","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.078474ec.chunk.js","sourcesContent":["export function getFlatColors() {\n    return {\n        main: getComputedStyle(document.documentElement).getPropertyValue('--main'),\n        darkMain: getComputedStyle(document.documentElement).getPropertyValue('--dark-main'),\n        one: getComputedStyle(document.documentElement).getPropertyValue('--one'),\n        two: getComputedStyle(document.documentElement).getPropertyValue('--two'),\n        three: getComputedStyle(document.documentElement).getPropertyValue('--three'),\n        four: getComputedStyle(document.documentElement).getPropertyValue('--four'),\n        five: getComputedStyle(document.documentElement).getPropertyValue('--five'),\n        gray: getComputedStyle(document.documentElement).getPropertyValue('--gray'),\n        clearTextColor: getComputedStyle(document.documentElement).getPropertyValue('--clear-text-color'),\n        DarkTextColor: getComputedStyle(document.documentElement).getPropertyValue('--dark-text-color')\n    }\n}","import React from \"react\";\nimport styled from 'styled-components'\nimport {getFlatColors} from \"../Utils\";\n\nconst Status = styled.div`\n  background: ${({bg}) => bg};\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  font-weight: 300\n  font-size: 14px;\n  padding: 5px;\n  padding-left: 10px;\n  margin-bottom: 5px;\n\n  > span {\n    font-weight: 500;\n    margin-left: 10px;\n  }\n\n  @media (max-width: 700px) {\n    font-size: 8px;\n  }\n`\n\nexport default function CodeStatus({status = 'compiles'}) {\n    let color = '';\n    let message = '';\n    if (status === 'compiles') {\n        color = getFlatColors().five;\n        message = 'Code status: Compiles..';\n    }\n    else if (status === 'error') {\n        color = getFlatColors().two;\n        message = 'Code status: Error..';\n    }\n    else if (status === 'warning') {\n        color = getFlatColors().four;\n        message = 'Code status: warning..';\n    }\n\n    return (\n        <Status bg={color}>\n            {message}\n        </Status>\n    );\n}","import React, {Component} from 'react';\nimport styled from 'styled-components'\nimport CodeStatus from \"./CodeStatus\";\nimport {Popover, PopoverBody} from 'reactstrap';\nimport {BitlyClient} from 'bitly';\nimport {InputGroup, InputGroupAddon, Button, Input} from 'reactstrap';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\nconst ButtonPanelContainer = styled.div`\n  background: #1F292E;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst Top = styled.div`\n  padding: 3px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 10px;\n`\n\nconst Buttons = styled.div`\n    width: 100%;\n    display: flex;\n  > button {\n    border: none;\n    background: none;\n    color: #fff;\n    font-size: 18px;\n    padding: 8px;\n    text-shadow: -1px -1px 1px rgba(255,255,255,.1), 1px 1px 1px rgba(0,0,0,.5);\n\n    @media (max-width: 700px) {\n      font-size: 10px;\n    }\n  }\n\n  > button:hover {\n    color: #fff;\n    cursor: pointer;\n  }\n\n  > button:disabled {\n    color: #919191;\n  }\n\n  > button:active {\n    color: #fff;\n    text-shadow: none;\n  }\n  \n  > #sharePopover {\n    margin-left:auto;\n    opacity: 0.6;\n  }\n  \n  > #sharePopover:hover {\n    opacity: 1;\n  }\n`\n\nexport default class ButtonPanel extends Component {\n\n    constructor(props) {\n        super(props);\n        this.bitly = new BitlyClient('e17981e1eef5e2ec83995b478b899564448b9496', {});\n\n        this.toggleShare = this.toggleShare.bind(this);\n        this.state = {\n            popoverOpen: false,\n            shareLink: 'Loading...'\n        };\n\n        this.textAreaRef = React.createRef();\n    }\n\n    toggleShare() {\n        let longUrl = this.props.getShareLink();\n        this.setState({\n            popoverOpen: !this.state.popoverOpen\n        });\n        this.bitly\n            .shorten(longUrl)\n            .then((result) => {\n                this.setState({\n                    shareLink: result.url\n                });\n            })\n            .catch((error) => {\n                this.setState({\n                    shareLink: longUrl\n                });\n                console.error(error);\n            });\n\n\n    }\n\n    render() {\n        let {visualize, restart, disabled = false, status} = this.props;\n\n        return (\n            <ButtonPanelContainer>\n                <Top>\n                    <Buttons>\n                        <button disabled={disabled} onClick={visualize}>Visualize</button>\n                        <button onClick={restart}>Restart</button>\n                        <button id='sharePopover' onClick={this.toggleShare}><i className=\"fas fa-share-square\"></i>\n                        </button>\n                    </Buttons>\n\n\n                    <Popover placement=\"left\" isOpen={this.state.popoverOpen} target=\"sharePopover\"\n                             toggle={this.toggleShare}>\n                        <PopoverBody>\n                            <InputGroup>\n                                <Input readOnly ref={this.textAreaRef} value={this.state.shareLink}/>\n                                <InputGroupAddon addonType=\"prepend\">\n\n                                    <CopyToClipboard text={this.state.shareLink}\n                                                     onCopy={() => this.setState({popoverOpen: false})}>\n                                        <Button color=\"info\"> <i className=\"far fa-copy\"></i> </Button>\n                                    </CopyToClipboard>\n\n\n                                </InputGroupAddon>\n                            </InputGroup>\n                        </PopoverBody>\n                    </Popover>\n                </Top>\n                <CodeStatus status={status}/>\n            </ButtonPanelContainer>\n        );\n    }\n}","//import * as acorn from \"acorn\";\n\n\nconst testASR = `{\"type\": \"Program\",\\n  \"start\": 0,\\n  \"end\": 198,\\n  \"body\": [\\n    {\\n      \"type\": \"ImportDeclaration\",\\n      \"start\": 0,\\n      \"end\": 20,\\n      \"specifiers\": [],\\n      \"source\": {\\n        \"type\": \"Literal\",\\n        \"start\": 7,\\n        \"end\": 20,\\n        \"value\": \"x86intrin.h\",\\n        \"raw\": \"\\\\\"x86intrin.h\\\\\"\"\\n      }\\n    },\\n    {\\n      \"type\": \"FunctionDeclaration\",\\n      \"start\": 22,\\n      \"end\": 198,\\n      \"id\": {\\n        \"type\": \"Identifier\",\\n        \"start\": 31,\\n        \"end\": 40,\\n        \"name\": \"PrefixSum\"\\n      },\\n      \"generator\": false,\\n      \"expression\": false,\\n      \"params\": [\\n        {\\n          \"type\": \"Identifier\",\\n          \"start\": 41,\\n          \"end\": 45,\\n          \"name\": \"curr\"\\n        }\\n      ],\\n      \"body\": {\\n        \"type\": \"BlockStatement\",\\n        \"start\": 47,\\n        \"end\": 198,\\n        \"body\": [\\n          {\\n            \"type\": \"VariableDeclaration\",\\n            \"start\": 53,\\n            \"end\": 87,\\n            \"declarations\": [\\n              {\\n                \"type\": \"VariableDeclarator\",\\n                \"start\": 57,\\n                \"end\": 86,\\n                \"id\": {\\n                  \"type\": \"Identifier\",\\n                  \"start\": 57,\\n                  \"end\": 60,\\n                  \"name\": \"Add\"\\n                },\\n                \"init\": {\\n                  \"type\": \"CallExpression\",\\n                  \"start\": 63,\\n                  \"end\": 86,\\n                  \"callee\": {\\n                    \"type\": \"Identifier\",\\n                    \"start\": 63,\\n                    \"end\": 77,\\n                    \"name\": \"_mm_slli_si128\"\\n                  },\\n                  \"arguments\": [\\n                    {\\n                      \"type\": \"Identifier\",\\n                      \"start\": 78,\\n                      \"end\": 82,\\n                      \"name\": \"curr\"\\n                    },\\n                    {\\n                      \"type\": \"Literal\",\\n                      \"start\": 84,\\n                      \"end\": 85,\\n                      \"value\": 4,\\n                      \"raw\": \"4\"\\n                    }\\n                  ]\\n                }\\n              }\\n            ],\\n            \"kind\": \"let\"\\n          },\\n          {\\n            \"type\": \"ExpressionStatement\",\\n            \"start\": 92,\\n            \"end\": 124,\\n            \"expression\": {\\n              \"type\": \"AssignmentExpression\",\\n              \"start\": 92,\\n              \"end\": 123,\\n              \"operator\": \"=\",\\n              \"left\": {\\n                \"type\": \"Identifier\",\\n                \"start\": 92,\\n                \"end\": 96,\\n                \"name\": \"curr\"\\n              },\\n              \"right\": {\\n                \"type\": \"CallExpression\",\\n                \"start\": 99,\\n                \"end\": 123,\\n                \"callee\": {\\n                  \"type\": \"Identifier\",\\n                  \"start\": 99,\\n                  \"end\": 112,\\n                  \"name\": \"_mm_add_epi32\"\\n                },\\n                \"arguments\": [\\n                  {\\n                    \"type\": \"Identifier\",\\n                    \"start\": 113,\\n                    \"end\": 117,\\n                    \"name\": \"curr\"\\n                  },\\n                  {\\n                    \"type\": \"Identifier\",\\n                    \"start\": 119,\\n                    \"end\": 122,\\n                    \"name\": \"Add\"\\n                  }\\n                ]\\n              }\\n            }\\n          },\\n          {\\n            \"type\": \"ExpressionStatement\",\\n            \"start\": 129,\\n            \"end\": 159,\\n            \"expression\": {\\n              \"type\": \"AssignmentExpression\",\\n              \"start\": 129,\\n              \"end\": 158,\\n              \"operator\": \"=\",\\n              \"left\": {\\n                \"type\": \"Identifier\",\\n                \"start\": 129,\\n                \"end\": 132,\\n                \"name\": \"Add\"\\n              },\\n              \"right\": {\\n                \"type\": \"CallExpression\",\\n                \"start\": 135,\\n                \"end\": 158,\\n                \"callee\": {\\n                  \"type\": \"Identifier\",\\n                  \"start\": 135,\\n                  \"end\": 149,\\n                  \"name\": \"_mm_slli_si128\"\\n                },\\n                \"arguments\": [\\n                  {\\n                    \"type\": \"Identifier\",\\n                    \"start\": 150,\\n                    \"end\": 154,\\n                    \"name\": \"curr\"\\n                  },\\n                  {\\n                    \"type\": \"Literal\",\\n                    \"start\": 156,\\n                    \"end\": 157,\\n                    \"value\": 8,\\n                    \"raw\": \"8\"\\n                  }\\n                ]\\n              }\\n            }\\n          },\\n          {\\n            \"type\": \"ReturnStatement\",\\n            \"start\": 164,\\n            \"end\": 196,\\n            \"argument\": {\\n              \"type\": \"CallExpression\",\\n              \"start\": 171,\\n              \"end\": 195,\\n              \"callee\": {\\n                \"type\": \"Identifier\",\\n                \"start\": 171,\\n                \"end\": 184,\\n                \"name\": \"_mm_add_epi32\"\\n              },\\n              \"arguments\": [\\n                {\\n                  \"type\": \"Identifier\",\\n                  \"start\": 185,\\n                  \"end\": 189,\\n                  \"name\": \"curr\"\\n                },\\n                {\\n                  \"type\": \"Identifier\",\\n                  \"start\": 191,\\n                  \"end\": 194,\\n                  \"name\": \"Add\"\\n                }\\n              ]\\n            }\\n          }\\n        ]\\n      }\\n    }\\n  ],\\n  \"sourceType\": \"module\"\\n}`\nclass Node {\n    constructor(type, name, line) {\n        this.type = type;\n        this.name = name;\n        this.line = line;\n    }\n}\n\nexport function generateAST(editor) {\n    //let code = editor.doc.getValue();\n    // code = cleanExpression(code);\n    // let ast = new Node(\"Program\", 0, code.length);\n    // ast.body = recursiveASTBuilder(code, 0, 0);\n\n    //code = code.replace(new RegExp('int', 'g'), 'let');\n\n    //return acorn.parse(code)\n\n    //Temporary.. We disable AST parsing.. We\"ll come back to AST later.\n    return JSON.parse(testASR)\n}\n\nconst getBitWidth = (type) => {\n    switch (type.replace(/unsigned /g, '')) {\n        case \"long\":\n        case \"long long\":\n        case \"double\":\n            return 64;\n        case \"float\":\n        case \"int\":\n            return 32;\n        case \"short\":\n            return 16;\n        case \"char\":\n            return 8;\n        default:\n            console.log(`hmm... I don't know this type: ${type}...`);\n            return null;\n    }\n};\n\nconst simplifyType = (complexType) => {\n    if (complexType === 'double' || complexType === 'float')\n        return 'float';\n    else\n        return 'int'\n};\n\nconst functionName = /([\\w]+)\\(.* # @.*/;\nconst functionParams = /\\b[^()]+\\((.*)\\)$/;\nconst vectorParam = /(.*)[ ](__vector\\(([0-9]+)\\))/;\n\nexport function generateASM(rawAsm) {\n    let asm = [];\n    let currentFunction = {\n        body: []\n    };\n    rawAsm.forEach(line => {\n        if (functionName.test(line.text)) {\n            let name = functionName.exec(line.text)[1];\n            let func = rawAsm[0].text.replace(/:.*/g, '');\n            let params = functionParams.exec(func)[1].split(\", \");\n            let parsedParams = [];\n            params.forEach((p) => {\n                if (vectorParam.test(p)) {\n                    const parsedParam = vectorParam.exec(p);\n                    parsedParams.push({\n                        lanes: +parsedParam[3],\n                        type: simplifyType(parsedParam[1]),\n                        bitWidth: getBitWidth(parsedParam[1]),\n                        base: 10 //decimal\n                    })\n                }\n                else {\n                    parsedParams.push({\n                        lanes: 1,\n                        type: simplifyType(p),\n                        bitWidth: getBitWidth(p),\n                        base: 10 //decimal\n                    })\n                }\n            });\n            currentFunction = new Node(\"Function\", name, 0);\n            currentFunction.body = [];\n            currentFunction.params = parsedParams;\n            asm.push(currentFunction);\n        }\n        else if (line.text.length > 0 && line.source) {\n            // Remove comments, commas, trim it and then split\n            let command = line.text.trim().replace(/,| #.*/g, '').split(\" \");\n            let name = command[0];\n            let params = command.slice(1, command.length);\n\n            let node = new Node(\"Command\", name, line.source.line);\n            node.params = params;\n            currentFunction.body.push(node);\n        }\n    });\n    return asm\n}\n\n\n// function recursiveASTBuilder(code, start) {\n//     let ast = [];\n//\n//     if (isAssignExpr(code)) {\n//         let tokens = getAssignExpr(code);\n//         let end = start + code.length;\n//         let node = new Node(\"VariableDeclaration\", start, end)\n//         node.kind = tokens[1];\n//         console.log(tokens);\n//         ast.push(node)\n//     }\n//     if (isFuncDeclaration(code)) {\n//         let tokens = getFuncDeclaration(code);\n//         let end = start + code.length;\n//         let node = new Node(\"FunctionDeclaration\", start, end)\n//         ast.push(node)\n//     }\n//     if (isFuncCall(code)) {\n//         let tokens = getFuncCall(code);\n//         let end = start + code.length;\n//         let node = new Node(\"FunctionCall\", start, end)\n//         ast.push(node)\n//     }\n//     if (isReturnExpr(code)) {\n//         let tokens = getReturnExpr(code);\n//         let end = start + code.length;\n//         let node = new Node(\"ReturnExpression\", start, end)\n//         ast.push(node)\n//     }\n//\n//\n//     return ast;\n// }\n//\n// function cleanExpression(s){ //just supress superfluous space and other invisible characters\n//     return (s.replace(/\\s{1,}/g, ' ')).trim();\n// }\n//\n// function extractExpression(s){     //this function extract the different expressions of a given c code, by expression we mean a piece of code situated after a ';' or a '{' and ended either by ';' or by '}'.This extract the expressions at the \"same level\"\n//     s=cleanExpression(s);\n//     var accoladeIndication=0;\n//     var expresions=[];\n//     const delimiters=new Set([';', '}']);\n//     var i=s.indexOf('{')+1,lengthS=s.lastIndexOf('}'); // we first determine the begining and the ending of the piece of c code\n//     var  semicolonPosition=i;\n//     while(i<lengthS){\n//         if (s[i]==='{'){\n//             accoladeIndication++; //indicates if we are not inside an expression\n//         }\n//         if (s[i]==='}'){\n//             accoladeIndication--;\n//         }\n//\n//         if(delimiters.has(s[i]) && accoladeIndication === 0){ // if the caracter is a delimiter of expression and if we are not inside an expression\n//             expresions.push((s.slice(semicolonPosition+1, i)).trim()) //we extract the expression begining from the last delimiter to this delimiter\n//             semicolonPosition=i; // we save the position of this delimiter\n//         }\n//         i++;\n//     }\n//     return expresions;\n// }\n//\n// function extractParameter(s){     //this function extract the different effective parameter of a c function (call function)\n//     s=cleanExpression(s);\n//     var semicolonIndication=0;\n//     var expresions=[];\n//     const delimiters=new Set([',']);\n//     var i=0,lengthS=s.length; // we first determine the begining and the ending of the parameter previously extracted\n//     var  semicolonPosition=i;\n//     while(i<lengthS){\n//         if (s[i]==='('){\n//             semicolonIndication++; //indicates if we are not inside an expression\n//         }\n//         if (s[i]===')'){\n//             semicolonIndication--;\n//         }\n//\n//         if(delimiters.has(s[i]) && semicolonIndication === 0){ // if the caracter is a delimiter of expression and if we are not inside an expression\n//             expresions.push((s.slice(semicolonPosition, i)).trim()) //we extract the expression begining from the last delimiter to this delimiter\n//             semicolonPosition=i+1; // we save the position of this delimiter\n//         }\n//         i++;\n//         if(i===lengthS){\n//             expresions.push((s.slice(semicolonPosition, i)).trim()) //to take the last string\n//         }\n//     }\n//     return expresions;\n// }\n//\n// function processCCode(cCode){\n//     var tab=[];\n//     if(isSimpleExpression(cCode)){\n//         tab=Array.of(cCode);\n//         return tab;\n//     }\n//     if(regexFunctionDeclar.test(cCode)){\n//         var t=extractExpression(cCode);\n//         t.push('body');\n//         tab=Array.of(regexFunctionDeclar.exec(cCode)[2], ['returntype',[regexFunctionDeclar.exec(cCode)[1]]],t.reverse());\n//         for(var j=1; j<tab[2].length; j++){\n//             if (isSimpleExpression(tab[2][j])){\n//                 tab[2][j]=Array.of(tab[2][j]);\n//                 continue;\n//             }\n//             else{\n//                 tab[2][j]=processCCode(tab[2][j]);\n//             }\n//\n//         }\n//         return tab;\n//     }\n//\n//     if(regexFunctionCall.test(cCode)){\n//         var paramString = regexFunctionCall.exec(cCode)[2]\n//         var t=extractParameter(paramString);\n//         t.push('parameters');\n//         tab=Array.of(regexFunctionCall.exec(cCode)[1], t.reverse());\n//         for(var j=1; j<tab[1].length; j++){\n//             if (isSimpleExpression(tab[1][j])){\n//                 tab[1][j]=Array.of(tab[1][j]);\n//                 continue;\n//             }\n//             else{\n//                 tab[1][j]=processCCode(tab[1][j]);\n//             }\n//\n//         }\n//         return tab;\n//     }\n//     if(regexAssignExpr.test(cCode)){\n//         var regArray = regexAssignExpr.exec(cCode)\n//         tab=Array.of('=',[regArray[2],[regArray[1]]], [regArray[3]]);\n//         if (isSimpleExpression(tab[2][0])){\n//             tab[2][0]=Array.of(tab[2][0]);\n//         }\n//         else\n//         {\n//             tab[2][0]=processCCode(tab[2][0]);\n//         }\n//\n//\n//         return tab;\n//     }\n//     if(regexReturnExpr.test(cCode)){\n//         tab=Array.of('return',[regexReturnExpr.exec(cCode)[1]]);\n//         if (isSimpleExpression(tab[1][0])){\n//             tab[1][0]=Array.of(tab[1][0]);\n//         }\n//         else\n//         {\n//             tab[1][0]=processCCode(tab[1][0]);\n//         }\n//\n//\n//         return tab;\n//     }\n//\n//\n// }\n//\n// function isSimpleExpression(s){\n//     return !(isFuncDeclaration(s)||isFuncCall(s)||isAssignExpr(s)||isReturnExpr(s));\n// }\n//\n// function identifyNatureOfExpr(s){\n//     var regex=/^\\s*(?:void|char|uint8_t|short|int|long|float|double|signed|unsigned|Bool|Complex|__m128|__m128d|__m128i|__m256|__m256d|__m256i|__m512|__m512d|__m512i)\\s+(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s*\\(\\s*(?:void|char|uint8_t|short|int|long|float|double|signed|unsigned|Bool|Complex|__m128|__m128d|__m128i|__m256|__m256d|__m256i|__m512|__m512d|__m512i)\\s+(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s*(?:,(?:void|char|uint8_t|short|int|long|float|double|signed|unsigned|Bool|Complex|__m128|__m128d|__m128i|__m256|__m256d|__m256i|__m512|__m512d|__m512i)\\s+(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s*)*\\s*(?:\\)\\s*(?=\\{))/;\n// }\n//\n// const regexFunctionDeclar=/^\\s*([_$a-zA-Z][_$a-zA-Z0-9]*)\\s+([_$a-zA-Z][_$a-zA-Z0-9]*)\\s*\\(\\s*(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s+\\*?(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s*(?:,(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s+\\*?(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s*)*\\s*(?:\\)\\s*(?=\\{))/;\n// const regexFunctionCall=/^\\s*([_$a-zA-Z][_$a-zA-Z0-9]*)\\s*\\((.*)(?=\\)$|\\)(?=;))/;\n// const regexReturnExpr=/^\\s*return\\s+(.*)/;\n// const regexAssignExpr=/^\\s*(?:([_a-zA-Z][\\._a-zA-Z0-9]*)\\s+)?([\\*_$a-zA-Z][\\._a-zA-Z0-9]*)\\s*=\\s*(.*)/;\n//\n// function isFuncDeclaration(code) {\n//     return regexFunctionDeclar.test(code)\n// }\n// function isFuncCall(code) {\n//     return regexFunctionCall.test(code)\n// }\n// function isReturnExpr(code) {\n//     return regexReturnExpr.test(code)\n// }\n// function isAssignExpr(code) {\n//     return regexAssignExpr.test(code)\n// }\n// function getFuncDeclaration(code) {\n//     return regexFunctionDeclar.exec(code);\n// }\n// function getFuncCall(code) {\n//     return regexFunctionCall.exec(code);\n// }\n// function getReturnExpr(code) {\n//     return regexReturnExpr.exec(code);\n// }\n// function getAssignExpr(code) {\n//     return regexAssignExpr.exec(code);\n// }\n","import React from \"react\";\n\nconst SvgCog = React.forwardRef((props, ref) => (\n    <svg viewBox=\"0 -256 1792 1792\" {...props} ref={ref}>\n        <path\n            d=\"M1145.492 645.424q0-106-75-181t-181-75q-106 0-181 75t-75 181q0 106 75 181t181 75q106 0 181-75t75-181zm512-109v222q0 12-8 23t-20 13l-185 28q-19 54-39 91 35 50 107 138 10 12 10 25t-9 23q-27 37-99 108t-94 71q-12 0-26-9l-138-108q-44 23-91 38-16 136-29 186-7 28-36 28h-222q-14 0-24.5-8.5t-11.5-21.5l-28-184q-49-16-90-37l-141 107q-10 9-25 9-14 0-25-11-126-114-165-168-7-10-7-23 0-12 8-23 15-21 51-66.5t54-70.5q-27-50-41-99l-183-27q-13-2-21-12.5t-8-23.5v-222q0-12 8-23t19-13l186-28q14-46 39-92-40-57-107-138-10-12-10-24 0-10 9-23 26-36 98.5-107.5t94.5-71.5q13 0 26 10l138 107q44-23 91-38 16-136 29-186 7-28 36-28h222q14 0 24.5 8.5t11.5 21.5l28 184q49 16 90 37l142-107q9-9 24-9 13 0 25 10 129 119 165 170 7 8 7 22 0 12-8 23-15 21-51 66.5t-54 70.5q26 50 41 98l183 28q13 2 21 12.5t8 23.5z\"\n            fill=\"#1f292e\"\n        />\n    </svg>\n));\n\nexport default SvgCog;\n","import React, {Component} from 'react';\nimport styled from 'styled-components'\nimport anime from \"animejs\";\nimport SvgCog from \"../Images/Cog\";\n\nconst Container = styled.div`\n    height: 40vh;\n    margin: 30vh auto;\n    color: var(--dark-main);\n    text-align: center;\n`\n\nexport default class WaitingScreen extends Component {\n\n    constructor() {\n        super();\n\n        this.cog = React.createRef();\n    }\n\n    componentDidMount() {\n        this.cogAnim = anime({\n            targets: this.cog.current,\n            loop: true,\n            rotate: '360deg',\n            duration: 4000,\n            easing: 'linear'\n        })\n    }\n\n    render() {\n        return (\n            <Container>\n                <SvgCog ref={this.cog} height=\"100%\"/>\n            </Container>\n        );\n    }\n}","import React, {Component} from 'react';\nimport * as _ from \"lodash\";\nimport SortableTree from \"react-sortable-tree\";\nimport 'react-sortable-tree/style.css';\nimport '../css/ASTVisualizer.css'\n\nlet getChildren = (node) => {\n\n    switch (node.type) {\n\n        case 'Program':\n            return node.body;\n\n        case 'VariableDeclaration':\n            return node.declarations;\n\n        case 'VariableDeclarator':\n            return node.init ? [node.id, node.init] : [node.id];\n\n        case 'ExpressionStatement':\n            return [node.expression];\n\n        case 'BinaryExpression':\n            return [node.left, node.right];\n\n        case 'AssignmentExpression':\n            return [node.left, node.right];\n\n        case 'CallExpression':\n            return [node.callee, {type: 'arguments', arguments: node.arguments}];\n\n        case 'arguments':\n            return node.arguments;\n\n        case 'MemberExpression':\n            return [node.object, node.property];\n\n        case 'NewExpression':\n            return node.arguments;\n\n        case 'ObjectExpression':\n            return node.properties;\n\n        case 'Property':\n            return [node.key, node.value];\n\n        case 'FunctionDeclaration':\n            return [node.body];\n\n        case 'FunctionExpression':\n            return [node.body];\n\n        case 'BlockStatement':\n            return node.body;\n\n        case 'ReturnStatement':\n            return node.argument ? [node.argument] : [];\n\n        case 'UnaryExpression':\n            return [node.argument];\n\n        case 'IfStatement':\n            return [node.test, node.consequent];\n\n        case 'ConditionalExpression':\n            return [node.test, node.consequent, node.alternate];\n\n        default:\n            return [];\n    }\n};\n\nlet getLabel = (node) => {\n\n    switch (node.type) {\n\n        case 'Identifier':\n            return node.name;\n\n        case 'Literal':\n            return node.raw;\n\n        case 'UnaryExpression':\n            return node.operator;\n\n        case 'BinaryExpression':\n            return node.operator;\n\n        case 'AssignmentExpression':\n            return node.operator;\n\n        case 'FunctionDeclaration':\n            var params1 = _.map(node.params, 'name').join(',');\n            return 'function ' + (!(!(node.id && node.id.name) && !'')) + '(' + params1 + ')';\n\n        case 'FunctionExpression':\n            var params2 = _.map(node.params, 'name').join(',');\n            return 'function ' + (!(!(node.id && node.id.name) && !'')) + '(' + params2 + ')';\n\n        default:\n            return node.type;\n    }\n};\n\nclass AstVisualizer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            treeData: [],\n        };\n\n    }\n\n    componentDidMount() {\n        this.setState({treeData: this.buildTree(this.props.ast)})\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({treeData: this.buildTree(nextProps.ast)})\n    }\n\n    recursiveBuilder = (node) => {\n        let children = getChildren(node);\n        let tree = [];\n        if (children === [])\n            return children;\n        children.forEach((child) => {\n            tree.push({\n                title: getLabel(child),\n                children: this.recursiveBuilder(child),\n                expanded: true,\n                type: child.type,\n                start: child.start,\n                end: child.end\n            });\n        });\n        return tree\n    };\n\n    buildTree = (ast) => {\n        let tree = [];\n        tree.push({\n            title: getLabel(ast),\n            children: this.recursiveBuilder(ast),\n            expanded: true,\n            type: ast.type,\n            start: ast.start,\n            end: ast.end\n        });\n        return tree\n    };\n\n    highlightCode = (start, end) => {\n        let codeEditor = this.props.cm.current.editor.doc;\n        const fromIndex = codeEditor.posFromIndex(start);\n        const toIndex = codeEditor.posFromIndex(end);\n        codeEditor.markText(fromIndex, toIndex, {\n            className: 'highlighted-code'\n        });\n    };\n\n    clearHighlightedCode = () => {\n        this.props.cm.current.editor.doc.getAllMarks().forEach((m) => {\n            m.clear()\n        })\n    };\n\n    render() {\n        return (\n            <SortableTree\n                treeData={this.state.treeData}\n                onChange={treeData => this.setState({treeData})}\n                canDrag={false}\n                generateNodeProps={({node}) => {\n                    return {\n                        className: node.type,\n                        onMouseEnter: () => this.highlightCode(node.start, node.end),\n                        onMouseLeave: () => this.clearHighlightedCode()\n                    };\n                }}\n            />\n        );\n    }\n}\n\nexport default AstVisualizer;","import React from \"react\";\n\nconst SvgCProgramming = React.forwardRef((props, ref) => (\n    <svg viewBox=\"0 0 48 48\" width={480} height={480} {...props} ref={ref}>\n        <g fillRule=\"evenodd\">\n            <path\n                d=\"M22.902 3.285a2.262 2.262 0 0 1 2.196 0c3.351 1.883 13.449 7.55 16.804 9.434A2.125 2.125 0 0 1 43 14.566v18.868c0 .761-.418 1.464-1.098 1.847l-16.804 9.434a2.262 2.262 0 0 1-2.196 0L6.098 35.28A2.125 2.125 0 0 1 5 33.434V14.566c0-.761.418-1.464 1.098-1.847 3.351-1.883 13.453-7.551 16.804-9.434z\"\n                fill=\"#283593\"\n            />\n            <path\n                d=\"M5.305 34.402C5.039 34.047 5 33.711 5 33.254V14.496a2.11 2.11 0 0 1 1.094-1.836c3.343-1.87 13.406-7.508 16.75-9.379.676-.379 1.593-.37 2.27.008 3.343 1.871 13.37 7.457 16.714 9.328.27.153.477.336.66.578z\"\n                fill=\"#5c6bc0\"\n            />\n            <path\n                d=\"M24 10c7.727 0 14 6.273 14 14s-6.273 14-14 14-14-6.273-14-14 6.273-14 14-14zm0 7c3.863 0 7 3.137 7 7s-3.137 7-7 7-7-3.137-7-7 3.137-7 7-7z\"\n                fill=\"#fff\"\n            />\n            <path\n                d=\"M42.484 13.203c.516.485.508 1.211.508 1.785 0 3.797-.031 14.59.008 18.383.004.399-.129.816-.324 1.129L23.594 24z\"\n                fill=\"#3949ab\"\n            />\n        </g>\n    </svg>\n));\n\nexport default SvgCProgramming;\n","import React, {Component} from 'react';\nimport styled from 'styled-components'\nimport anime from \"animejs\";\nimport SvgCProgramming from \"../Images/CProgramming\";\n\n\nconst Image = styled.div`\n    width: 40vmin;\n    margin: 8vh auto;\n`\nconst AppTitle = styled.div`\n    text-align: center;\n    font-weight: 300;\n    font-size: calc(12px + 3.6vw);\n    letter-spacing: 1.8px;\n    margin-top: 40px;\n    border: medium none;\n    margin-bottom: 20px;\n`\nconst AppDescription = styled.div`\n    text-align: center;\n    font-weight: 300;\n    margin: 0px auto;\n    font-size: calc(8px + 0.91vw);\n`\nconst Container = styled.div`\n`\n\nconst GHButton = styled.button`\n    padding: 3px 10px 3px 8px;\n    font-size: 16px;\n    line-height: 22px;\n    border-radius: 4px;\n    text-shadow: 0 1px 0 #fff;\n    white-space: nowrap;\n    cursor: pointer;\n    color: #333;\n    background-repeat: no-repeat;\n    border: 1px solid #d5d5d5;\n    font-weight: 700;\n    vertical-align: top;\n    margin: 0 10px;\n    \n    :hover{\n        text-decoration: none;\n        background-color: #ddd;\n        background-image: -webkit-gradient(linear,left top,left bottom,color-stop(0,#eee),color-stop(100%,#ddd));\n        background-image: -webkit-linear-gradient(top,#eee 0,#ddd 100%);\n        background-image: -moz-linear-gradient(top,#eee 0,#ddd 100%);\n        background-image: -ms-linear-gradient(top,#eee 0,#ddd 100%);\n        background-image: -o-linear-gradient(top,#eee 0,#ddd 100%);\n        background-image: linear-gradient(to bottom,#eee 0,#ddd 100%);\n        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#eeeeee', endColorstr='#dddddd', GradientType=0);\n        border-color: #ccc;\n    }\n`\n\nconst ButtonGroup = styled.div`\n    margin-top: 40px;\n    text-align: center;\n`\n\nexport default class FrontPage extends Component {\n    constructor() {\n        super();\n\n        this.image = React.createRef();\n        this.imageContainer = React.createRef();\n    }\n\n    componentDidMount() {\n        let scaleAnime = anime({\n            easing: \"easeOutCubic\",\n            targets: this.imageContainer.current,\n            direction: 'alternate',\n            duration: 2000,\n            scale: '.9',\n            loop: true\n        });\n\n        let spinAnime = anime({\n            targets: this.image.current,\n            delay: 6000,\n            duration: 4000,\n            rotate: '360deg',\n            loop: true\n        })\n    }\n\n\n    render() {\n        return (\n            <Container>\n\n                <Image ref={this.imageContainer}>\n                    <SvgCProgramming ref={this.image}/>\n                </Image>\n\n                <AppTitle>The Ultimate SIMD visualizer</AppTitle>\n                <AppDescription>\n                    Built by <strong>Jérémie Piotte</strong>, <strong>Daniel Lemire</strong> and <strong>Pierre Marie\n                    Ntang</strong>\n                </AppDescription>\n                <ButtonGroup>\n                    <a href=\"https://github.com/piotte13/SIMD-Visualiser\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        <GHButton>View on GitHub</GHButton>\n                    </a>\n                    <iframe\n                        src=\"https://ghbtns.com/github-btn.html?user=piotte13&repo=SIMD-Visualiser&type=star&count=true&size=large\"\n                        frameBorder=\"0\" scrolling=\"0\" width=\"160px\" height=\"30px\"/>\n                </ButtonGroup>\n            </Container>\n        )\n    }\n}","import React from \"react\";\n\nconst SvgCryingboy = props => (\n    <svg\n        id=\"cryingboy_svg__Layer_1\"\n        x={0}\n        y={0}\n        viewBox=\"0 0 612 584.6\"\n        xmlSpace=\"preserve\"\n        {...props}\n    >\n        <style>\n            {\n                \".cryingboy_svg__st0{fill:#ba5027}.cryingboy_svg__st8{fill:#ddf2fd}.cryingboy_svg__st13{fill:#f5ebf4;stroke:#ecdded;stroke-width:3;stroke-miterlimit:10}.cryingboy_svg__st14{fill:#ecdded}.cryingboy_svg__st15{fill:#ddf2fd;stroke:#61c0ea;stroke-width:3;stroke-miterlimit:10}.cryingboy_svg__st16{fill:#5d250c}\"\n            }\n        </style>\n        <path\n            className=\"cryingboy_svg__st0\"\n            d=\"M312.6 85.3s124.3-22 139 48.7 34.8 161.5 34.8 161.5-22-34.1-20.7-33.5c1.3.6 5.9 92.2-21.4 133.7S389 454 389 454l16.7-36.1L347 454l3.9-36.1-38.4 63.4-81-55.3s22.2 36.7 20.2 35.3c-2-1.3-51.3-13.7-75.3-61.5s-42-104.3-42-104.3l-4.7 33.8s-31.3-128.7 8-172 69.2-96 121.9-86.7 53 14.7 53 14.7z\"\n        />\n        <path\n            d=\"M247.5 512.7s-14.8 9.1-33.6 12-50.3 10.4-53.3 23.9 0 36 0 36h331.5s-25.5-47.8-39-59.9-50.4 0-50.4 0l-30.4-12H247.5z\"\n            fill=\"#ede81d\"\n        />\n        <path\n            d=\"M248.2 357.7s21.8 62 19.8 92-9.8 52-9.8 52 26.8 12 51.3 11c24.5-1 53.9-11 53.9-11s-29-30.2-20.1-52c8.8-21.8 20.1-103.8 20.1-103.8l-115.2 11.8z\"\n            fill=\"#e8c0a6\"\n        />\n        <path\n            d=\"M267.8 437.7c5 14 15.8 26.9 29.6 32.8 15.7 6.8 30.9.8 43.4-9.5.3-.3.7-.6 1-.9.2-2 .7-3.9 1.5-5.8 8.8-21.8 20.1-103.8 20.1-103.8l-115.2 11.8s14.9 42.4 19 74.1c.3.4.5.8.6 1.3z\"\n            fill=\"#c9aa9a\"\n        />\n        <path\n            d=\"M190.4 246.5s3.7 9.9 0 29.8c-3.7 19.8-19.3 67.6 0 96.1s28 59.5 119 65.7c90.9 6.2 132.1-59.5 134.6-85 2.5-25.4-10-75-10-75l10.3-24.8S444 103.8 318.8 94.5 179.6 170.2 181 186.9s9.4 59.6 9.4 59.6z\"\n            fill=\"#fcd5b6\"\n        />\n        <path\n            d=\"M408.8 254.2C393 249.6 377 245.6 361 242c-37.9-8.5-77.9-21.8-115.8-6.5-13.7 5.5-26.5 13.7-37.6 23.6-2.6 12.5-.1 26.9 4.9 37.3.5 1.1 1.1 2.1 1.7 3.1 8-.7 16-1.3 24-1.6 35.9-1.6 71.9 0 107.7 3.5 14.9 1.4 29.8 3.1 44.7 5 1-1.4 1.9-2.8 2.8-4.3 7.4-12.2 13.6-26.3 15.1-40.6.2-2.4.4-4.9.3-7.3z\"\n            fill=\"#efbba0\"\n        />\n        <path\n            d=\"M418.1 309.2c-5.7-10.1-12.1-20.1-20.8-27.9-8.4-7.5-18.3-13.3-28.2-18.6-23.8 1.6-56.1 14.4-69.3 13.4 0 0-9.1-5.9-52.5-5.5-3.2 0-6.2.2-9.1.6-5.2 6.2-10.6 12.3-16.1 18.3-.4.8-1 1.5-1.8 2-8.1 8.8-16.4 17.5-24.7 26.1-1.6 1.6-3.1 3.3-4.6 4.9-1.3 6.8-2.2 14.1-2.9 21.9-2.6 31.5 29 62.1 69.7 78.3.2-.1.3-.1.5-.2 22.9-9.5 47.1-12 71.7-10.6 13.8.8 27.3 2.8 40.6 5.9 29.8-17.9 50.9-46.6 55.9-66.7 1.9-7.5 1.9-15.8.5-24.1-2.7-6-5.7-12-8.9-17.8z\"\n            fill=\"#5e3938\"\n        />\n        <path\n            d=\"M397.3 281.3c-8.7-7.8-19-13.8-29.4-19.3-22.4.5-50.8 9.1-63.6 8.2 0 0-13.5 0-57 .4-3.2 0-6.2.2-9.1.6-5.2 6.2-10.6 12.3-16 18.3-.4.8-1 1.5-1.9 2L208 304.7c1.6 5.9 4.1 11.1 8.8 14.5 3.1 2.2 10.8 6.4 13.1 1.8 1.2-2.5.9-5.9 1.8-8.6 1.1-3.3 3-5.9 5.6-8.1 8.7-7.4 21.6-8 32.2-9.3 14.3-1.7 28.4-4.2 42.9-4 11.8.2 23.3 1.2 35.1 1 11.1-.2 22.8.2 33.1 5.4 5.1 2.5 9.6 6.2 12.9 11 .7.9 2.4 5.1 3.3 5.5 2 .8 5-3.5 5.8-4.8 2.8-4.2 4.9-8.9 7-13.6-3.6-5.2-7.6-10-12.3-14.2z\"\n            fill=\"#fff\"\n            stroke=\"#ddf2fd\"\n            strokeWidth={3}\n            strokeMiterlimit={10}\n        />\n        <path\n            className=\"cryingboy_svg__st8\"\n            d=\"M221.9 290c-.4.6-.9 1.1-1.6 1.6L208 304.8c1.6 5.9 4.1 11.1 8.8 14.5 3.1 2.2 10.8 6.4 13.1 1.8 1.2-2.5.9-5.9 1.8-8.6.5-1.5 1.2-2.9 2-4.2-5.4-4.5-9.5-11.1-11.8-18.3zM404.6 289c-2.3 7.3-5.8 14-11.4 19l.3.3c.7.9 2.4 5.1 3.3 5.5 2 .8 5-3.5 5.8-4.8 2.8-4.2 4.9-8.9 7-13.6-1.6-2.2-3.3-4.3-5-6.4z\"\n        />\n        <path\n            d=\"M305.5 389.8s-42.4-7.6-44.8-33.1c-2.4-25.5-3.2-50.1 18.2-45.8 21.3 4.2 8.7 18.7 11.8 28.8 3.2 10.2 15 14.8 22.1 10.4 7.1-4.4-2.4-29.9 0-34.1s17.4-10.2 24.9 2.5 7.5 55.1-9.1 65.3c-16.5 10.3-23.1 6-23.1 6z\"\n            fill=\"#492f2f\"\n        />\n        <path\n            d=\"M258.3 422.6c22.9-9.5 47.1-12 71.7-10.6 13.8.8 27.3 2.8 40.6 5.9 7.6-4.6 14.6-9.8 21-15.5 1.4-8.5.2-16.9-5-24-13.2-17.9-41-6.6-56.6.2-11.9 5.2-23.3 5.9-35.4 1.2-6.2-2.4-12.1-5.7-18.4-7.4-6-1.6-12.1-1.6-18.2-1.6-10.3-.1-22.5-3.7-30.1 6-5.4 7-5.7 17.1-6 26 10.5 7.9 22.8 14.7 36 20 .1-.1.3-.1.4-.2z\"\n            fill=\"#a87373\"\n        />\n        <path\n            d=\"M388.3 378.4c-13.2-17.9-41-6.6-56.6.2-11.9 5.2-23.3 5.9-35.4 1.2-6.2-2.4-12.1-5.7-18.4-7.4-6-1.6-12.1-1.6-18.2-1.6-10.3-.1-22.5-3.7-30.1 6-5.4 7-5.7 17.1-6 26 7.5 5.6 15.9 10.7 24.9 15.1.8-5.8 3.9-11.3 9.8-15.7 16.5-12.5 40.5-14.8 60-15 18.2-.2 44.1 1.8 55.2 20.1 1.5 2.5 2.6 5.2 3.2 8 5.9-3.9 11.5-8.2 16.6-12.8 1.4-8.6.3-16.9-5-24.1z\"\n            fill=\"#966565\"\n        />\n        <path\n            className=\"cryingboy_svg__st8\"\n            d=\"M233.7 308.2l12.5-8.5s2.8 16.7 0 18.4c-2.8 1.7-18.9 7.2-18.9 7.2l-13.4-8.5M372.5 297.6s6.7 18.4 11 21 16.5-4.7 16.5-4.7l5.6-11.5-21.2-2.7-10.3-4.9-9.4-2.1 7.8 4.9z\"\n        />\n        <path\n            d=\"M258.2 501.7l-10.8 11.1s44.2 14.8 58.4 13.3c14.2-1.5 66.4-13.3 66.4-13.3l-10.8-13.3s-45.3 13.6-55.6 13.3c-10.3-.3-47.6-11.1-47.6-11.1\"\n            fill=\"#1c4923\"\n        />\n        <path\n            className=\"cryingboy_svg__st13\"\n            d=\"M267.5 584.6S257 503 255.7 504.3c-1.2 1.3-20.2 15.9-32.1 18.4s-56.1 9.4-64.4 19.4 1.3 42.6 1.3 42.6h107z\"\n        />\n        <path\n            className=\"cryingboy_svg__st14\"\n            d=\"M263.7 563c.1.1.1.2.2.4-3.2-24-7.9-57.8-8.7-57-1 1-13.1 10.5-24.1 15.5 15 10.1 25.3 24.7 32.6 41.1z\"\n        />\n        <path\n            className=\"cryingboy_svg__st13\"\n            d=\"M357.4 494.6s.5.8 1.3 2.3c4.3 7.9 18.1 33.7 17.3 42.1-1 10-9.3 45.6-9.3 45.6h125.4s-27.6-55-42.1-62-54.5-3.4-61-9.7c-6.5-6.3-38.1-27.5-38.1-27.5l6.5 9.2z\"\n        />\n        <path\n            className=\"cryingboy_svg__st14\"\n            d=\"M366.7 584.6H384c-.4-3.8-.6-7.5-.5-11.1.3-19.2 4.3-40.1 14.2-56.7l.6-.9c-4.4-.7-7.8-1.6-9.3-3-6.5-6.3-38.1-27.5-38.1-27.5l6.5 9.3s.5.8 1.3 2.3c4.3 7.9 18.1 33.7 17.3 42.1-1 9.9-9.3 45.5-9.3 45.5z\"\n        />\n        <path\n            d=\"M198.5 262.5c0-1.5 8.3-11 8.3-11l62.4-14.5 10.5 9.5-12.9-5-68.2 25.9v-4.9zM416.6 257.9c0-1.5-7.7-11-7.7-11l-58.4-14.5-9.8 9.5 12.1-5 63.9 25.9v-4.9z\"/>\n        <circle className=\"cryingboy_svg__st15\" cx={190.8} cy={284.5} r={11.1}/>\n        <ellipse\n            transform=\"rotate(-33.304 148.976 334.453)\"\n            className=\"cryingboy_svg__st15\"\n            cx={149}\n            cy={334.5}\n            rx={11.1}\n            ry={8.1}\n        />\n        <ellipse\n            transform=\"rotate(-33.304 155.892 299.537)\"\n            className=\"cryingboy_svg__st15\"\n            cx={155.9}\n            cy={299.6}\n            rx={4.5}\n            ry={3.3}\n        />\n        <ellipse\n            transform=\"rotate(-33.304 164.751 365.737)\"\n            className=\"cryingboy_svg__st15\"\n            cx={164.8}\n            cy={365.8}\n            rx={4.5}\n            ry={3.3}\n        />\n        <ellipse\n            transform=\"rotate(-33.304 148.976 399.795)\"\n            className=\"cryingboy_svg__st15\"\n            cx={149}\n            cy={399.8}\n            rx={11.1}\n            ry={8.1}\n        />\n        <ellipse\n            transform=\"rotate(-54.336 451.598 313.206)\"\n            className=\"cryingboy_svg__st15\"\n            cx={451.6}\n            cy={313.2}\n            rx={9.3}\n            ry={13.3}\n        />\n        <ellipse\n            transform=\"rotate(-54.336 471.712 362.208)\"\n            className=\"cryingboy_svg__st15\"\n            cx={471.7}\n            cy={362.2}\n            rx={9.3}\n            ry={13.3}\n        />\n        <ellipse\n            className=\"cryingboy_svg__st15\"\n            cx={421.7}\n            cy={264.9}\n            rx={17.4}\n            ry={7.2}\n        />\n        <path\n            className=\"cryingboy_svg__st0\"\n            d=\"M315.6 80.3l37.6-54.7s66.8 26.6 95.6 104.7c28.8 78.1 37.5 150.8 37.5 150.8l-77.6-127.7s-28.6-17.6-27.4-16.8c1.2.8 33.6 55.1 33.6 55.1l-61.7-57.4s1 13.3 0 50-21.9 72.6-21.9 72.6l-51.8-94.5 18.6 47.9s-38.1-35.4-40.9-51.8c-2.9-16.4-5.9-38.3-5.9-38.3s-7.4 77.6-8.9 87.3-53.6 55.4-53.6 55.4l-23.9 31.6s-20.7-28.2-3.9-91.5 25.8-100.7 59.1-114.8 37.7-11.7 37.7-11.7l-33.2-8.6s69.7-14.3 73.4-12.2 17.6 24.6 17.6 24.6z\"\n        />\n        <path\n            className=\"cryingboy_svg__st13\"\n            d=\"M342.5 466.2s-.3 8.1 10.3 21.8c10.6 13.7 22.8 46.9 22.8 46.9s13.5-21.6 27.1-25.6c13.6-4 25.3 8.8 25.3 8.8s-13.3-27.5-19.1-36.8c-5.8-9.3-65.5-31.7-65.5-31.7l-.9 16.6z\"\n        />\n        <path\n            className=\"cryingboy_svg__st14\"\n            d=\"M352.9 488.1c.9-2.3 1.9-4.5 3.2-6.6 5-8.4 12.1-14.3 20.2-18.4-16.5-7.2-33-13.4-33-13.4l-.8 16.5s-.3 8.1 10.4 21.9c-.1-.1 0-.1 0 0z\"\n        />\n        <path\n            className=\"cryingboy_svg__st13\"\n            d=\"M267.5 460.7l-7.9 48 3.9 26.2s-6.4-29.3-29.8-35.4-31.9 4.7-31.9 4.7l38.2-47.3 28.1-7.2-.6 11z\"\n        />\n        <path\n            className=\"cryingboy_svg__st14\"\n            d=\"M249.9 467.4c5.3 5.7 8.6 13.9 11.6 20.9.4.8.7 1.7 1 2.5l5-30.2.6-11-28.1 7.2-3 3.7c4.9 1.1 9.5 3.1 12.9 6.9z\"\n        />\n        <path\n            className=\"cryingboy_svg__st16\"\n            d=\"M279.5 162.3c1.1 2 51.8 94.5 51.8 94.5l-35.9-114-23.4-21.5 7.5 41z\"\n        />\n        <path\n            className=\"cryingboy_svg__st16\"\n            d=\"M297.1 207.5l-17.6-45.2-7.5-41-1.5 43.1zM353.6 147.9l-.4-13.7 61.7 57.4-55.1-62.5s-11.9-27.7-12.3-24.2c-.4 3.5 1.8 28.9 1.8 28.9l4.2 28.5.1-14.4zM381.4 136.5l-7.5-27.7 15.2 27.7 19.6 16.9zM251.3 120.1l-8.9 87.4-30.6 34.3 20.5-37.5zM129.7 329.3l4.6-33.8-2.3-37.8zM240 456.9l7.5-3.9-16-27 36.6 23.7-1.5-17.4s-29.4-8.7-37.3-14.4c-8-5.6-25.2-24.5-25.2-24.5l15.5 39.2-36-20.5s21.2 26.3 36 34.3c14.7 8 20.4 10.5 20.4 10.5zM348.9 436.1s34.6-9.3 46.8-18.2c12.3-8.9 28-24.5 28-24.5l20.5-37.8-10.8 40.3 21.1-21.9s-17.1 36.7-26.6 48.9S389 454 389 454l16.7-36.1-54.8 33.7-5.1-4.6 3.1-10.9z\"\n        />\n        <path\n            d=\"M414.9 205l-1.4 6.6s-19.9 2.8-40.4-.5-50.8-16.2-50.8-16.2l2-9.2s12.5 14.6 43.4 18.9 47.2.4 47.2.4zM188.4 222.6l2.4 5.2s22.8-4.4 45.4-14.2c22.6-9.8 55.2-31.2 55.2-31.2l-3.4-7.3s-12.2 16.8-46.4 31c-34.1 14.2-53.2 16.5-53.2 16.5z\"/>\n    </svg>\n);\n\nexport default SvgCryingboy;\n","import React, {Component} from 'react';\nimport styled from \"styled-components\";\nimport SvgCryingboy from \"../Images/Cryingboy\";\n\nconst ErrorPageContainer = styled.div`\n    padding: 50px;\n`\n\nconst TextJumbo = styled.div`\n    font-size: 60px;\n    font-weight: 700;\n    color: rgb(72, 72, 72);\n    margin-bottom: 15px;\n`\n\nconst ErrorMessage = styled.div`\n    font-size: 32px;\n    font-weight: normal;\n    color: rgb(72, 72, 72);\n    margin-bottom: 15px;\n    margin-top: 25px;\n`\n\nconst ErrorPosition = styled.div`\n    font-size: 14px;\n    font-weight: bold;\n    color: #767676;\n    margin-bottom: 15px;\n    margin-top: 25px;\n`\nconst ImageContainer = styled.div`\n    position: absolute;\n    bottom: 0;\n    right: 0;\n    width: 50vh;\n`\n\nclass ErrorHandler extends Component {\n\n    componentDidMount() {\n        if (this.props.error.length !== 0) {\n            this.highlightCode();\n        }\n    }\n\n    componentWillUnmount() {\n        this.clearHighlightedCode()\n    }\n\n    highlightCode = () => {\n        const line = this.props.error[0].tag.line - 1;\n        let cm = this.props.cm.current;\n        if (cm) {\n            const lineLength = cm.editor.getLine(line).length;\n            cm.editor.doc.markText({line, ch: 0}, {line, ch: lineLength}, {\n                className: 'highlighted-code'\n            });\n        }\n    };\n\n    clearHighlightedCode = () => {\n        let cm = this.props.cm.current;\n        cm && cm.editor.doc.getAllMarks().forEach((m) => {\n            m.clear()\n        })\n    };\n\n    getErrorMessage = () => {\n        return this.props.error[0].tag.text;\n    }\n    getErrorPosition = () => {\n        return <div>\n            <p>Line: {this.props.error[0].tag.line} </p>\n            <p> Column: {this.props.error[0].tag.column} </p>\n        </div>\n\n    }\n\n    render() {\n        return (\n            <ErrorPageContainer>\n                <TextJumbo>Oops!</TextJumbo>\n                <ErrorMessage>\n                    {this.getErrorMessage()}\n                </ErrorMessage>\n                <ErrorPosition>\n                    {this.getErrorPosition()}\n                </ErrorPosition>\n                <ImageContainer>\n                    <SvgCryingboy/>\n                </ImageContainer>\n            </ErrorPageContainer>\n        );\n    }\n}\n\nexport default ErrorHandler;","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from \"react\";\nimport \"../css/Tabs.css\"\n\nexport class Tabs extends Component {\n    state = {\n        selected: this.props.selected\n    };\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return this.props !== nextProps || this.state !== nextState;\n    }\n\n    handleClick = (index, event) => {\n        event.preventDefault();\n        this.setState({\n            selected: index\n        });\n    }\n    _renderTitles = () => {\n\n        return (\n            <ul className=\"tabs__labels\">\n                {\n                    this.props.children.map((child, index) => (\n                        <li key={index}>\n                            <a href=\"#\"\n                               className={this.state.selected === index ? 'active' : ''}\n                               onClick={this.handleClick.bind(this, index)}>\n                                {child.props.label}\n                            </a>\n                        </li>\n                    ))\n                }\n            </ul>\n        );\n    };\n\n    _renderContent = () => {\n        return (\n            <div className=\"tabs__content\">\n                {this.props.children[this.state.selected]}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <div className=\"tabs\">\n                {this._renderTitles()}\n                {this._renderContent()}\n            </div>\n        );\n    }\n}\n\nexport class Pane extends Component {\n    render() {\n        return (\n            <div>\n                {this.props.children}\n            </div>\n        );\n    }\n};\n","import * as _ from \"lodash\";\n\nexport const NB_SIMD_REGISTERS = 32;\nexport const NB_GP_REGISTERS = 16;\nexport const ARCHITECTURE_SIZE = 64;\nexport const VAR_SIZE = 8; //Octets\nexport const TYPE_LENGTH = {\n    x: 512 / (4 * VAR_SIZE),\n    y: 512 / (2 * VAR_SIZE),\n    z: 512 / VAR_SIZE\n};\nconst isSIMDRegister = /[x-z]mm[0-9]+/;\n\n//Containing all the names of the general purpose registers classified by their bit width.\nconst GPRegistersNamesByBitWidth = {\n    64: ['rax', 'rbx', 'rcx', 'rdx', 'rsi', 'rdi', 'rbp', 'rsp', 'r8', 'r9', 'r10', 'r11', 'r12', 'r13', 'r14', 'r15'],\n    32: ['eax', 'ebx', 'ecx', 'edx', 'esi', 'edi', 'ebp', 'esp', 'r8d', 'r9d', 'r10d', 'r11d', 'r12d', 'r13d', 'r14d', 'r15d'],\n    16: ['ax', 'bx', 'cx', 'dx', 'si', 'di', 'bp', 'sp', 'r8w', 'r9w', 'r10w', 'r11w', 'r12w', 'r13w', 'r14w', 'r15w'],\n    8: ['al', 'bl', 'cl', 'dl', 'sil', 'dil', 'bpl', 'spl', 'r8b', 'r9b', 'r10b', 'r11b', 'r12b', 'r13b', 'r14b', 'r15b']\n};\n//Fastcall registers are used to pass parameters to functions.\nexport const FAST_CALL_REGISTERS = ['rdi', 'rsi', 'rdx', 'rcx', 'r8', 'r9'];\n\n//A dictionary of general purpose registers.  example usage: GPRegistersNameMap[\"rax\"] -> returns: {bitWidth: 64, index: 1}\n//index tells us which of the _GPRegisters the given name represents.\nconst GPRegistersNameMap = {};\n_.forIn(GPRegistersNamesByBitWidth, (names, bitWidth) => {\n    names.forEach((name, index) => {\n        GPRegistersNameMap[name] = {\n            bitWidth,\n            index\n        }\n    });\n});\n\nclass Registry {\n    constructor() {\n        // the array _SIMDRegisters contains NB_REGISTERS arrays\n        // of size 512 / VAR_SIZE filled with byte-sized values\n        this._SIMDRegisters = new Array(NB_SIMD_REGISTERS).fill(0).map(() =>\n            new Array(TYPE_LENGTH[\"z\"]).fill(0).map((val, i) => i)\n        );\n\n        // the array _GPRegisters (general purpose registers) contains NB_GP_REGISTERS arrays\n        // of size ARCHITECTURE_SIZE (64) / (8) VAR_SIZE filled with byte-sized values\n        this._GPRegisters = new Array(NB_GP_REGISTERS).fill(0).map(() =>\n            new Array(ARCHITECTURE_SIZE / VAR_SIZE).fill(0).map((val, i) => i)\n        );\n\n    }\n\n    // stores the value in array into the \"register\" where register is something like xmm0\n    set = (register, array) => {\n        if (isSIMDRegister.test(register)) {\n            const idx = +register.substring(3); // should  be the number of the register, between 0 and 32\n            const type = register[0];// should be x, y, z\n\n            this._SIMDRegisters[idx].splice(0, TYPE_LENGTH[type], ...array);\n        }\n        else if (GPRegistersNameMap[register]) {\n            const {bitWidth, index} = GPRegistersNameMap[register]\n            this._GPRegisters[index].splice(0, bitWidth / VAR_SIZE, ...array);\n        }\n    }\n    ;\n\n    // get either an x, a y or a z register, where \"register\" is a string like xmm0\n    get = (register) => {\n        if (isSIMDRegister.test(register)) {\n            const idx = +register.substring(3);// number of the register, should be between 0 and 32 on x64\n            const type = register[0];// should be x, y or z\n            //return the last n elements of the register.\n            return this._SIMDRegisters[idx].slice(0, TYPE_LENGTH[type])// slice apparently copies the value\n        }\n\n        const {bitWidth, index} = GPRegistersNameMap[register];\n        if (bitWidth && index)\n            return this._GPRegisters[index].slice(0, bitWidth / VAR_SIZE);\n\n        else return null;\n    };\n\n    // clear resets the \"registers\"\n    clear = () => {\n        this._SIMDRegisters.map(() =>\n            new Array(TYPE_LENGTH[\"z\"]).fill(0).map((val, i) => i));\n\n        this._GPRegisters.map(() =>\n            new Array(ARCHITECTURE_SIZE / VAR_SIZE).fill(0).map((val, i) => i));\n    }\n}\n\nconst instance = new Registry();\nObject.freeze(instance);\n\nexport default instance;\n","// should be in a distinct file\nimport uint32 from \"uint32\";\nimport * as _ from \"lodash\";\n\n\nlet toUINT = (array, toBitWidth, fromType, fromBitWidth) => {\n\n    let output = [];\n\n    if (toBitWidth === 32) {\n        // we have four bytes per 32-bit int\n        output = _.times(array.length / 4).map(i =>\n            uint32.fromBytesBigEndian(array[4 * i], array[4 * i + 1], array[4 * i + 2], array[4 * i + 3])\n        );\n    }\n\n    else if (toBitWidth === 8) {\n        // Temporary... For testing purposes only.  Should and will be perfected.\n        if (fromBitWidth === 8)\n            output = array.map(value => Math.abs(value)) //new Uint8Array(array);\n\n        else if (fromBitWidth === 32) {\n            output = new Array(array.length * 4);\n            // we have four bytes per 32-bit ints\n            for (var z = 0; z < array.length; z++) {\n                output[4 * z] = uint32.getByteBigEndian(array[z], 3);\n                output[4 * z + 1] = uint32.getByteBigEndian(array[z], 2);\n                output[4 * z + 2] = uint32.getByteBigEndian(array[z], 1);\n                output[4 * z + 3] = uint32.getByteBigEndian(array[z], 0);\n            }\n        }\n    }\n\n    return output\n};\n\nlet toINT = (array, toBitWidth, fromType, fromBitWidth) => {\n    // TODO\n    return array\n};\n\nlet toDouble = (array, toBitWidth, fromType, fromBitWidth) => {\n    // TODO\n    return array\n};\n\n\nexport function convert(data, toType, toBitWidth, fromType, fromBitWidth) {\n    let values = [];\n\n    //if (toBitWidth === 64 || fromBitWidth === 64) return null;\n\n    if (toBitWidth < fromBitWidth) {\n        _.forEach(data, lane => {\n            let newLanes = [];\n\n            _.times(fromBitWidth / toBitWidth).forEach(i => {\n                const mask = _.padEnd(\"0b\", toBitWidth + 2, '1');\n                newLanes.push((lane >> (i * toBitWidth)) & mask);\n            });\n\n            _.forEachRight(newLanes, nl => {\n                values.push(nl)\n            });\n        });\n    }\n\n    //TODO: overflow bug in conversion! see the Arithmetic animation..\n    else if (toBitWidth > fromBitWidth) {\n        const newNbOfLanes = (data.length * fromBitWidth) / toBitWidth;\n        const nbOfOldLanesInOneNewLane = data.length / newNbOfLanes;\n        _.times(newNbOfLanes).forEach(i => {\n            const currentPosition = i * nbOfOldLanesInOneNewLane;\n            const lanesToMerge = _.slice(data, currentPosition, currentPosition + nbOfOldLanesInOneNewLane);\n            let newLane = 0;\n            const mask = _.padEnd(\"0b\", fromBitWidth + 2, '1');\n\n            _.forEach(lanesToMerge, (laneToMerge, i) => {\n                let safeFromBitWidthNumber = laneToMerge & mask;\n                newLane = (newLane << (i * fromBitWidth)) | safeFromBitWidthNumber;\n            });\n\n            values.push(newLane);\n        });\n    }\n\n    else values = data.slice(0);\n\n    // switch (toType) {\n    //     case \"uint\":\n    //         values = toUINT(data, toBitWidth, fromType, fromBitWidth);\n    //         break;\n    //     case \"int\":\n    //         values = toINT(data, toBitWidth, fromType, fromBitWidth);\n    //         break;\n    //     case \"double\":\n    //         values = toDouble(data, toBitWidth, fromType, fromBitWidth);\n    //         break;\n    //     default:\n    //         values = data.slice(0);\n    // }\n\n    return values;\n}\n\n\nexport function convertToStrings(data, toType, toBitWidth, base = 16, precision = 0, fromType = \"int\", fromBitWidth = 8) {\n\n    let values = convert(data, toType, toBitWidth, fromType, fromBitWidth);\n    //Convert values to given base representation.  Ex: Hex, decimal, binary...\n\n    _.mixin({'toBase': (val, base) => val.toString(base)});\n\n    return values.map(value =>\n        _.chain(value)\n            .round(precision)\n            .toBase(base)\n            //.padStart(toBitWidth / 4, '0')  //to be perfected.\n            .toUpper()\n            .value()\n    );\n};","import React, {Component} from \"react\";\nimport * as _ from \"lodash\";\nimport \"../css/Vector.css\";\nimport {convertToStrings} from \"../Utils/Converter\";\n\nexport default class Vector extends Component {\n\n    static defaultProps = {\n        type: \"uint\",\n        bitWidth: 32,\n        data: [],\n        base: 10,\n        shiftData: [],\n        numbersRef: () => {\n        },\n        vectorRef: () => {\n        }\n\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            width: window.innerWidth\n        };\n\n        this.numbersRef = React.createRef();\n        this.vectorRef = React.createRef();\n        props.numbersRef(this.numbersRef);\n        props.vectorRef(this.vectorRef);\n    }\n\n    componentDidMount() {\n        this.updateWidth();\n        window.addEventListener(\"resize\", this.updateWidth);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateWidth);\n    }\n\n    updateWidth = () => {\n        this.setState({width: window.innerWidth});\n    };\n\n    render() {\n        let {data, shiftData, type, bitWidth, base} = this.props;\n\n        let values = convertToStrings(data, type, bitWidth, base);\n        let shiftValues = convertToStrings(shiftData, type, bitWidth, base);\n        let elCount = values.length;\n        let rectHeight = 50;\n        let padding = 20;\n        let rectLen = (this.state.width / 2) - padding - 80;\n        return (\n            <svg width={rectLen + padding} height={rectHeight + padding} ref={this.vectorRef}\n                 viewBox={`0 0 ${rectLen + padding} ${rectHeight + padding}`} xmlns=\"http://www.w3.org/2000/svg\">\n                <rect x={padding / 2} y={padding / 2} width={rectLen} height={rectHeight} rx=\"3\" ry=\"3\"\n                      className=\"vector-container\"/>\n                {\n                    _.times(elCount - 1, Number).map(i => {\n                        let x = padding / 2 + (rectLen / elCount) * (i + 1);\n                        return <line key={i} x1={x} y1={padding / 2} x2={x} y2={rectHeight + padding / 2}\n                                     className=\"vector-line\"/>\n                    })\n                }\n                <svg width={rectLen} height={rectHeight} x={padding / 2} y={padding / 2}\n                     viewBox={`0 0 ${rectLen} ${rectHeight}`}>\n                    <g ref={this.numbersRef}>\n                        {\n                            values.map((number, i) => {\n                                const x = (rectLen / elCount) * i;\n                                return (\n                                    <svg key={i} width={rectLen / elCount} height={rectHeight} x={x}>\n                                            <text x=\"50%\" y=\"50%\" dy=\".3em\" className=\"vector-values\">{number}</text>\n                                        </svg>\n                                )\n                            })\n                        }\n                        {\n                            shiftValues.map((number, i) => {\n                                const x = (rectLen / elCount) * i;\n                                const offset = (rectLen / elCount) * shiftValues.length;\n                                return (\n                                    <React.Fragment key={i}>\n                                        <svg width={rectLen / elCount} height={rectHeight} x={x + rectLen}>\n                                            <text x=\"50%\" y=\"50%\" dy=\".3em\"\n                                                  className=\"shift-values-right\">{shiftValues[i]}</text>\n                                        </svg>\n                                        <svg width={rectLen / elCount} height={rectHeight} x={x - offset}>\n                                            <text x=\"50%\" y=\"50%\" dy=\".3em\"\n                                                  className=\"shift-values-left\">{shiftValues[i]}</text>\n                                        </svg>\n                                    </React.Fragment>\n                                )\n                            })\n                        }\n                    </g>\n                </svg>\n            </svg>\n        );\n    }\n}","import React, {Component} from \"react\";\nimport Registry from \"../Utils/Registry\";\nimport Vector from \"./Vector\";\nimport anime from 'animejs';\n\nexport default class Ret extends Component {\n\n    static defaultProps = {\n        type: \"uint\",\n        bitWidth: 32,\n        base: 10,\n    };\n\n    constructor(props) {\n        super(props);\n\n        //Ret returns value on top of the stack.  For now we will assume the value is always 128 bits... (Xmm)\n        let returnValue = Registry.get('xmm0');\n\n        this.state = {\n            returnValue,\n        };\n\n        this.vector = React.createRef();\n        this.computeCommand();\n    }\n\n    getAnimation() {\n\n        //We make an empty timeline because sequentialComponent needs to know when to jump to the next command.\n        let timeline = anime.timeline({\n            easing: \"linear\",\n            autoplay: false,\n        });\n\n        timeline\n            .add({\n                targets: this.vector.current,\n                duration: 1000\n            });\n\n        let eternalGlow = anime.timeline({\n            easing: \"linear\",\n            loop: true,\n            autoplay: true,\n            direction: 'alternate'\n        });\n\n        eternalGlow // Creates the glow arround the returned vector (glowing box shadow)\n            .add({\n                targets: this.vector.current,\n                filter: [\"drop-shadow(0px 0px 10px rgba(42, 54, 59, 1))\", \"drop-shadow(0px 0px 1px rgba(42, 54, 59, .5))\"],\n                duration: 1000\n            });\n\n        return timeline;\n    }\n\n    //Compute the command and set the registry.\n    computeCommand() {\n\n    }\n\n    render() {\n        let {returnValue} = this.state;\n        let {type, bitWidth, base} = this.props;\n\n        return (\n            <Vector type={type}\n                    bitWidth={bitWidth}\n                    base={base}\n                    data={returnValue}\n                    vectorRef={(ref) => this.vector = ref}/>\n        );\n    }\n}\n","import React, {Component} from \"react\";\n\nexport default class UnsupportedCommand extends Component {\n\n    render() {\n        return (\n            <div>Unsupported Command: \"{this.props.name}\"</div>\n        );\n    }\n}","import React, {Component} from \"react\";\nimport styled from \"styled-components\";\nimport Registry from \"../Utils/Registry\";\nimport {convert} from \"../Utils/Converter\";\n\nconst FunctionContainer = styled.div`\n`\nconst FunctionName = styled.div`\n    font-size: 32px;\n    font-weight: normal;\n    color: rgb(72, 72, 72);\n    margin-bottom: 15px;\n    text-align: center;\n`\n\nexport default class Function extends Component {\n\n    constructor(props) {\n        super(props);\n\n        //Reset the registry because this is a new function!\n        Registry.clear();\n\n        props.params.forEach(param => {\n            Registry.set(param.register, convert(param.value, 'uint', 8, 'uint', param.bitWidth));\n        })\n    }\n\n\n    render() {\n        return (\n            <FunctionContainer>\n                <FunctionName>{this.props.name}</FunctionName>\n                <hr/>\n            </FunctionContainer>\n        );\n    }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport anime from 'animejs';\n\nconst Container = styled.div`\n  margin: 40px 0 20px 0;\n  opacity: 0;\n  text-align: center;\n  pointer-events: none;\n  \n  :first-child, last-child{\n    margin: 20px 0;\n  }\n`\n\nexport default class SequentialComponent extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            touchable: false\n        };\n\n        // create li DOM reference\n        this.container = React.createRef();\n        this.component = React.createRef();\n\n    }\n\n    allAnimationCompleted() {\n        this.props.onComplete(this.props.index);\n        //Remove sequential highlight since the component is done animating.\n        if (this.sequentialHighlight)\n            this.sequentialHighlight.clear();\n    }\n\n    componentDidMount() {\n        this.childAnimation = false;\n        let c = this.component.current;\n        if (c && c.getAnimation) {\n            this.childAnimation = c.getAnimation();\n        }\n\n        this.animeRef = anime({\n            targets: this.container.current,\n            easing: \"easeOutCubic\",\n            autoplay: false,\n            translateY: ['5vh', 0],\n            duration: 500,\n            delay: 800,\n            opacity: 1,\n            complete: () => {\n\n                if (this.childAnimation) {\n                    this.childAnimation.restart();\n                    this.childAnimation.finished.then(() => {\n                        this.allAnimationCompleted()\n                        this.setState({touchable: true});\n                    });\n                }\n                else {\n                    this.setState({touchable: true});\n                    this.allAnimationCompleted();\n                }\n            }\n        });\n\n        if (this.props.shouldBeVisible) {\n            this.animeRef.restart()\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.sequentialHighlight)\n            this.sequentialHighlight.clear();\n\n        anime.remove(this.container.current);\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n        if (this.props.play === true && !nextProps.play) {\n            if (this.childAnimation) {\n                this.childAnimation.pause()\n            }\n        }\n        else if (!this.props.play === true && nextProps.play && nextProps.shouldBeVisible) {\n            if (this.childAnimation) {\n                this.childAnimation.play()\n            }\n        }\n\n        if (!nextProps.shouldBeVisible && this.props.shouldBeVisible) {\n            //Component is being hidden. Rewind animation.\n            this.setState({touchable: false});\n            if (this.sequentialHighlight)\n                this.sequentialHighlight.clear();\n            this.animeRef.seek(0);\n            if (this.childAnimation) {\n                this.childAnimation.seek(0);\n                anime.remove(this.childAnimation);\n                this.childAnimation = this.component.current.getAnimation()\n            }\n        }\n        if (nextProps.shouldBeVisible && !this.props.shouldBeVisible) {\n            //Start Animation.\n            this.animeRef.restart();\n            //Highlight code to show user, which part of the code is being represented by this animation.\n            this.sequentialHighlight = this.highlightCode();\n\n        }\n    }\n\n    highlightCode = (isHover = false) => {\n        let line = this.component.current.props.line;\n        let cm = this.props.cm.current;\n        if (line && cm) {\n            const lineLength = cm.editor.getLine(line).length;\n            return cm.editor.doc.markText({line, ch: 0}, {line, ch: lineLength}, {\n                className: isHover ? 'highlighted-code' : 'sequential-highlighted-code'\n            });\n        }\n        return null\n    };\n\n    onEnter = () => {\n        this.hoverHighlight = this.highlightCode(true);\n        if (this.childAnimation) {\n            this.isLoop = this.childAnimation.loop;\n            this.childAnimation.loop = true;\n            this.childAnimation.restart();\n        }\n    };\n\n    onLeave = () => {\n        if (this.hoverHighlight) this.hoverHighlight.clear();\n        if (this.childAnimation) {\n            this.childAnimation.loop = this.isLoop;\n            this.childAnimation.restart();\n            this.childAnimation.seek(Infinity);\n        }\n    }\n\n    render() {\n        return (\n            <Container\n                style={this.state.touchable ? {'pointerEvents': 'all'} : {}}\n                ref={this.container}\n                onMouseEnter={this.onEnter}\n                onMouseLeave={this.onLeave}\n            >\n                {React.cloneElement(this.props.component, {ref: this.component})}\n            </Container>\n        );\n    }\n}\n","import React, {Component} from \"react\";\nimport Registry from \"../Utils/Registry\";\nimport Vector from \"./Vector\";\nimport * as _ from \"lodash\";\nimport anime from 'animejs';\n\nconst SHIFT_INDEX = 2;\nconst INPUT_INDEX = 1;\nconst OUTPUT_INDEX = 0;\n\nexport default class Shift extends Component {\n\n    static defaultProps = {\n        type: \"uint\",\n        bitWidth: 32,\n        base: 16,\n        direction: 'left',\n        // if no shiftData provided, default to zeroes.\n        shiftData: new Array(64).fill(0)\n    };\n\n    constructor(props) {\n        super(props);\n\n        let shiftLen = props.params[SHIFT_INDEX];\n        let input = Registry.get(props.params[INPUT_INDEX]);\n        const defaultBitWidth = props.defaultValues.length > 0 ? props.defaultValues[0].bitWidth : props.bitWidth;\n        const defaultBase = props.defaultValues.length > 0 ? props.defaultValues[0].base : props.base;\n        this.state = {\n            shiftLen,\n            input,\n            output: [],\n            defaultBitWidth,\n            defaultBase\n        };\n        this.computeCommand();\n    }\n\n    getAnimation() {\n        let directionValue = {\"right\": 1, \"left\": -1};\n        let {bitWidth} = this.props;\n        let {shiftLen, input} = this.state;\n        //In order to make it responsive, we have to calculate the shift in percentage of the vector length. Clever.\n        let shiftPercentage = 100 * directionValue[this.props.direction] * shiftLen * bitWidth / (input.length * 8);\n\n        let timeline = anime.timeline({\n            easing: \"easeOutCubic\",\n            loop: false,\n            autoplay: false\n        });\n\n        //TODO: Convert the visualisation from the desired visualization bitWidth (from the parameter page) to the command bitWidth (props).\n        // const nbOfConversion = Math.log2(this.props.bitWidth) - Math.log2(this.state.defaultBitWidth);\n        //\n        // _.times(Math.abs(nbOfConversion)).forEach(() => {\n        //     const multiplicative = nbOfConversion > 0 ? 2 : 0.5;\n        //     timeline\n        //        .add({\n        //            duration: 600,\n        //            delay: 300,\n        //            complete: () => {this.setState({defaultBitWidth: this.state.defaultBitWidth * multiplicative})}\n        //        })\n        // });\n\n        timeline\n            .add({\n                targets: this.numbersRef.current,\n                translateX: `${shiftPercentage}%`,\n                duration: 2000,\n                delay: 1000\n            });\n\n        // _.times(Math.abs(nbOfConversion)).forEach(() => {\n        //     const multiplicative = nbOfConversion < 0 ? 2 : 0.5;\n        //     timeline\n        //         .add({\n        //             duration: 600,\n        //             delay: 300,\n        //             complete: () => {this.setState({defaultBitWidth: this.state.defaultBitWidth * multiplicative})}\n        //         })\n        // });\n\n        return timeline;\n    }\n\n    //Compute the command and set the registry.\n    computeCommand() {\n        let {params, bitWidth} = this.props;\n        let shiftLen = params[SHIFT_INDEX] * (bitWidth / 8);\n        let input = Registry.get(params[INPUT_INDEX]);\n        let output = _.cloneDeep(input);\n        output.push(...new Array(shiftLen).fill(0));\n        output = output.slice(-input.length);\n        Registry.set(params[OUTPUT_INDEX], output);\n    }\n\n    render() {\n        let {input, defaultBitWidth, defaultBase} = this.state;\n        let {type, bitWidth, base, shiftData} = this.props;\n\n        return (\n            <Vector type={type}\n                    bitWidth={bitWidth}\n                    base={defaultBase}\n                    data={input}\n                    shiftData={shiftData}\n                    numbersRef={(ref) => this.numbersRef = ref}/>\n        );\n    }\n}","import React, {Component} from \"react\";\nimport Vector from \"./Vector\";\nimport Registry from \"../Utils/Registry\";\nimport {convert} from \"../Utils/Converter\";\nimport {Row, Col, Container} from 'reactstrap';\nimport * as _ from \"lodash\";\n\n\nimport anime from \"animejs\";\nimport uint32 from \"uint32\";\n\nconst INPUT1_INDEX = 1;\nconst INPUT2_INDEX = 2;\nconst OUTPUT_INDEX = 0;\n\nexport default class Arithmetic extends Component {\n    static defaultProps = {\n        type: \"uint\",\n        bitWidth: 32,\n        base: 16,\n        operation: 'add',\n    };\n\n    constructor(props) {\n        super(props);\n\n        let input1 = Registry.get(props.params[INPUT1_INDEX]);\n        let input2 = Registry.get(props.params[INPUT2_INDEX]);\n        let input1_converted = convert(input1, props.type, props.bitWidth, 'uint', 8);\n        let input2_converted = convert(input2, props.type, props.bitWidth, 'uint', 8);\n        let output_converted = [];\n        // why not do the computation in the constructor? This seems simpler. No multiple render calls.\n\n        input1_converted.forEach((val, i) => {\n            output_converted.push((val + input2_converted[i]) % Math.pow(2, props.bitWidth))\n        });\n\n        let output = convert(output_converted, 'uint', 8, props.type, props.bitWidth);\n        Registry.set(props.params[OUTPUT_INDEX], output);\n\n        const defaultBitWidth = props.defaultValues.length > 0 ? props.defaultValues[0].bitWidth : props.bitWidth;\n        const defaultBase = props.defaultValues.length > 0 ? props.defaultValues[0].base : props.base;\n\n        this.state = {\n            input1,\n            input2,\n            output,\n            input1_converted,\n            input2_converted,\n            output_converted,\n            defaultBitWidth,\n            defaultBase,\n            showOutput: false\n        };\n        this.state.output = _.cloneDeep(input1);\n\n        this.vector1 = React.createRef();\n        this.vector2 = React.createRef();\n        this.vector3 = React.createRef();\n        this.vector4 = React.createRef();\n        this.equals = React.createRef();\n    }\n\n    getAnimation() {\n\n        let timeline = anime.timeline({\n            easing: \"easeOutCubic\",\n            loop: false,\n            autoplay: false\n        });\n        let {output_converted} = this.state;\n        let input1_converted = _.cloneDeep(this.state.input1_converted);\n        let mock = {nextTick: 0, currentTick: 0};\n\n        timeline\n            .add({\n                targets: this.equals.current,\n                opacity: [0, 1],\n                duration: 500,\n                offset: 500\n            })\n            .add({\n                targets: this.vector3.current,\n                translateY: [-95, 0],\n                duration: 1500,\n                offset: \"+=500\"\n            })\n            .add({\n                targets: this.vector4.current,\n                translateY: [-258, -70],\n                duration: 1500,\n                offset: \"-=1500\"\n            })\n            .add({\n                targets: mock,\n                //find the maximum difference between input and output. this tells us the range of the animation (number of ticks).\n                nextTick: _.max(input1_converted.map((v, i) => Math.abs(output_converted[i] - v))),\n                easing: \"linear\",\n                duration: 2000,\n                round: 1,\n                offset: \"-=200\",\n                begin: () => {\n                    this.setState({output: _.cloneDeep(this.state.input1)});\n                },\n                update: (animation) => {\n                    //Update() is not called only upon update of the target... So we need to check if it changed...\n                    if (animation.began && mock.nextTick !== mock.currentTick) {\n                        input1_converted = input1_converted.map((val, i) => {\n\n                            //TODO: Temporary disable of the animation... it's broken and I don't have the time to fix it right now\n                            //let diff = output_converted[i] - val;\n                            // if (diff > 0) return val + 1;\n                            // if (diff < 0) return val - 1;\n                            //return val;\n                            return output_converted[i];\n                        });\n                        mock.currentTick = mock.nextTick;\n                        this.setState({output: convert(input1_converted, 'uint', 8, this.props.type, this.props.bitWidth)});\n\n                    }\n                }\n            });\n\n        return timeline;\n    }\n\n\n    render() {\n        let {input1, input2, output, defaultBase} = this.state;\n        let {type, bitWidth, base} = this.props;\n        let colCount = input1.length * 8 / bitWidth;\n\n        return (\n            <div style={{'height': '260px'}}>\n                <Vector type={type}\n                        bitWidth={bitWidth}\n                        base={defaultBase}\n                        data={input1}\n                        vectorRef={(ref) => this.vector1 = ref}\n                />\n                <Container>\n                    <Row>\n                        {_.times(colCount).map(i => <Col key={i}>+</Col>)}\n                    </Row>\n                </Container>\n                <Vector type={type}\n                        bitWidth={bitWidth}\n                        base={defaultBase}\n                        data={input2}\n                        vectorRef={(ref) => this.vector2 = ref}\n                />\n                <div ref={this.equals}>\n                    <Container>\n                        <Row>\n                            {_.times(colCount).map(i => <Col key={i}>=</Col>)}\n                        </Row>\n                    </Container>\n                </div>\n                <Vector type={type}\n                        bitWidth={bitWidth}\n                        base={defaultBase}\n                        data={input2}\n                        vectorRef={(ref) => this.vector3 = ref}\n                />\n                <Vector type={type}\n                        bitWidth={bitWidth}\n                        base={defaultBase}\n                        data={output}\n                        vectorRef={(ref) => this.vector4 = ref}\n                />\n            </div>\n        );\n    }\n}\n\n","import React, {Component} from 'react';\nimport Ret from \"../ASMComponents/ret\";\nimport UnsupportedCommand from \"../ASMComponents/UnsupportedCommand\";\nimport Function from \"../ASMComponents/Function\";\nimport SequentialComponent from \"../ASMComponents/SequentialComponent\";\nimport styled from \"styled-components\";\nimport {Row, Col, Button, Container} from 'reactstrap';\nimport '../css/ASMVisualizer.css'\nimport Shift from \"../ASMComponents/Shift\";\nimport Arithmetic from \"../ASMComponents/Arithmetic\";\nimport * as _ from \"lodash\";\n\n\nconst ButtonContainer = styled.div`\n    text-align: center;\n`\n\nconst AnimationContainer = styled.div`\n   overflow: auto;\n   height: calc(100% - 40px);\n`\n\nfunction commandFactory(c) {\n    switch (c.name) {\n        case \"vpslldq\":\n            return <Shift direction=\"left\" bitWidth={8}/>;\n        case \"vpsrldq\":\n            return <Shift direction=\"right\" bitWidth={8}/>;\n        case \"vpaddd\":\n            return <Arithmetic operation={\"add\"} bitWidth={32}/>;\n        case \"ret\":\n            return <Ret/>;\n        default:\n            return <UnsupportedCommand/>\n    }\n}\n\nclass AsmVisualizer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            idx: 0,\n            play: true,\n            restart: false\n        };\n\n    }\n\n    componentDidMount() {\n        this.props.cm.current.editor.doc.getAllMarks().forEach((m) => {\n            m.clear()\n        })\n    }\n\n    buildGraphicStack = () => {\n        let stack = [];\n        this.props.asm.forEach((func) => {\n            let commands = func.body;\n            stack.push(<Function name={func.name} params={func.params}/>);\n            commands.forEach(c => {\n                let command = commandFactory(c);\n                const defaultValues = _.filter(func.params, param => c.params.some(e => e === param.register));\n                stack.push(\n                    //c.line - 1 because line number starts at 1 and we need to start at 0.\n                    React.cloneElement(command, {name: c.name, params: c.params, line: c.line - 1, defaultValues})\n                );\n            });\n        });\n        return stack;\n    };\n\n    componentDonePlaying(key) {\n        if (this.state.play) {\n            let increment = key === this.state.idx ? 1 : 0;\n            this.setState({idx: this.state.idx + increment});\n        }\n    }\n\n    play() {\n        // if (!this.state.play) {\n        //     this.setState({idx: this.state.idx + 1});\n        // }\n        this.setState({play: true})\n    }\n\n    pause() {\n        this.setState({play: false})\n    }\n\n    // forward() {\n    //     this.setState({idx: this.state.idx + 1});\n    //     //this.componentDonePlaying(this.state.idx - 1);\n    // }\n\n    // backward() {\n    //     this.setState({idx: this.state.idx - 1});\n    //     setTimeout(() => {\n    //         this.componentDonePlaying(this.state.idx);\n    //     })\n    // }\n\n    restart() {\n        this.setState({idx: -1});\n        setTimeout(() => {\n            this.setState({play: true});\n            this.componentDonePlaying(-1);\n        })\n    }\n\n    getButtons = (play) => {\n        let buttons = [];\n        //buttons.push(<FontAwesomeIcon icon=\"backward\" onClick={this.backward.bind(this)}/>);\n\n        buttons.push({icon: <i className=\"fas fa-sliders-h\"></i>, onClick: this.props.onGoToParameters});\n\n        play === true ?\n            buttons.push({icon: <i className=\"fas fa-pause\"></i>, onClick: this.pause.bind(this)})\n            :\n            buttons.push({icon: <i className=\"fas fa-play\"></i>, onClick: this.play.bind(this)});\n\n        //buttons.push(<FontAwesomeIcon icon=\"forward\" onClick={this.forward.bind(this)}/>);\n        buttons.push({icon: <i className=\"fas fa-sync-alt\"></i>, onClick: this.restart.bind(this)});\n\n        return (\n            <Container style={{\"marginBottom\": \"30px\"}}>\n                <Row>\n                    {\n                        buttons.map((button, i) => (\n                            <Col key={i}>\n                                <ButtonContainer>\n                                    <Button color=\"primary\" outline onClick={button.onClick}\n                                            className={'playback-button'}>\n                                        {button.icon}\n                                    </Button>\n                                </ButtonContainer>\n                            </Col>\n                        ))\n                    }\n                </Row>\n            </Container>\n        )\n    };\n\n    render() {\n        return (\n            this.props.asm.length > 0 ?\n                <div style={{\"height\": \"inherit\"}}>\n\n                {this.getButtons(this.state.play)}\n                    <AnimationContainer>\n                        {\n                            this.buildGraphicStack().map((func, index) => (\n                                <SequentialComponent\n                                    key={index}\n                                    index={index}\n                                    component={func}\n                                    play={this.state.play}\n                                    shouldBeVisible={this.state.idx >= index}\n                                    onComplete={this.componentDonePlaying.bind(this)}\n                                    cm={this.props.cm}\n                                />\n                            ))\n                        }\n                    </AnimationContainer>\n            </div>\n                :\n                []\n        );\n    }\n}\n\nexport default AsmVisualizer;","import React, {Component} from 'react';\nimport styled from 'styled-components'\nimport {\n    Button, Card, CardBody, CardTitle, Row, Col, Container, ButtonGroup\n} from 'reactstrap';\nimport * as _ from \"lodash\";\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport 'rc-tooltip/assets/bootstrap.css';\nimport {FAST_CALL_REGISTERS, TYPE_LENGTH} from \"../Utils/Registry\";\nimport {convert} from \"../Utils/Converter\";\n\nconst PageContainer = styled.div`\n    padding: 50px;\n`\n\nconst Title = styled.div`\n    font-size: 60px;\n    font-weight: 700;\n    color: rgb(72, 72, 72);\n    margin-bottom: 15px;\n    text-align: center;\n`\n\nconst SubmitButton = styled.div`\n    position: absolute;\n    bottom: 50px;\n    left: calc(75% - 55px);\n    button{font-size: 1.5rem};\n`\nconst FunctionContainer = styled.div`\n\n`\nconst FunctionName = styled.div`\n    text-align: center;\n    margin-top: 50px;\n    font-size: 32px;\n    font-weight: normal;\n    color: rgb(72, 72, 72);\n`\n\nconst ParameterContainer = styled.div`\n    padding: 20px 0;\n    \n    .card-title {\n        margin-bottom: 0;\n        height: 100%;\n        line-height: 1.7rem;\n    }\n    \n    .card-body{\n        padding: 1rem;\n        \n        .row{\n            margin-bottom: 10px;\n        }\n    \n`\n\nconst ParameterOptionTitle = styled(Col)`\n    align-self: center;\n    height: 1.5rem;\n`\n\nconst RandomizeButton = styled.div`\n    float: right;\n    cursor: pointer;\n    color: var(--one);\n    font-size: 1.7rem;\n`\n\nconst VectorContainer = styled(Container)`\n    width: 96% !important;\n    height: 50px;\n    background-color: var(--main);\n    border-radius: 3px;\n    //margin: 0 2%;\n    box-shadow: 3px 3px 2px rgba(0,0,0,.4);\n    \n    .row{\n        height: 100%;\n    \n        .col{\n            text-align: center;\n            padding: 0;\n            \n            input{\n                width: 100%;\n                height: 100%;\n                color: var(--clear-text-color);\n                text-align: center;\n                border-radius: 0;\n                border: none;\n                background-color: inherit;\n                border-right: solid 1px var(--gray);\n            }\n            \n            :last-child input{\n                    border-right: none;\n                }\n        }\n    }\n}\n`;\n\nexport default class ParametersPage extends Component {\n    constructor(props) {\n        super(props);\n        this.setRegistersNamesAndValues();\n    }\n\n    componentDidMount() {\n\n    }\n\n    setRegistersNamesAndValues() {\n        this.props.asm.forEach((func, i) => {\n            let generalPurposeRegisterCount = 0;\n            let simdRegisterCount = 0;\n            func.params.forEach((param, j) => {\n                //if param.lanes === 1, it means we have a general purpose register. (it's not a vector)\n                if (param.lanes === 1) {\n                    param.register = FAST_CALL_REGISTERS[generalPurposeRegisterCount];\n                    generalPurposeRegisterCount++;\n                }\n                else {\n                    //reconstruct the SIMD register name.\n                    param.register = _.invert(TYPE_LENGTH)[(param.bitWidth * param.lanes) / 8] + \"mm\" + simdRegisterCount;\n                    simdRegisterCount++;\n                }\n                this.randomizeRegister(i, j)\n            })\n        })\n    }\n\n    getSliderMarks(paramBitLen) {\n        //Make sure laneWidth cannot be smaller than 4 bits\n        paramBitLen = _.max([4, paramBitLen]);\n        //Make sure laneWidth cannot be bigger than 64 bits\n        paramBitLen = _.min([paramBitLen, 64]);\n        const nbOfMarks = Math.log(paramBitLen) / Math.log(2) - 1;\n        let marks = {};\n        _.times(nbOfMarks).forEach(i => {\n            const percentage = 100 * (i + 1) / nbOfMarks;\n            marks[percentage] = Math.pow(2, i + 2);\n        });\n\n        return marks\n    };\n\n    onTypeChange(selected, functionNumber, paramNumber) {\n        this.props.asm[functionNumber].params[paramNumber].type = selected;\n        this.forceUpdate();\n    }\n\n    onWidthChange(newWidth, functionNumber, paramNumber) {\n        let param = this.props.asm[functionNumber].params[paramNumber];\n        const bitLen = param.bitWidth * param.lanes;\n        param.value = convert(param.value, param.type, newWidth, param.type, param.bitWidth);\n        param.bitWidth = newWidth;\n        param.lanes = bitLen / newWidth;\n\n        this.forceUpdate();\n    }\n\n    onBaseChange(selected, functionNumber, paramNumber) {\n        this.props.asm[functionNumber].params[paramNumber].base = selected;\n        this.forceUpdate();\n    }\n\n    onVectorValueChange(val, functionNumber, paramNumber, lane) {\n        let param = this.props.asm[functionNumber].params[paramNumber];\n        param.value[lane] = _.min([parseInt(val, param.base), Math.pow(2, param.bitWidth - 1)]);\n        this.forceUpdate();\n    }\n\n    randomizeRegister(functionNumber, paramNumber) {\n        let param = this.props.asm[functionNumber].params[paramNumber];\n        if (param.lanes === 1) {\n            param.value = [_.random(1, Math.pow(2, _.min([8, param.bitWidth - 1])))];\n        }\n        else {\n            param.value = new Array(param.lanes).fill(0).map(() => _.random(1, Math.pow(2, _.min([8, param.bitWidth - 1]))));\n        }\n    }\n\n    buildContent() {\n        let content = [];\n        this.props.asm.forEach((func, i) => {\n            content.push(\n                <FunctionContainer key={i}>\n                    <FunctionName>{func.name}</FunctionName>\n                    <hr/>\n                    {\n                        func.params.map((param, j) => {\n                            const paramBitLen = param.bitWidth * param.lanes;\n                            const marks = this.getSliderMarks(paramBitLen);\n\n\n                            return <ParameterContainer key={j}>\n                                <Card>\n                                    <CardBody>\n                                        <CardTitle>\n                                            {`Parameter ${j + 1}:`}&nbsp;&nbsp;\n                                            <strong>{`${paramBitLen} bits`}</strong>\n                                            <RandomizeButton onClick={() => {\n                                                this.randomizeRegister(i, j);\n                                                this.forceUpdate()\n                                            }}>\n                                                <i className=\"fas fa-dice\"></i>\n                                            </RandomizeButton>\n                                        </CardTitle>\n                                    </CardBody>\n                                    <VectorContainer>\n                                        <Row>\n                                            {\n                                                param.value.map((val, k) => (\n                                                    <Col key={k}>\n                                                        <input type=\"text\"\n                                                               value={val.toString(param.base)}\n                                                               onChange={(e) => this.onVectorValueChange(e.target.value, i, j, k)}/>\n                                                    </Col>\n                                                ))\n                                            }\n                                        </Row>\n                                    </VectorContainer>\n                                    <CardBody>\n                                        <Container>\n                                            <Row>\n                                                <ParameterOptionTitle xs=\"3\" sm=\"2\">Lane\n                                                    Width: &nbsp;</ParameterOptionTitle>\n                                                <Col>\n                                                    <Slider style={{margin: \"20px auto\"}}\n                                                            handleStyle={{\n                                                                height: 20,\n                                                                width: 20,\n                                                                marginLeft: -10,\n                                                                marginTop: -8,\n                                                            }}\n                                                            min={0}\n                                                            defaultValue={+_.invert(marks)[param.bitWidth]}\n                                                            marks={marks}\n                                                            step={null}\n                                                            onChange={(val) => this.onWidthChange(marks[val], i, j)}/>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <ParameterOptionTitle xs=\"3\" sm=\"2\">Type: </ParameterOptionTitle>\n                                                <Col>\n                                                    <ButtonGroup>\n                                                        <Button disabled\n                                                                color=\"info\"\n                                                                onClick={() => this.onTypeChange('int', i, j)}\n                                                                active={param.type === 'int'}>Integer</Button>\n                                                        <Button disabled\n                                                                color=\"info\"\n                                                                onClick={() => this.onTypeChange('float', i, j)}\n                                                                active={param.type === 'float'}>Floating Point</Button>\n                                                    </ButtonGroup>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <ParameterOptionTitle xs=\"3\" sm=\"2\">Base: </ParameterOptionTitle>\n                                                <Col>\n                                                    <ButtonGroup>\n                                                        <Button disabled\n                                                                color=\"info\"\n                                                                onClick={() => this.onBaseChange(2, i, j)}\n                                                                active={param.base === 2}>Binary</Button>\n                                                        <Button color=\"info\"\n                                                                onClick={() => this.onBaseChange(10, i, j)}\n                                                                active={param.base === 10}>Decimal</Button>\n                                                        <Button color=\"info\"\n                                                                onClick={() => this.onBaseChange(16, i, j)}\n                                                                active={param.base === 16}>Hexadecimal</Button>\n                                                    </ButtonGroup>\n                                                </Col>\n                                            </Row>\n                                        </Container>\n                                    </CardBody>\n                                </Card>\n                            </ParameterContainer>\n                        })\n                    }\n                </FunctionContainer>\n            )\n        });\n\n        return content;\n    }\n\n    render() {\n        return (\n            <PageContainer>\n                <Title>Choose your parameters</Title>\n                {\n                    this.buildContent()\n                }\n                <SubmitButton>\n                    <Button outline color=\"primary\" onClick={this.props.onComplete}>Let's go</Button>\n                </SubmitButton>\n            </PageContainer>\n        )\n    }\n}","import React, {Component} from 'react';\nimport {Controlled as CodeMirror} from 'react-codemirror2'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/material.css'\nimport 'codemirror/mode/clike/clike.js'\nimport 'codemirror/addon/selection/mark-selection.js'\nimport '../css/App.css';\nimport styled from 'styled-components'\nimport ButtonPanel from \"./ButtonPanel\";\nimport {generateASM, generateAST} from \"../Utils/Parser\";\nimport WaitingScreen from \"./WaitingScreen\";\nimport AstVisualizer from \"./ASTVisualizer\";\nimport FrontPage from \"./FrontPage\";\nimport {compile} from \"../Utils/Compiler\";\nimport ErrorHandler from \"./ErrorHandler\";\nimport {Pane, Tabs} from \"../Utils/Tabs\";\nimport AsmVisualizer from \"./ASMVisualizer\";\nimport {createBrowserHistory} from 'history';\nimport * as qs from 'qs';\nimport ParametersPage from \"./ParametersPage\";\nimport * as _ from \"lodash\";\n\n\n\nconst Container = styled.div`\n  display: flex;\n`\n\nconst LeftContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh\n  width: 50vw;\n  overflow: auto;\n`\n\nconst RightContainer = styled.div`\n  width: 50vw;\n  height: 100vh;\n  overflow: hidden;\n`\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        let savedState = localStorage.getItem('app-state');\n        this.history = createBrowserHistory();\n        this.state = {\n            code: `#include <x86intrin.h>\\n\\n__m128i PrefixSum(__m128i curr) {\\n  __m128i Add = _mm_slli_si128(curr, 4); \\n  curr = _mm_add_epi32(curr, Add);   \\n  Add = _mm_slli_si128(curr, 8);    \\n  return _mm_add_epi32(curr, Add);       \\n}`,\n            codeWasModifiedSinceLastCompile: true,\n            disableButtons: false,\n            status: 'compiles',\n            compiling: false,\n            ast: {},\n            clangAst: {},\n            asm: [],\n            error: [],\n            visualize: false,\n            parametersChosen: false\n        };\n        if (this.props.match.params.code) {\n            this.state.code = qs.parse(this.props.match.params.code).code\n        }\n        else if (savedState) {\n            // React wants us to mutate the state or it will lose the right reference...\n            _.assign(this.state, JSON.parse(savedState));\n            this.state.visualize = false;\n            this.state.parametersChosen = false;\n        }\n\n        this.cm = React.createRef();\n    }\n\n    componentDidUpdate() {\n        localStorage.setItem(\"app-state\", JSON.stringify(this.state));\n    }\n\n    handleClear = (clearCode = true) => {\n        this.setState(({code}) => ({\n            code: clearCode === true ? '' : code\n        }));\n    };\n\n    visualize = () => {\n        this.setState({compiling: true});\n        if (this.state.codeWasModifiedSinceLastCompile) {\n            this.setState((state) => {\n                Object.keys(state.ast).forEach(k => delete state.ast[k]);\n                Object.assign(state.ast, generateAST(this.cm.current.editor))\n            });\n            compile(this.cm.current.editor.getValue(), (error, asm, ast) => {\n                if (error.length === 0) {\n                    asm = generateASM(asm);\n                    this.setState((state) => {\n                        state.asm.splice(0, state.asm.length);\n                        asm.forEach(e => {\n                            state.asm.push(e)\n                        });\n\n                        return {\n                            compiling: false,\n                            status: 'compiles',\n                            error,\n                            clangAst: ast,\n                            codeWasModifiedSinceLastCompile: false,\n                            visualize: true,\n                            parametersChosen: false\n                        }\n                    });\n                }\n                else {\n                    this.setState((state) => {\n                        state.asm.splice(0, state.asm.length);\n                        return {compiling: false, status: 'error', error, clangAst: {}}\n                    });\n                }\n            })\n        }\n        else {\n            this.setState({compiling: false, visualize: true})\n        }\n    };\n\n    restart = () => {\n        this.setState((state) => {\n            Object.keys(state.ast).forEach(k => delete state.ast[k]);\n            state.asm.splice(0, state.asm.length);\n            return {\n                compiling: false,\n                codeWasModifiedSinceLastCompile: true,\n                clangAst: {},\n                error: [],\n                visualize: false,\n                parametersChosen: false\n            }\n        });\n    };\n\n    onParametersChosen() {\n        this.setState({parametersChosen: true});\n    }\n\n    getShareLink = () => {\n        //We need to specify the whole URL since we are in dev and bitly cannot work with localhost links.\n        return 'https://piotte13.github.io/SIMD-Visualiser/#/link/' + qs.stringify({code: this.state.code})\n        //return window.location.origin + \"#/link\" + qs.stringify(this.state)\n    };\n\n    getCodeMirror() {\n        const {code} = this.state;\n\n        return (\n            <CodeMirror\n                ref={this.cm}\n                value={code}\n                options={{\n                    mode: 'text/x-csrc',\n                    theme: 'material',\n                    lineNumbers: true,\n                    lineWrapping: true,\n                    gutters: [\"CodeMirror-lint-markers\"],\n                }}\n                onBeforeChange={(editor, data, code) => {\n                    this.history.push(this.history.location.pathname);\n                    if (code === '') {\n                        this.handleClear(true);\n                        this.setState({codeWasModifiedSinceLastCompile: true});\n                    } else {\n                        this.setState({code, codeWasModifiedSinceLastCompile: true});\n                    }\n                }}\n                onPaste={() => {\n                    this.setState({codeWasModifiedSinceLastCompile: true});\n                    this.handleClear(false)\n                }}\n            />\n        )\n    }\n\n    render() {\n        const {disableButtons, status, compiling, error, visualize, parametersChosen} = this.state;\n\n        let rightPage = <FrontPage/>;\n\n        if (compiling) {\n            rightPage = <WaitingScreen/>;\n        }\n        else if (error.length > 0) {\n            rightPage = <ErrorHandler cm={this.cm} error={error}/>\n        }\n        else if (visualize && parametersChosen) {\n            rightPage = <Tabs selected={0}>\n                <Pane label=\"Graphical\">\n                    <AsmVisualizer cm={this.cm} asm={this.state.asm}\n                                   onGoToParameters={() => this.setState({parametersChosen: false})}/>\n                </Pane>\n                <Pane label=\"AST\">\n                    <AstVisualizer cm={this.cm} ast={this.state.ast}/>\n                </Pane>\n            </Tabs>\n        }\n        else if (visualize) {\n            rightPage = <ParametersPage asm={this.state.asm} onComplete={this.onParametersChosen.bind(this)}/>\n        }\n\n        return (\n            <Container>\n                <LeftContainer>\n                    <ButtonPanel\n                        visualize={this.visualize}\n                        restart={this.restart}\n                        getShareLink={this.getShareLink}\n                        disabled={disableButtons}\n                        status={status}\n                    />\n                    {\n                        this.getCodeMirror()\n                    }\n                </LeftContainer>\n                <RightContainer>\n                    {rightPage}\n                </RightContainer>\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","import * as request from 'request';\n\n\n//Callback must be -> callback(error, asm, ast)\nexport function compile(code, callback) {\n    let options = {\n        url: 'https://godbolt.org/api/compiler/clang700/compile',\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json'\n        },\n        json: true,\n        body: {\n            \"source\": code,\n            \"compiler\": \"clang700\",\n            \"options\": {\n                \"userArguments\": \"-O3 -march=native\",\n                \"compilerOptions\": {\n                    \"produceGccDump\": {},\n                    \"produceCfg\": false,\n                    \"produceAst\": true\n                },\n                \"filters\": {\n                    \"binary\": false,\n                    \"execute\": false,\n                    \"labels\": true,\n                    \"directives\": true,\n                    \"commentOnly\": true,\n                    \"trim\": true,\n                    \"intel\": true,\n                    \"demangle\": true\n                },\n                \"tools\": []\n            },\n            \"lang\": \"c++\"\n        }\n    };\n    request(options, (error, response, body) => {\n        if (error) {\n            alert(\"oops! https://godbolt.org/ seems to be down! \\n You will have to wait my friend.\")\n            callback({}, [], \"\")\n        }\n        else {\n            callback(body.stderr, body.asm, body.astOutput)\n        }\n    })\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {HashRouter, Switch, Route} from \"react-router-dom\";\n\nReactDOM.render(\n    <HashRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n            <Route exact path='/' component={App}/>\n            <Route path='/link/:code' component={App}/>\n        </Switch>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}