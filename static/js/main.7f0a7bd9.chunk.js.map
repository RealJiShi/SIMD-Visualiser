{"version":3,"sources":["Images/cog.svg","Images/c-programming.png","Images/cryingboy.svg","Utils/index.js","components/CodeStatus.js","components/ButtonPanel.js","Utils/Parser.js","components/WaitingScreen.js","components/ASTVisualizer.js","components/FrontPage.js","components/ErrorHandler.js","Utils/Tabs.js","Utils/Registry.js","ASMComponents/Vector.js","ASMComponents/vpslldq.js","ASMComponents/vpaddd.js","ASMComponents/ret.js","ASMComponents/UnsupportedCommand.js","ASMComponents/Function.js","ASMComponents/SequentialComponent.js","components/ASMVisualizer.js","components/App.js","Utils/Compiler.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","getFlatColors","main","getComputedStyle","document","documentElement","getPropertyValue","darkMain","one","two","three","four","five","gray","clearTextColor","DarkTextColor","Status","styled","div","_templateObject","_ref","bg","CodeStatus","_ref2","_ref2$status","status","color","message","react_default","a","createElement","ButtonPanelContainer","ButtonPanel_templateObject","Top","_templateObject2","Buttons","_templateObject3","ButtonPanel","visualize","serialize","restart","_ref$disabled","disabled","onClick","testASR","Node","type","name","line","Object","classCallCheck","this","functionName","Cog","WaitingScreen_templateObject","url","WaitingScreen","react_anime_default","loop","easing","rotate","duration","cog","getChildren","node","body","declarations","init","id","expression","left","right","callee","arguments","object","property","properties","key","value","argument","test","consequent","alternate","getLabel","raw","operator","params1","_","params","join","params2","AstVisualizer","props","_this","possibleConstructorReturn","getPrototypeOf","call","recursiveBuilder","children","tree","forEach","child","push","title","expanded","start","end","buildTree","ast","highlightCode","codeEditor","cm","editor","doc","fromIndex","posFromIndex","toIndex","markText","className","clearHighlightedCode","getAllMarks","m","clear","state","treeData","setState","nextProps","_this2","index_esm","onChange","canDrag","generateNodeProps","onMouseEnter","onMouseLeave","Component","Image","FrontPage_templateObject","AppTitle","FrontPage_templateObject2","AppDescription","FrontPage_templateObject3","Container","_templateObject4","FrontPage","direction","scale","delay","CLogo","ErrorPageContainer","ErrorHandler_templateObject","TextJumbo","ErrorHandler_templateObject2","ErrorMessage","ErrorHandler_templateObject3","ErrorPosition","ErrorHandler_templateObject4","Robot","img","_templateObject5","ErrorHandler","error","tag","lineLength","getLine","length","ch","getErrorMessage","text","getErrorPosition","column","console","log","src","SadRobot","Tabs","_Component","_getPrototypeOf2","_len","args","Array","_key","apply","concat","selected","handleClick","index","event","preventDefault","_renderTitles","map","activeClass","href","bind","label","assertThisInitialized","_renderContent","inherits","createClass","nextState","Pane","_Component2","VAR_SIZE","TYPE_LENGTH","x","y","z","instance","Registry","set","register","array","_this$_keys$idx","idx","substring","_keys","splice","toConsumableArray","get","slice","fill","freeze","VectorContainer","table","Vector_templateObject","nbCols","colLen","colHeight","TD","td","Vector_templateObject2","_ref3","_ref4","Vector","cols","i","defaultProps","TdNumbers","vpslldq_templateObject","TdZeroes","vpslldq_templateObject2","_ref5","_ref6","TrNumbers","tr","vpslldq_templateObject3","_ref7","SHIFT_INDEX","INPUT_INDEX","Vpslldq","registry","shiftLen","input","output","computeCommand","numbersRef","React","createRef","zeroesRef","timeline","anime","autoplay","add","targets","current","translateX","translateY","_output","_this$state","Vector_Vector","ref","e","toString","vpaddd_templateObject","vpaddd_templateObject2","Operator","vpaddd_templateObject3","INPUT1_INDEX","INPUT2_INDEX","OUTPUT_INDEX","Vpaddd","input1","input2","numbers1Ref","numbers2Ref","actualNumbersRef","offset","opacity","childNodes","round","update","progress","innerHTML","_this$state2","_this$state3","vpaddd_TrNumbers","vpaddd_TdNumbers","ret_templateObject","ret_templateObject2","RetContainer","ret_templateObject3","width","Ret","returnValue","boxShadow","ret_TrNumbers","ret_TdNumbers","UnsupportedCommand","FunctionContainer","Function_templateObject","FunctionName","Function_templateObject2","Function","SequentialComponent_templateObject","SequentialComponent","isHover","undefined","component","onEnter","hoverHighlight","childAnimation","isLoop","onLeave","seek","Infinity","container","onComplete","sequentialHighlight","c","getAnimation","animeRef","complete","timelineFinished","finished","then","allAnimationCompleted","shouldBeVisible","play","pause","SequentialComponent_Container","cloneElement","ButtonContainer","ASMVisualizer_templateObject","AsmVisualizer","buildGraphicStack","stack","asm","func","commands","Function_Function","command","vpslldq_Vpslldq","vpaddd_Vpaddd","ret_Ret","UnsupportedCommand_UnsupportedCommand","commandFactory","getButtons","buttons","icon","index_es","reactstrap_es","button","outline","increment","setTimeout","componentDonePlaying","_this3","_this4","SequentialComponent_SequentialComponent","App_templateObject","LeftContainer","App_templateObject2","RightContainer","App_templateObject3","App","handleClear","clearCode","code","callback","compiling","codeWasModifiedSinceLastCompile","JSON","parse","getValue","rawAsm","currentFunction","exec","source","trim","replace","split","generateASM","clangAst","request","method","headers","content-type","json","compiler","options","userArguments","compilerOptions","produceGccDump","produceCfg","produceAst","filters","binary","execute","labels","directives","commentOnly","intel","demangle","lang","response","alert","stderr","astOutput","asmVisualizer","astVisualizer","savedState","localStorage","getItem","disableButtons","frontPage","waitingScreen","components_ASMVisualizer","components_ASTVisualizer","setItem","stringify","rightPage","components_ErrorHandler","Tabs_Tabs","Tabs_Pane","App_Container","react_codemirror2","mode","theme","lineNumbers","lineWrapping","gutters","onBeforeChange","data","onPaste","Boolean","window","location","hostname","match","library","faPlay","faPause","faForward","faBackward","faSyncAlt","ReactDOM","render","components_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7f0a7bd9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cog.a08a6ab0.svg\";","module.exports = __webpack_public_path__ + \"static/media/c-programming.b504359c.png\";","module.exports = __webpack_public_path__ + \"static/media/cryingboy.5b495fa1.svg\";","export function getFlatColors() {\n    return {\n        main: getComputedStyle(document.documentElement).getPropertyValue('--main'),\n        darkMain: getComputedStyle(document.documentElement).getPropertyValue('--dark-main'),\n        one: getComputedStyle(document.documentElement).getPropertyValue('--one'),\n        two: getComputedStyle(document.documentElement).getPropertyValue('--two'),\n        three: getComputedStyle(document.documentElement).getPropertyValue('--three'),\n        four: getComputedStyle(document.documentElement).getPropertyValue('--four'),\n        five: getComputedStyle(document.documentElement).getPropertyValue('--five'),\n        gray: getComputedStyle(document.documentElement).getPropertyValue('--gray'),\n        clearTextColor: getComputedStyle(document.documentElement).getPropertyValue('--clear-text-color'),\n        DarkTextColor: getComputedStyle(document.documentElement).getPropertyValue('--dark-text-color')\n    }\n}","import React from \"react\";\nimport styled from 'styled-components'\nimport {getFlatColors} from \"../Utils\";\n\nconst Status = styled.div`\n  background: ${({bg}) => bg};\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  font-weight: 300\n  font-size: 14px;\n  padding: 5px;\n  padding-left: 10px;\n  margin-bottom: 5px;\n\n  > span {\n    font-weight: 500;\n    margin-left: 10px;\n  }\n\n  @media (max-width: 700px) {\n    font-size: 8px;\n  }\n`\n\nexport default function CodeStatus({status = 'compiles'}) {\n    let color = '';\n    let message = '';\n    if (status === 'compiles') {\n        color = getFlatColors().five;\n        message = 'Code status: Compiles..';\n    }\n    else if (status === 'error') {\n        color = getFlatColors().two;\n        message = 'Code status: Error..';\n    }\n    else if (status === 'warning') {\n        color = getFlatColors().four;\n        message = 'Code status: warning..';\n    }\n\n    return (\n        <Status bg={color}>\n            {message}\n        </Status>\n    );\n}","import React from 'react';\nimport styled from 'styled-components'\nimport CodeStatus from \"./CodeStatus\";\n\nconst ButtonPanelContainer = styled.div`\n  background: #1F292E;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst Top = styled.div`\n  padding: 3px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 10px;\n`\n\nconst Buttons = styled.div`\n  > button {\n    border: none;\n    background: none;\n    color: #fff;\n    font-size: 18px;\n    padding: 8px;\n    text-shadow: -1px -1px 1px rgba(255,255,255,.1), 1px 1px 1px rgba(0,0,0,.5);\n\n    @media (max-width: 700px) {\n      font-size: 10px;\n    }\n  }\n\n  > button:hover {\n    color: #fff;\n    cursor: pointer;\n  }\n\n  > button:disabled {\n    color: #919191;\n  }\n\n  > button:active {\n    color: #fff;\n    text-shadow: none;\n  }\n`\n\nexport default function ButtonPanel({visualize, serialize, restart, disabled = false, status}) {\n    return (\n        <ButtonPanelContainer>\n            <Top>\n                <Buttons>\n                    <button disabled={disabled} onClick={visualize}>Visualize</button>\n                    <button onClick={serialize}>Serialize</button>\n                    <button onClick={restart}>Restart</button>\n                </Buttons>\n            </Top>\n            <CodeStatus status={status}/>\n        </ButtonPanelContainer>\n    );\n}","//import * as acorn from \"acorn\";\n\n\nconst testASR = `{\"type\": \"Program\",\\n  \"start\": 0,\\n  \"end\": 198,\\n  \"body\": [\\n    {\\n      \"type\": \"ImportDeclaration\",\\n      \"start\": 0,\\n      \"end\": 20,\\n      \"specifiers\": [],\\n      \"source\": {\\n        \"type\": \"Literal\",\\n        \"start\": 7,\\n        \"end\": 20,\\n        \"value\": \"x86intrin.h\",\\n        \"raw\": \"\\\\\"x86intrin.h\\\\\"\"\\n      }\\n    },\\n    {\\n      \"type\": \"FunctionDeclaration\",\\n      \"start\": 22,\\n      \"end\": 198,\\n      \"id\": {\\n        \"type\": \"Identifier\",\\n        \"start\": 31,\\n        \"end\": 40,\\n        \"name\": \"PrefixSum\"\\n      },\\n      \"generator\": false,\\n      \"expression\": false,\\n      \"params\": [\\n        {\\n          \"type\": \"Identifier\",\\n          \"start\": 41,\\n          \"end\": 45,\\n          \"name\": \"curr\"\\n        }\\n      ],\\n      \"body\": {\\n        \"type\": \"BlockStatement\",\\n        \"start\": 47,\\n        \"end\": 198,\\n        \"body\": [\\n          {\\n            \"type\": \"VariableDeclaration\",\\n            \"start\": 53,\\n            \"end\": 87,\\n            \"declarations\": [\\n              {\\n                \"type\": \"VariableDeclarator\",\\n                \"start\": 57,\\n                \"end\": 86,\\n                \"id\": {\\n                  \"type\": \"Identifier\",\\n                  \"start\": 57,\\n                  \"end\": 60,\\n                  \"name\": \"Add\"\\n                },\\n                \"init\": {\\n                  \"type\": \"CallExpression\",\\n                  \"start\": 63,\\n                  \"end\": 86,\\n                  \"callee\": {\\n                    \"type\": \"Identifier\",\\n                    \"start\": 63,\\n                    \"end\": 77,\\n                    \"name\": \"_mm_slli_si128\"\\n                  },\\n                  \"arguments\": [\\n                    {\\n                      \"type\": \"Identifier\",\\n                      \"start\": 78,\\n                      \"end\": 82,\\n                      \"name\": \"curr\"\\n                    },\\n                    {\\n                      \"type\": \"Literal\",\\n                      \"start\": 84,\\n                      \"end\": 85,\\n                      \"value\": 4,\\n                      \"raw\": \"4\"\\n                    }\\n                  ]\\n                }\\n              }\\n            ],\\n            \"kind\": \"let\"\\n          },\\n          {\\n            \"type\": \"ExpressionStatement\",\\n            \"start\": 92,\\n            \"end\": 124,\\n            \"expression\": {\\n              \"type\": \"AssignmentExpression\",\\n              \"start\": 92,\\n              \"end\": 123,\\n              \"operator\": \"=\",\\n              \"left\": {\\n                \"type\": \"Identifier\",\\n                \"start\": 92,\\n                \"end\": 96,\\n                \"name\": \"curr\"\\n              },\\n              \"right\": {\\n                \"type\": \"CallExpression\",\\n                \"start\": 99,\\n                \"end\": 123,\\n                \"callee\": {\\n                  \"type\": \"Identifier\",\\n                  \"start\": 99,\\n                  \"end\": 112,\\n                  \"name\": \"_mm_add_epi32\"\\n                },\\n                \"arguments\": [\\n                  {\\n                    \"type\": \"Identifier\",\\n                    \"start\": 113,\\n                    \"end\": 117,\\n                    \"name\": \"curr\"\\n                  },\\n                  {\\n                    \"type\": \"Identifier\",\\n                    \"start\": 119,\\n                    \"end\": 122,\\n                    \"name\": \"Add\"\\n                  }\\n                ]\\n              }\\n            }\\n          },\\n          {\\n            \"type\": \"ExpressionStatement\",\\n            \"start\": 129,\\n            \"end\": 159,\\n            \"expression\": {\\n              \"type\": \"AssignmentExpression\",\\n              \"start\": 129,\\n              \"end\": 158,\\n              \"operator\": \"=\",\\n              \"left\": {\\n                \"type\": \"Identifier\",\\n                \"start\": 129,\\n                \"end\": 132,\\n                \"name\": \"Add\"\\n              },\\n              \"right\": {\\n                \"type\": \"CallExpression\",\\n                \"start\": 135,\\n                \"end\": 158,\\n                \"callee\": {\\n                  \"type\": \"Identifier\",\\n                  \"start\": 135,\\n                  \"end\": 149,\\n                  \"name\": \"_mm_slli_si128\"\\n                },\\n                \"arguments\": [\\n                  {\\n                    \"type\": \"Identifier\",\\n                    \"start\": 150,\\n                    \"end\": 154,\\n                    \"name\": \"curr\"\\n                  },\\n                  {\\n                    \"type\": \"Literal\",\\n                    \"start\": 156,\\n                    \"end\": 157,\\n                    \"value\": 8,\\n                    \"raw\": \"8\"\\n                  }\\n                ]\\n              }\\n            }\\n          },\\n          {\\n            \"type\": \"ReturnStatement\",\\n            \"start\": 164,\\n            \"end\": 196,\\n            \"argument\": {\\n              \"type\": \"CallExpression\",\\n              \"start\": 171,\\n              \"end\": 195,\\n              \"callee\": {\\n                \"type\": \"Identifier\",\\n                \"start\": 171,\\n                \"end\": 184,\\n                \"name\": \"_mm_add_epi32\"\\n              },\\n              \"arguments\": [\\n                {\\n                  \"type\": \"Identifier\",\\n                  \"start\": 185,\\n                  \"end\": 189,\\n                  \"name\": \"curr\"\\n                },\\n                {\\n                  \"type\": \"Identifier\",\\n                  \"start\": 191,\\n                  \"end\": 194,\\n                  \"name\": \"Add\"\\n                }\\n              ]\\n            }\\n          }\\n        ]\\n      }\\n    }\\n  ],\\n  \"sourceType\": \"module\"\\n}`\nclass Node {\n    constructor(type, name, line) {\n        this.type = type;\n        this.name = name;\n        this.line = line;\n    }\n}\n\nexport function generateAST(editor) {\n    //let code = editor.doc.getValue();\n    // code = cleanExpression(code);\n    // let ast = new Node(\"Program\", 0, code.length);\n    // ast.body = recursiveASTBuilder(code, 0, 0);\n\n    //code = code.replace(new RegExp('int', 'g'), 'let');\n\n    //return acorn.parse(code)\n\n    //Temporary.. We disable AST parsing.. We\"ll come back to AST later.\n    return JSON.parse(testASR)\n}\n\nconst functionName = /([a-zA-Z]+): # @.*/;\n\n\nexport function generateASM(rawAsm) {\n    let asm = [];\n    let currentFunction = {\n        body: []\n    };\n    rawAsm.forEach(line => {\n        if (functionName.test(line.text)) {\n            let name = functionName.exec(line.text)[1];\n            currentFunction = new Node(\"Function\", name, 0);\n            currentFunction.body = [];\n            asm.push(currentFunction);\n        }\n        else if (line.text.length > 0 && line.source) {\n            // Remove comments, commas, trim it and then split\n            let command = line.text.trim().replace(/,| #.*/g, '').split(\" \");\n            let name = command[0];\n            let params = command.slice(1, command.length);\n\n            let node = new Node(\"Command\", name, line.source.line);\n            node.params = params;\n            currentFunction.body.push(node);\n        }\n    });\n    return asm\n}\n\n\n// function recursiveASTBuilder(code, start) {\n//     let ast = [];\n//\n//     if (isAssignExpr(code)) {\n//         let tokens = getAssignExpr(code);\n//         let end = start + code.length;\n//         let node = new Node(\"VariableDeclaration\", start, end)\n//         node.kind = tokens[1];\n//         console.log(tokens);\n//         ast.push(node)\n//     }\n//     if (isFuncDeclaration(code)) {\n//         let tokens = getFuncDeclaration(code);\n//         let end = start + code.length;\n//         let node = new Node(\"FunctionDeclaration\", start, end)\n//         ast.push(node)\n//     }\n//     if (isFuncCall(code)) {\n//         let tokens = getFuncCall(code);\n//         let end = start + code.length;\n//         let node = new Node(\"FunctionCall\", start, end)\n//         ast.push(node)\n//     }\n//     if (isReturnExpr(code)) {\n//         let tokens = getReturnExpr(code);\n//         let end = start + code.length;\n//         let node = new Node(\"ReturnExpression\", start, end)\n//         ast.push(node)\n//     }\n//\n//\n//     return ast;\n// }\n//\n// function cleanExpression(s){ //just supress superfluous space and other invisible characters\n//     return (s.replace(/\\s{1,}/g, ' ')).trim();\n// }\n//\n// function extractExpression(s){     //this function extract the different expressions of a given c code, by expression we mean a piece of code situated after a ';' or a '{' and ended either by ';' or by '}'.This extract the expressions at the \"same level\"\n//     s=cleanExpression(s);\n//     var accoladeIndication=0;\n//     var expresions=[];\n//     const delimiters=new Set([';', '}']);\n//     var i=s.indexOf('{')+1,lengthS=s.lastIndexOf('}'); // we first determine the begining and the ending of the piece of c code\n//     var  semicolonPosition=i;\n//     while(i<lengthS){\n//         if (s[i]==='{'){\n//             accoladeIndication++; //indicates if we are not inside an expression\n//         }\n//         if (s[i]==='}'){\n//             accoladeIndication--;\n//         }\n//\n//         if(delimiters.has(s[i]) && accoladeIndication === 0){ // if the caracter is a delimiter of expression and if we are not inside an expression\n//             expresions.push((s.slice(semicolonPosition+1, i)).trim()) //we extract the expression begining from the last delimiter to this delimiter\n//             semicolonPosition=i; // we save the position of this delimiter\n//         }\n//         i++;\n//     }\n//     return expresions;\n// }\n//\n// function extractParameter(s){     //this function extract the different effective parameter of a c function (call function)\n//     s=cleanExpression(s);\n//     var semicolonIndication=0;\n//     var expresions=[];\n//     const delimiters=new Set([',']);\n//     var i=0,lengthS=s.length; // we first determine the begining and the ending of the parameter previously extracted\n//     var  semicolonPosition=i;\n//     while(i<lengthS){\n//         if (s[i]==='('){\n//             semicolonIndication++; //indicates if we are not inside an expression\n//         }\n//         if (s[i]===')'){\n//             semicolonIndication--;\n//         }\n//\n//         if(delimiters.has(s[i]) && semicolonIndication === 0){ // if the caracter is a delimiter of expression and if we are not inside an expression\n//             expresions.push((s.slice(semicolonPosition, i)).trim()) //we extract the expression begining from the last delimiter to this delimiter\n//             semicolonPosition=i+1; // we save the position of this delimiter\n//         }\n//         i++;\n//         if(i===lengthS){\n//             expresions.push((s.slice(semicolonPosition, i)).trim()) //to take the last string\n//         }\n//     }\n//     return expresions;\n// }\n//\n// function processCCode(cCode){\n//     var tab=[];\n//     if(isSimpleExpression(cCode)){\n//         tab=Array.of(cCode);\n//         return tab;\n//     }\n//     if(regexFunctionDeclar.test(cCode)){\n//         var t=extractExpression(cCode);\n//         t.push('body');\n//         tab=Array.of(regexFunctionDeclar.exec(cCode)[2], ['returntype',[regexFunctionDeclar.exec(cCode)[1]]],t.reverse());\n//         for(var j=1; j<tab[2].length; j++){\n//             if (isSimpleExpression(tab[2][j])){\n//                 tab[2][j]=Array.of(tab[2][j]);\n//                 continue;\n//             }\n//             else{\n//                 tab[2][j]=processCCode(tab[2][j]);\n//             }\n//\n//         }\n//         return tab;\n//     }\n//\n//     if(regexFunctionCall.test(cCode)){\n//         var paramString = regexFunctionCall.exec(cCode)[2]\n//         var t=extractParameter(paramString);\n//         t.push('parameters');\n//         tab=Array.of(regexFunctionCall.exec(cCode)[1], t.reverse());\n//         for(var j=1; j<tab[1].length; j++){\n//             if (isSimpleExpression(tab[1][j])){\n//                 tab[1][j]=Array.of(tab[1][j]);\n//                 continue;\n//             }\n//             else{\n//                 tab[1][j]=processCCode(tab[1][j]);\n//             }\n//\n//         }\n//         return tab;\n//     }\n//     if(regexAssignExpr.test(cCode)){\n//         var regArray = regexAssignExpr.exec(cCode)\n//         tab=Array.of('=',[regArray[2],[regArray[1]]], [regArray[3]]);\n//         if (isSimpleExpression(tab[2][0])){\n//             tab[2][0]=Array.of(tab[2][0]);\n//         }\n//         else\n//         {\n//             tab[2][0]=processCCode(tab[2][0]);\n//         }\n//\n//\n//         return tab;\n//     }\n//     if(regexReturnExpr.test(cCode)){\n//         tab=Array.of('return',[regexReturnExpr.exec(cCode)[1]]);\n//         if (isSimpleExpression(tab[1][0])){\n//             tab[1][0]=Array.of(tab[1][0]);\n//         }\n//         else\n//         {\n//             tab[1][0]=processCCode(tab[1][0]);\n//         }\n//\n//\n//         return tab;\n//     }\n//\n//\n// }\n//\n// function isSimpleExpression(s){\n//     return !(isFuncDeclaration(s)||isFuncCall(s)||isAssignExpr(s)||isReturnExpr(s));\n// }\n//\n// function identifyNatureOfExpr(s){\n//     var regex=/^\\s*(?:void|char|uint8_t|short|int|long|float|double|signed|unsigned|Bool|Complex|__m128|__m128d|__m128i|__m256|__m256d|__m256i|__m512|__m512d|__m512i)\\s+(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s*\\(\\s*(?:void|char|uint8_t|short|int|long|float|double|signed|unsigned|Bool|Complex|__m128|__m128d|__m128i|__m256|__m256d|__m256i|__m512|__m512d|__m512i)\\s+(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s*(?:,(?:void|char|uint8_t|short|int|long|float|double|signed|unsigned|Bool|Complex|__m128|__m128d|__m128i|__m256|__m256d|__m256i|__m512|__m512d|__m512i)\\s+(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s*)*\\s*(?:\\)\\s*(?=\\{))/;\n// }\n//\n// const regexFunctionDeclar=/^\\s*([_$a-zA-Z][_$a-zA-Z0-9]*)\\s+([_$a-zA-Z][_$a-zA-Z0-9]*)\\s*\\(\\s*(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s+\\*?(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s*(?:,(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s+\\*?(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s*)*\\s*(?:\\)\\s*(?=\\{))/;\n// const regexFunctionCall=/^\\s*([_$a-zA-Z][_$a-zA-Z0-9]*)\\s*\\((.*)(?=\\)$|\\)(?=;))/;\n// const regexReturnExpr=/^\\s*return\\s+(.*)/;\n// const regexAssignExpr=/^\\s*(?:([_a-zA-Z][\\._a-zA-Z0-9]*)\\s+)?([\\*_$a-zA-Z][\\._a-zA-Z0-9]*)\\s*=\\s*(.*)/;\n//\n// function isFuncDeclaration(code) {\n//     return regexFunctionDeclar.test(code)\n// }\n// function isFuncCall(code) {\n//     return regexFunctionCall.test(code)\n// }\n// function isReturnExpr(code) {\n//     return regexReturnExpr.test(code)\n// }\n// function isAssignExpr(code) {\n//     return regexAssignExpr.test(code)\n// }\n// function getFuncDeclaration(code) {\n//     return regexFunctionDeclar.exec(code);\n// }\n// function getFuncCall(code) {\n//     return regexFunctionCall.exec(code);\n// }\n// function getReturnExpr(code) {\n//     return regexReturnExpr.exec(code);\n// }\n// function getAssignExpr(code) {\n//     return regexAssignExpr.exec(code);\n// }\n","import React from 'react';\nimport Anime from 'react-anime';\nimport styled from 'styled-components'\nimport cog from \"../Images/cog.svg\";\n\nconst Cog = styled.div`\n    content: ${({url}) => 'url(' + url + ');'}\n    height: 40vh;\n    margin: 30vh auto;\n    color: var(--dark-main)\n`\n\nexport default function WaitingScreen() {\n\n    return (\n                <Anime loop={true}\n                       easing={\"linear\"}\n                       rotate='360deg'\n                       duration={4000}>\n                    <Cog url={cog}/>\n                </Anime>\n    );\n}","import React, {Component} from 'react';\nimport * as _ from \"lodash\";\nimport SortableTree from \"react-sortable-tree\";\nimport 'react-sortable-tree/style.css';\nimport '../css/ASTVisualizer.css'\n\nlet getChildren = (node) => {\n\n    switch (node.type) {\n\n        case 'Program':\n            return node.body;\n\n        case 'VariableDeclaration':\n            return node.declarations;\n\n        case 'VariableDeclarator':\n            return node.init ? [node.id, node.init] : [node.id];\n\n        case 'ExpressionStatement':\n            return [node.expression];\n\n        case 'BinaryExpression':\n            return [node.left, node.right];\n\n        case 'AssignmentExpression':\n            return [node.left, node.right];\n\n        case 'CallExpression':\n            return [node.callee, {type: 'arguments', arguments: node.arguments}];\n\n        case 'arguments':\n            return node.arguments;\n\n        case 'MemberExpression':\n            return [node.object, node.property];\n\n        case 'NewExpression':\n            return node.arguments;\n\n        case 'ObjectExpression':\n            return node.properties;\n\n        case 'Property':\n            return [node.key, node.value];\n\n        case 'FunctionDeclaration':\n            return [node.body];\n\n        case 'FunctionExpression':\n            return [node.body];\n\n        case 'BlockStatement':\n            return node.body;\n\n        case 'ReturnStatement':\n            return node.argument ? [node.argument] : [];\n\n        case 'UnaryExpression':\n            return [node.argument];\n\n        case 'IfStatement':\n            return [node.test, node.consequent];\n\n        case 'ConditionalExpression':\n            return [node.test, node.consequent, node.alternate];\n\n        default:\n            return [];\n    }\n};\n\nlet getLabel = (node) => {\n\n    switch (node.type) {\n\n        case 'Identifier':\n            return node.name;\n\n        case 'Literal':\n            return node.raw;\n\n        case 'UnaryExpression':\n            return node.operator;\n\n        case 'BinaryExpression':\n            return node.operator;\n\n        case 'AssignmentExpression':\n            return node.operator;\n\n        case 'FunctionDeclaration':\n            var params1 = _.map(node.params, 'name').join(',');\n            return 'function ' + (!(!(node.id && node.id.name) && !'')) + '(' + params1 + ')';\n\n        case 'FunctionExpression':\n            var params2 = _.map(node.params, 'name').join(',');\n            return 'function ' + (!(!(node.id && node.id.name) && !'')) + '(' + params2 + ')';\n\n        default:\n            return node.type;\n    }\n};\n\nclass AstVisualizer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            treeData: [],\n        };\n\n    }\n\n    componentDidMount() {\n        this.setState({treeData: this.buildTree(this.props.ast)})\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({treeData: this.buildTree(nextProps.ast)})\n    }\n\n    recursiveBuilder = (node) => {\n        let children = getChildren(node);\n        let tree = [];\n        if (children === [])\n            return children;\n        children.forEach((child) => {\n            tree.push({\n                title: getLabel(child),\n                children: this.recursiveBuilder(child),\n                expanded: true,\n                type: child.type,\n                start: child.start,\n                end: child.end\n            });\n        });\n        return tree\n    };\n\n    buildTree = (ast) => {\n        let tree = [];\n        tree.push({\n            title: getLabel(ast),\n            children: this.recursiveBuilder(ast),\n            expanded: true,\n            type: ast.type,\n            start: ast.start,\n            end: ast.end\n        });\n        return tree\n    };\n\n    highlightCode = (start, end) => {\n        let codeEditor = this.props.cm.editor.doc;\n        const fromIndex = codeEditor.posFromIndex(start);\n        const toIndex = codeEditor.posFromIndex(end);\n        codeEditor.markText(fromIndex, toIndex, {\n            className: 'highlighted-code'\n        });\n    };\n\n    clearHighlightedCode = () => {\n        this.props.cm.editor.doc.getAllMarks().forEach((m) => {\n            m.clear()\n        })\n    };\n\n    render() {\n        return (\n            <SortableTree\n                treeData={this.state.treeData}\n                onChange={treeData => this.setState({treeData})}\n                canDrag={false}\n                generateNodeProps={({node}) => {\n                    return {\n                        className: node.type,\n                        onMouseEnter: () => this.highlightCode(node.start, node.end),\n                        onMouseLeave: () => this.clearHighlightedCode()\n                    };\n                }}\n            />\n        );\n    }\n}\n\nexport default AstVisualizer;","import React from 'react';\nimport Anime from 'react-anime';\nimport styled from 'styled-components'\nimport CLogo from \"../Images/c-programming.png\";\n\nconst Image = styled.div`\n    content: ${({url}) => 'url(' + url + ');'}\n    width: 40vmin;\n    margin: 10vh auto;\n`\nconst AppTitle = styled.div`\n    text-align: center;\n    font-weight: 300;\n    font-size: calc(12px + 3.6vw);\n    letter-spacing: 1.8px;\n    margin-top: 40px;\n    border: medium none;\n    margin-bottom: 20px;\n`\nconst AppDescription = styled.div`\n    text-align: center;\n    font-weight: 300;\n    margin: 0px auto;\n    font-size: calc(8px + 0.91vw);\n`\nconst Container = styled.div`\n`\n\nexport default function FrontPage() {\n\n    return (\n        <Container>\n            <Anime easing=\"easeOutCubic\"\n                   duration={2000}\n                   direction=\"alternate\"\n                   loop={true}\n                   scale={.9}>\n                <div>\n                    <Anime rotate={\"360deg\"}\n                           loop={true}\n                           delay={6000}\n                           duration={4000}>\n                        <Image url={CLogo}/>\n                    </Anime>\n                </div>\n            </Anime>\n            <AppTitle>The Ultimate SIMD visualizer</AppTitle>\n            <AppDescription>Built by <strong>Jérémie Piotte</strong> and <strong>Pierre Marie\n                Ntang</strong></AppDescription>\n        </Container>\n    );\n}","import React, {Component} from 'react';\nimport styled from \"styled-components\";\nimport SadRobot from \"../Images/cryingboy.svg\";\n\nconst ErrorPageContainer = styled.div`\n    padding: 50px;\n`\n\nconst TextJumbo = styled.div`\n    font-size: 60px;\n    font-weight: 700;\n    color: rgb(72, 72, 72);\n    margin-bottom: 15px;\n`\n\nconst ErrorMessage = styled.div`\n    font-size: 32px;\n    font-weight: normal;\n    color: rgb(72, 72, 72);\n    margin-bottom: 15px;\n    margin-top: 25px;\n`\n\nconst ErrorPosition = styled.div`\n    font-size: 14px;\n    font-weight: bold;\n    color: #767676;\n    margin-bottom: 15px;\n    margin-top: 25px;\n`\nconst Robot = styled.img`\n    position: absolute;\n    bottom: 0;\n    right: 0;\n    width: 50vh;\n`\n\nclass ErrorHandler extends Component {\n\n    constructor(props) {\n        super(props)\n        console.log(props.error)\n        if (props.error.length !== 0) {\n            this.highlightCode()\n        }\n    }\n\n    componentWillUnmount() {\n        this.clearHighlightedCode()\n    }\n\n    highlightCode = () => {\n        const line = this.props.error[0].tag.line - 1;\n        const lineLength = this.props.cm.editor.getLine(line).length;\n        this.props.cm.editor.doc.markText({line, ch: 0}, {line, ch: lineLength}, {\n            className: 'highlighted-code'\n        });\n    };\n\n    clearHighlightedCode = () => {\n        this.props.cm.editor.doc.getAllMarks().forEach((m) => {\n            m.clear()\n        })\n    };\n\n    getErrorMessage = () => {\n        return this.props.error[0].tag.text;\n    }\n    getErrorPosition = () => {\n        return <div>\n            <p>Line: {this.props.error[0].tag.line} </p>\n            <p> Column: {this.props.error[0].tag.column} </p>\n        </div>\n\n    }\n\n    render() {\n        return (\n            <ErrorPageContainer>\n                <TextJumbo>Oops!</TextJumbo>\n                <ErrorMessage>\n                    {this.getErrorMessage()}\n                </ErrorMessage>\n                <ErrorPosition>\n                    {this.getErrorPosition()}\n                </ErrorPosition>\n                <Robot src={SadRobot}/>\n            </ErrorPageContainer>\n        );\n    }\n}\n\nexport default ErrorHandler;","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from \"react\";\nimport \"../css/Tabs.css\"\n\nexport class Tabs extends Component {\n    state = {\n        selected: this.props.selected\n    };\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return this.props !== nextProps || this.state !== nextState;\n    }\n\n    handleClick = (index, event) => {\n        event.preventDefault();\n        this.setState({\n            selected: index\n        });\n    }\n    _renderTitles = () => {\n        function labels(child, index) {\n            var activeClass = (this.state.selected === index ? 'active' : '');\n            return (\n                <li key={index}>\n                    <a href=\"#\"\n                       className={activeClass}\n                       onClick={this.handleClick.bind(this, index)}>\n                        {child.props.label}\n                    </a>\n                </li>\n            );\n        }\n\n        return (\n            <ul className=\"tabs__labels\">\n                {this.props.children.map(labels.bind(this))}\n            </ul>\n        );\n    };\n\n    _renderContent = () => {\n        return (\n            <div className=\"tabs__content\">\n                {this.props.children[this.state.selected]}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <div className=\"tabs\">\n                {this._renderTitles()}\n                {this._renderContent()}\n            </div>\n        );\n    }\n}\n\nexport class Pane extends Component {\n    render() {\n        return (\n            <div>\n                {this.props.children}\n            </div>\n        );\n    }\n};\n","import * as _ from \"lodash\";\n\nexport const NB_REGISTERS = 32;\nexport const VAR_SIZE = 8; //Octets\nexport const TYPE_LENGTH = {\n    x: 512 / (4 * VAR_SIZE),\n    y: 512 / (2 * VAR_SIZE),\n    z: 512 / VAR_SIZE\n};\n\nclass Registry {\n    constructor() {\n        this._keys = new Array(NB_REGISTERS).fill(0).map(() =>\n            new Array(TYPE_LENGTH[\"z\"]).fill(0).map(() =>\n                _.random(1, 255)\n            )\n        );\n    }\n\n    set = (register, array) => {\n        const idx = +register.substring(3);\n        const type = register[0];\n\n        this._keys[idx].splice(0, TYPE_LENGTH[type], ...array);\n    };\n\n    get = (register) => {\n        const idx = +register.substring(3);\n        const type = register[0];\n        //return the last n elements of the register.\n        return this._keys[idx].slice(0, TYPE_LENGTH[type])\n    };\n\n    clear = () => {\n        this._keys.map(() =>\n            new Array(TYPE_LENGTH[\"z\"]).fill(0).map(() =>\n                _.random(1, 255)\n            ));\n    }\n}\n\nconst instance = new Registry();\nObject.freeze(instance);\n\nexport default instance;\n","import React, {Component} from \"react\";\nimport styled from \"styled-components\";\nimport * as _ from \"lodash\";\n\nconst VectorContainer = styled.table`\n      margin: 30px auto;\n      width: ${({nbCols, colLen}) => (nbCols * colLen) + 'px;' }\n      overflow: hidden;\n      height: ${({colHeight}) => (colHeight) + 'px;'}\n      box-shadow: 3px 3px 2px rgba(0,0,0,.4);\n      background-color: var(--main);\n      color: var(--clear-text-color);\n      border-radius: 3px;\n      display: block;\n      position: relative;\n`\n\nconst TD = styled.td`\n    border-right: 1px solid var(--gray);\n    width: ${({colLen}) => colLen + 'px;'}\n    height: ${({colHeight}) => colHeight + 'px;'}\n    display: inline-flex;\n    // color: var(--clear-text-color);\n    text-align: center;\n    \n    :last-child{\n        border-right: none;\n    }\n`\n\nexport default class Vector extends Component {\n\n    static defaultProps = {\n        nbCols: 4,\n        colLen: 50,\n        colHeight: 50,\n        children: []\n    };\n\n    constructor(props) {\n        super(props)\n        this.cols = [];\n        _.times(props.nbCols, i => {\n            this.cols.push(\n                <TD colLen={props.colLen}\n                    colHeight={props.colHeight}\n                    key={i}>\n                    {}\n                </TD>\n            )\n        });\n    }\n\n    render() {\n        return (\n            <VectorContainer nbCols={this.props.nbCols}\n                             colLen={this.props.colLen}\n                             colHeight={this.props.colHeight}>\n                <tbody>\n                <tr>\n                    {this.cols}\n                </tr>\n                {this.props.children}\n                </tbody>\n            </VectorContainer>\n        );\n    }\n}","import React, {Component} from \"react\";\nimport styled from \"styled-components\";\nimport * as Registry from \"../Utils/Registry\";\nimport Vector from \"./Vector\";\nimport * as _ from \"lodash\";\nimport anime from 'animejs';\n\n\n\nconst TdNumbers = styled.td`\n    width: ${({colLen}) => colLen}px;\n    height: ${({colHeight}) => colHeight}px;\n    text-align: center;\n    line-height: ${({colHeight}) => colHeight}px;\n`\n\nconst TdZeroes = styled.td`\n    width: ${({colLen}) => colLen}px;\n    height: ${({colHeight}) => colHeight}px;\n    text-align: center;\n    color: var(--two);\n    line-height: ${({colHeight}) => colHeight}px;\n`\n\nconst TrNumbers = styled.tr`\n    position: relative;\n    top: ${({colHeight}) => -(colHeight)}px;\n    //font-size: 24px;\n    font-family: monospace;\n    display: inline-flex;\n`\nconst SHIFT_INDEX = 2;\nconst INPUT_INDEX = 1;\nconst OUTPUT_INDEX = 0;\n\nexport default class Vpslldq extends Component {\n\n    constructor(props) {\n        super(props);\n\n        let registry = Registry.default;\n        let shiftLen = (props.params[SHIFT_INDEX] * 8) / Registry.VAR_SIZE;\n        let input = registry.get(props.params[INPUT_INDEX]);\n        let nbCols = input.length;\n\n        this.state = {\n            colLen: 50,\n            colHeight: 50,\n            nbCols,\n            shiftLen,\n            input,\n            output: [],\n        };\n        this.computeCommand();\n        this.numbersRef = React.createRef();\n        this.zeroesRef = React.createRef()\n    }\n\n    getAnimation() {\n        let timeline = anime.timeline({\n            easing: \"easeOutCubic\",\n            loop: false,\n            autoplay: false\n        });\n\n        timeline\n            .add({\n                targets: this.numbersRef.current,\n                translateX: () => -this.state.shiftLen * this.state.colLen,\n                duration: 2000,\n                delay: 300\n            })\n            .add({\n                targets: this.zeroesRef.current,\n                translateY: () => -50,\n                duration: 500,\n            });\n        return timeline;\n    }\n\n    //Compute the command and set the registry.\n    computeCommand() {\n        let registry = Registry.default;\n        let shiftLen = (this.props.params[SHIFT_INDEX] * 8) / Registry.VAR_SIZE;\n        let input = registry.get(this.props.params[INPUT_INDEX]);\n        let output = _.cloneDeep(input);\n        output.push(...new Array(shiftLen).fill(0));\n        output = output.slice(-input.length);\n        registry.set(this.props.params[OUTPUT_INDEX], output);\n\n        //this.setState({output, input, shiftLen});\n    }\n\n    render() {\n        let {nbCols, colLen, colHeight, shiftLen, input} = this.state;\n\n        return (\n            <Vector colLen={colLen} colHeight={colHeight} nbCols={nbCols}>\n                <TrNumbers colHeight={colHeight} ref={this.numbersRef}>\n                    {input.map((e, i) =>\n                        <TdNumbers colLen={colLen} colHeight={colHeight} key={i}>{e.toString(16)}</TdNumbers>\n                    )}\n                </TrNumbers>\n                <TrNumbers colHeight={colHeight} ref={this.zeroesRef}>\n                    {input.map((e, i) =>\n                        <TdZeroes colLen={colLen} colHeight={colHeight}\n                                  key={i}>{(i < nbCols - shiftLen) ? \"\" : 0}</TdZeroes>\n                    )}\n                </TrNumbers>\n            </Vector>\n        );\n    }\n}","import React, {Component} from \"react\";\nimport Vector from \"./Vector\";\nimport * as Registry from \"../Utils/Registry\";\nimport styled from \"styled-components\";\nimport anime from \"animejs\";\nimport * as _ from \"lodash\";\n\nconst TdNumbers = styled.td`\n    width: ${({colLen}) => colLen}px;\n    height: ${({colHeight}) => colHeight}px;\n    text-align: center;\n    line-height: ${({colHeight}) => colHeight}px;\n`\n\nconst TrNumbers = styled.tr`\n    position: relative;\n    top: ${({colHeight}) => -(colHeight)}px;\n    //font-size: 24px;\n    font-family: monospace;\n    display: inline-flex;\n`\n\nconst Operator = styled.div`\n        text-align: center;\n        color: var(--main);\n        font-size: 24px;\n        font-weight: 700;\n        font-family: monospace;\n    `\n\nconst INPUT1_INDEX = 1;\nconst INPUT2_INDEX = 2;\nconst OUTPUT_INDEX = 0;\n\nexport default class Vpaddd extends Component {\n\n    constructor(props) {\n        super(props);\n\n        let registry = Registry.default;\n        let input1 = registry.get(props.params[INPUT1_INDEX]);\n        let input2 = registry.get(props.params[INPUT2_INDEX]);\n        let nbCols = input1.length;\n\n        this.state = {\n            colLen: 50,\n            colHeight: 50,\n            nbCols,\n            input1,\n            input2,\n            output: [],\n        };\n\n        //This will compute the output\n        this.computeCommand();\n        this.state.output = registry.get(props.params[OUTPUT_INDEX]);\n\n        this.numbers1Ref = React.createRef();\n        this.numbers2Ref = React.createRef();\n        this.actualNumbersRef = React.createRef();\n    }\n\n    getAnimation() {\n        let timeline = anime.timeline({\n            easing: \"easeOutCubic\",\n            loop: false,\n            autoplay: false\n        });\n        let {output, input2} = this.state;\n\n        timeline\n            .add({\n                targets: this.numbers1Ref.current,\n                translateY: 70,\n                duration: 1000,\n                offset: 500\n            })\n            .add({\n                targets: this.numbers2Ref.current,\n                translateY: -70,\n                duration: 1000,\n                offset: 500\n            })\n            .add({\n                targets: this.numbers1Ref.current,\n                opacity: 0,\n                duration: 500\n            })\n\n        this.actualNumbersRef.current.childNodes.forEach((e, i) => {\n            timeline.add({\n                targets: e,\n                easing: 'easeInOutExpo',\n                title: [input2[i], output[i]],\n                round: 1,\n                duration: 1000,\n                offset: 1800,\n                update: (a) => {\n                    if (a.progress > 0) {\n                        e.innerHTML = (+e.title).toString(16)\n                    }\n                }\n            });\n        });\n\n\n        return timeline;\n    }\n\n    //Compute the command and set the registry.\n    computeCommand() {\n        let {input1, input2} = this.state;\n        let registry = Registry.default;\n        let output = _.cloneDeep(input1);\n\n        input2.forEach((e, i) => {\n            output[i] += e;\n        });\n        registry.set(this.props.params[OUTPUT_INDEX], output);\n    }\n\n\n    render() {\n        let {nbCols, colLen, colHeight, input1, input2} = this.state;\n\n        return (\n            <div>\n                <div ref={this.numbers1Ref}>\n                    <Vector colLen={colLen} colHeight={colHeight} nbCols={nbCols}>\n                        <TrNumbers colHeight={colHeight}>\n                            {input1.map((e, i) =>\n                                <TdNumbers colLen={colLen} colHeight={colHeight} key={i}>{e.toString(16)}</TdNumbers>\n                            )}\n                        </TrNumbers>\n                    </Vector>\n                </div>\n                <Operator>+</Operator>\n                <div ref={this.numbers2Ref}>\n                    <Vector colLen={colLen} colHeight={colHeight} nbCols={nbCols}>\n                        <TrNumbers colHeight={colHeight} ref={this.actualNumbersRef}>\n                            {input2.map((e, i) =>\n                                <TdNumbers colLen={colLen} colHeight={colHeight} key={i}\n                                           title={e.toString()}>{e.toString(16)}</TdNumbers>\n                            )}\n                        </TrNumbers>\n                    </Vector>\n                </div>\n            </div>\n        );\n    }\n}","import React, {Component} from \"react\";\nimport styled from \"styled-components\";\nimport * as Registry from \"../Utils/Registry\";\nimport Vector from \"./Vector\";\nimport anime from 'animejs';\n\n\nconst TdNumbers = styled.td`\n    width: ${({colLen}) => colLen}px;\n    height: ${({colHeight}) => colHeight}px;\n    text-align: center;\n    line-height: ${({colHeight}) => colHeight}px;\n`\n\nconst TrNumbers = styled.tr`\n    position: relative;\n    top: ${({colHeight}) => -(colHeight)}px;\n    //font-size: 24px;\n    font-family: monospace;\n    display: inline-flex;\n`\n\nconst RetContainer = styled.div`\n        border-radius: 3px;\n        width: ${({width}) => width}px;\n        margin: 0 auto;\n}\n`\n\n\nexport default class Ret extends Component {\n\n    constructor(props) {\n        super(props);\n\n        let registry = Registry.default;\n        //Ret returns value on top of the stack.  For now we will assume the value is always 128 bits... (Xmm)\n        let returnValue = registry.get('xmm0');\n        let nbCols = returnValue.length;\n\n        this.state = {\n            colLen: 50,\n            colHeight: 50,\n            nbCols,\n            returnValue,\n        };\n\n        this.computeCommand();\n        this.ref = React.createRef();\n\n    }\n\n    getAnimation() {\n\n        //We make an empty timeline because sequentialComponent needs to know when to jump to the next command.\n        let timeline = anime.timeline({\n            easing: \"linear\",\n            autoplay: false,\n        });\n\n        timeline\n            .add({\n                targets: this.ref.current,\n                duration: 1000\n            });\n\n        let eternalGlow = anime.timeline({\n            easing: \"linear\",\n            loop: true,\n            autoplay: true,\n            direction: 'alternate'\n        });\n\n        eternalGlow\n            .add({\n                targets: this.ref.current,\n                boxShadow: [\"0px 0px 20px 5px var(--main)\", \"0px 0px 2px 1px var(--main)\"],\n                duration: 1000\n            });\n\n        return timeline;\n    }\n\n    //Compute the command and set the registry.\n    computeCommand() {\n\n    }\n\n    render() {\n        let {nbCols, colLen, colHeight, returnValue} = this.state;\n\n        return (\n            <RetContainer ref={this.ref} width={colLen * nbCols}>\n                <Vector colLen={colLen} colHeight={colHeight} nbCols={nbCols}>\n                    <TrNumbers colHeight={colHeight}>\n                        {returnValue.map((e, i) =>\n                            <TdNumbers colLen={colLen} colHeight={colHeight} key={i}>{e.toString(16)}</TdNumbers>\n                        )}\n                    </TrNumbers>\n                </Vector>\n            </RetContainer>\n        );\n    }\n}","import React, {Component} from \"react\";\n\nexport default class UnsupportedCommand extends Component {\n\n    render() {\n        return (\n            <div>Unsupported Command: \"{this.props.name}\"</div>\n        );\n    }\n}","import React, {Component} from \"react\";\nimport styled from \"styled-components\";\nimport * as Registry from \"../Utils/Registry\";\n\nconst FunctionContainer = styled.div`\n  padding-top: 20px;\n`\nconst FunctionName = styled.div`\n    font-size: 32px;\n    font-weight: normal;\n    color: rgb(72, 72, 72);\n    margin-bottom: 15px;\n    text-align: center;\n`\n\nexport default class Function extends Component {\n\n    constructor(props) {\n        super(props);\n\n        //Reset the registry because this is a new function!\n        let registry = Registry.default;\n        registry.clear()\n    }\n\n\n    render() {\n        return (\n            <FunctionContainer>\n                <FunctionName>{this.props.name}</FunctionName>\n            </FunctionContainer>\n        );\n    }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport anime from 'animejs';\n\nconst Container = styled.div`\n  margin: 20px 0;\n  opacity: 0;\n`\n\nexport default class SequentialComponent extends React.Component {\n\n    constructor() {\n        super();\n        // create li DOM reference\n        this.container = React.createRef();\n        this.component = React.createRef();\n    }\n\n    allAnimationCompleted() {\n        this.props.onComplete(this.props.index);\n        //Remove sequential highlight since the component is done animating.\n        if (this.sequentialHighlight)\n            this.sequentialHighlight.clear();\n    }\n\n    componentDidMount() {\n        this.childAnimation = false;\n        let c = this.component.current;\n        if (c && c.getAnimation) {\n            this.childAnimation = c.getAnimation();\n        }\n\n        this.animeRef = anime({\n            targets: this.container.current,\n            easing: \"easeOutCubic\",\n            autoplay: false,\n            translateY: ['5vh', 0],\n            duration: 500,\n            delay: 800,\n            opacity: 1,\n            complete: () => {\n                if (this.childAnimation) {\n                    this.childAnimation.restart();\n                    this.timelineFinished = this.childAnimation.finished.then(() => this.allAnimationCompleted());\n                }\n                else\n                    this.props.onComplete(this.props.index)\n            }\n        });\n\n        if (this.props.shouldBeVisible) {\n            this.animeRef.restart()\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n        if (this.props.play === true && !nextProps.play) {\n            if (this.childAnimation) {\n                this.childAnimation.pause()\n            }\n        }\n        else if (!this.props.play === true && nextProps.play && nextProps.shouldBeVisible) {\n            if (this.childAnimation) {\n                this.childAnimation.play()\n            }\n        }\n\n        if (!nextProps.shouldBeVisible && this.props.shouldBeVisible) {\n            //Component is being hidden. Rewind animation.\n            if (this.sequentialHighlight)\n                this.sequentialHighlight.clear();\n            this.animeRef.seek(0);\n            if (this.childAnimation) {\n                this.childAnimation.seek(0);\n                this.childAnimation = this.component.current.getAnimation()\n            }\n        }\n        if (nextProps.shouldBeVisible && !this.props.shouldBeVisible) {\n            //Start Animation.\n            this.animeRef.restart();\n            //Highlight code to show user, which part of the code is being represented by this animation.\n            this.sequentialHighlight = this.highlightCode();\n\n        }\n    }\n\n    highlightCode = (isHover = false) => {\n        let line = this.component.current.props.line;\n        if (line) {\n            const lineLength = this.props.cm.editor.getLine(line).length;\n            return this.props.cm.editor.doc.markText({line, ch: 0}, {line, ch: lineLength}, {\n                className: isHover ? 'highlighted-code' : 'sequential-highlighted-code'\n            });\n        }\n        return null\n    };\n\n    onEnter = () => {\n        this.hoverHighlight = this.highlightCode(true);\n        if (this.childAnimation) {\n            this.isLoop = this.childAnimation.loop;\n            this.childAnimation.loop = true;\n            this.childAnimation.restart();\n        }\n    };\n\n    onLeave = () => {\n        if (this.hoverHighlight) this.hoverHighlight.clear();\n        if (this.childAnimation) {\n            this.childAnimation.loop = this.isLoop;\n            this.childAnimation.restart();\n            this.childAnimation.seek(Infinity);\n        }\n    }\n\n    render() {\n        return (\n            <Container\n                ref={this.container}\n                onMouseEnter={this.onEnter}\n                onMouseLeave={this.onLeave}\n            >\n                {React.cloneElement(this.props.component, {ref: this.component})}\n            </Container>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport Vpslldq from \"../ASMComponents/vpslldq\";\nimport Vpaddd from \"../ASMComponents/vpaddd\";\nimport Ret from \"../ASMComponents/ret\";\nimport UnsupportedCommand from \"../ASMComponents/UnsupportedCommand\";\nimport Function from \"../ASMComponents/Function\";\nimport SequentialComponent from \"../ASMComponents/SequentialComponent\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport styled from \"styled-components\";\nimport {Row, Col, Button} from 'reactstrap';\nimport '../css/ASMVisualizer.css'\n\n\nconst ButtonContainer = styled.div`\n    text-align: center;\n`\n\n\nfunction commandFactory(c) {\n    switch (c.name) {\n        case \"vpslldq\":\n            return <Vpslldq/>;\n        case \"vpaddd\":\n            return <Vpaddd/>;\n        case \"ret\":\n            return <Ret/>;\n        default:\n            return <UnsupportedCommand/>\n    }\n}\n\nclass AsmVisualizer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            idx: 0,\n            play: true,\n            restart: false\n        };\n\n    }\n\n    componentDidMount() {\n        this.props.cm.editor.doc.getAllMarks().forEach((m) => {\n            m.clear()\n        })\n    }\n\n    buildGraphicStack = () => {\n        let stack = [];\n        this.props.asm.forEach((func) => {\n            let commands = func.body;\n            stack.push(<Function name={func.name}/>);\n            commands.forEach(c => {\n                let command = commandFactory(c);\n                stack.push(\n                    //c.line - 1 because line number starts at 1 and we need to start at 0.\n                    React.cloneElement(command, {name: c.name, params: c.params, line: c.line - 1})\n                );\n            });\n        });\n        return stack;\n    };\n\n    componentDonePlaying(key) {\n        if (this.state.play) {\n            let increment = key === this.state.idx ? 1 : 0;\n            this.setState({idx: this.state.idx + increment});\n        }\n    }\n\n    play() {\n        // if (!this.state.play) {\n        //     this.setState({idx: this.state.idx + 1});\n        // }\n        this.setState({play: true})\n    }\n\n    pause() {\n        this.setState({play: false})\n    }\n\n    forward() {\n        this.setState({idx: this.state.idx + 1});\n        //this.componentDonePlaying(this.state.idx - 1);\n    }\n\n    backward() {\n        this.setState({idx: this.state.idx - 1});\n        setTimeout(() => {\n            this.componentDonePlaying(this.state.idx);\n        })\n    }\n\n    restart() {\n        this.setState({idx: -1});\n        setTimeout(() => {\n            this.setState({play: true});\n            this.componentDonePlaying(-1);\n        })\n    }\n\n    getButtons = (play) => {\n        let buttons = [];\n        //buttons.push(<FontAwesomeIcon icon=\"backward\" onClick={this.backward.bind(this)}/>);\n\n        play === true ?\n            buttons.push({icon: <FontAwesomeIcon icon=\"pause\"/>, onClick: this.pause.bind(this)})\n            :\n            buttons.push({icon: <FontAwesomeIcon icon=\"play\"/>, onClick: this.play.bind(this)});\n\n        //buttons.push(<FontAwesomeIcon icon=\"forward\" onClick={this.forward.bind(this)}/>);\n        buttons.push({icon: <FontAwesomeIcon icon=\"sync-alt\"/>, onClick: this.restart.bind(this)});\n\n        return (\n            <Row>\n                {\n                    buttons.map((button, i) => (\n                        <Col key={i}>\n                            <ButtonContainer>\n                                <Button outline color=\"primary\" onClick={button.onClick} className={'playback-button'}>\n                                    {button.icon}\n                                </Button>\n                            </ButtonContainer>\n                        </Col>\n                    ))\n                }\n            </Row>\n        )\n    };\n\n    render() {\n        return (\n            <div>\n\n                {this.getButtons(this.state.play)}\n\n                {\n                    this.buildGraphicStack().map((func, index) => (\n                        <SequentialComponent\n                            key={index}\n                            index={index}\n                            component={func}\n                            play={this.state.play}\n                            shouldBeVisible={this.state.idx >= index}\n                            onComplete={this.componentDonePlaying.bind(this)}\n                            cm={this.props.cm}\n                        />\n                    ))\n                }\n            </div>\n        );\n    }\n}\n\nexport default AsmVisualizer;","import React, {Component} from 'react';\nimport {Controlled as CodeMirror} from 'react-codemirror2'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/material.css'\nimport 'codemirror/mode/clike/clike.js'\nimport 'codemirror/addon/selection/mark-selection.js'\nimport '../css/App.css';\nimport styled from 'styled-components'\nimport ButtonPanel from \"./ButtonPanel\";\nimport {generateASM, generateAST} from \"../Utils/Parser\";\nimport WaitingScreen from \"./WaitingScreen\";\nimport AstVisualizer from \"./ASTVisualizer\";\nimport FrontPage from \"./FrontPage\";\nimport {compile} from \"../Utils/Compiler\";\nimport ErrorHandler from \"./ErrorHandler\";\nimport {Pane, Tabs} from \"../Utils/Tabs\";\nimport AsmVisualizer from \"./ASMVisualizer\";\n\nconst Container = styled.div`\n  display: flex;\n`\n\nconst LeftContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh\n  width: 50vw;\n  overflow: scroll;\n`\n\nconst RightContainer = styled.div`\n  width: 50vw;\n  height: 100vh;\n  overflow: hidden;\n`\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        let savedState = localStorage.getItem('app-state');\n        if (savedState) {\n            this.state = JSON.parse(savedState);\n        }\n        else {\n            this.state = {\n                code: `#include <x86intrin.h>\\n\\n__m128i PrefixSum(__m128i curr) {\\n  __m128i Add = _mm_slli_si128(curr, 4); \\n  curr = _mm_add_epi32(curr, Add);   \\n  Add = _mm_slli_si128(curr, 8);    \\n  return _mm_add_epi32(curr, Add);       \\n}`,\n                codeWasModifiedSinceLastCompile: true,\n                disableButtons: false,\n                status: 'compiles',\n                compiling: false,\n                ast: {},\n                clangAst: {},\n                asm: [],\n                error: [],\n            };\n        }\n\n        this.frontPage = <FrontPage/>;\n        this.waitingScreen = <WaitingScreen/>;\n        this.asmVisualizer = null\n        this.astVisualizer = null;\n    }\n\n    handleClear = (clearCode = true) => {\n        this.setState(({code}) => ({\n            code: clearCode === true ? '' : code\n        }));\n    };\n\n    visualize = () => {\n        this.setState({compiling: true});\n        if (this.state.codeWasModifiedSinceLastCompile) {\n            this.setState({ast: generateAST(this.cm.editor)});\n            compile(this.cm.editor.getValue(), (error, asm, ast) => {\n                if (error.length === 0) {\n                    asm = generateASM(asm);\n                    this.setState({\n                        compiling: false,\n                        status: 'compiles',\n                        error,\n                        clangAst: ast,\n                        asm,\n                        codeWasModifiedSinceLastCompile: false\n                    });\n                }\n                else {\n                    this.setState({compiling: false, status: 'error', error, clangAst: {}, asm: {}});\n                }\n            })\n        }\n        else this.setState({compiling: false});\n    };\n\n    componentDidMount() {\n        if (this.state.asm.length > 0) {\n            console.log(\"hello\")\n            this.asmVisualizer = <AsmVisualizer cm={this.cm} asm={this.state.asm}/>;\n        }\n        if (this.state.ast) {\n            this.astVisualizer = <AstVisualizer cm={this.cm} ast={this.state.ast}/>;\n        }\n    }\n\n\n    componentWillUpdate(nextProps, nextState) {\n        if (nextState.asm !== this.state.asm) {\n            this.asmVisualizer = <AsmVisualizer cm={this.cm} asm={nextState.asm}/>;\n        }\n        if (nextState.ast !== this.state.ast) {\n            this.astVisualizer = <AstVisualizer cm={this.cm} ast={nextState.ast}/>;\n        }\n        localStorage.setItem(\"app-state\", JSON.stringify(nextState));\n    }\n\n    serialize = () => {\n\n    };\n\n    restart = () => {\n        this.asmVisualizer = null;\n        this.astVisualizer = null;\n        this.setState({\n            compiling: false,\n            codeWasModifiedSinceLastCompile: true,\n            ast: {},\n            clangAst: {},\n            asm: [],\n            error: [],\n        });\n    };\n\n    render() {\n        const {code, disableButtons, status, compiling} = this.state;\n        let rightPage = this.frontPage;\n        if (compiling) {\n            rightPage = this.waitingScreen;\n        }\n        else if (this.state.error.length > 0) {\n            rightPage = <ErrorHandler cm={this.cm} error={this.state.error}/>\n        }\n        else if (this.asmVisualizer && this.astVisualizer && this.state.asm.length > 0) {\n            rightPage = <Tabs selected={0}>\n                <Pane label=\"Graphical\">\n                    {this.asmVisualizer}\n                </Pane>\n                <Pane label=\"AST\">\n                    {this.astVisualizer}\n                </Pane>\n            </Tabs>\n        }\n\n        return (\n            <Container>\n                <LeftContainer>\n                    <ButtonPanel\n                        visualize={this.visualize}\n                        serialize={this.serialize}\n                        restart={this.restart}\n                        disabled={disableButtons}\n                        status={status}\n                    />\n                    <CodeMirror\n                        ref={(cm) => this.cm = cm}\n                        value={code}\n                        options={{\n                            mode: 'text/x-csrc',\n                            theme: 'material',\n                            lineNumbers: true,\n                            lineWrapping: true,\n                            gutters: [\"CodeMirror-lint-markers\"],\n                        }}\n                        onBeforeChange={(editor, data, code) => {\n                            this.setState({codeWasModifiedSinceLastCompile: true});\n                            if (code === '') {\n                                this.handleClear(true)\n                            } else {\n                                this.setState({code});\n                                //this.myInterpreter = getInterpreter(code)\n                            }\n                        }}\n                        onPaste={() => {\n                            this.setState({codeWasModifiedSinceLastCompile: true});\n                            this.handleClear(false)\n                        }}\n                    />\n                </LeftContainer>\n                <RightContainer>\n                    {rightPage}\n                </RightContainer>\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","import * as request from 'request';\n\n\n//Callback must be -> callback(error, asm, ast)\nexport function compile(code, callback) {\n    let options = {\n        url: 'https://godbolt.org/api/compiler/cclang700/compile',\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json'\n        },\n        json: true,\n        body: {\n            \"source\": code,\n            \"compiler\": \"cclang700\",\n            \"options\": {\n                \"userArguments\": \"-O3 -march=native\",\n                \"compilerOptions\": {\n                    \"produceGccDump\": {},\n                    \"produceCfg\": false,\n                    \"produceAst\": true\n                },\n                \"filters\": {\n                    \"binary\": false,\n                    \"execute\": false,\n                    \"labels\": true,\n                    \"directives\": true,\n                    \"commentOnly\": true,\n                    \"trim\": true,\n                    \"intel\": true,\n                    \"demangle\": true\n                }\n            },\n            \"lang\": \"c\"\n        }\n    };\n    request(options, (error, response, body) => {\n        if (error) {\n            alert(\"oops! https://godbolt.org/ seems to be down! \\n You will have to wait my friend.\")\n            callback({}, [], \"\")\n        }\n        else {\n            callback(body.stderr, body.asm, body.astOutput)\n        }\n    })\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n//Setup FontAwesome\nimport {library} from '@fortawesome/fontawesome-svg-core'\nimport {faPlay, faPause, faForward, faBackward, faSyncAlt} from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faPlay, faPause, faForward, faBackward, faSyncAlt);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}