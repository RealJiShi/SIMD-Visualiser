{"version":3,"sources":["Images/cog.svg","Images/c-programming.png","Images/cryingboy.svg","Utils/index.js","components/CodeStatus.js","components/ButtonPanel.js","Utils/Parser.js","components/WaitingScreen.js","components/ASTVisualizer.js","components/FrontPage.js","components/ErrorHandler.js","Utils/Tabs.js","Utils/Registry.js","ASMComponents/Vector.js","ASMComponents/vpslldq.js","ASMComponents/vpaddd.js","ASMComponents/ret.js","ASMComponents/UnsupportedCommand.js","ASMComponents/Function.js","ASMComponents/SequentialComponent.js","components/ASMVisualizer.js","components/App.js","Utils/Compiler.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","getFlatColors","main","getComputedStyle","document","documentElement","getPropertyValue","darkMain","one","two","three","four","five","gray","clearTextColor","DarkTextColor","Status","styled","div","_templateObject","_ref","bg","CodeStatus","_ref2","_ref2$status","status","color","message","react_default","a","createElement","ButtonPanelContainer","ButtonPanel_templateObject","Top","_templateObject2","Buttons","_templateObject3","ButtonPanel","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","bitly","BitlyClient","toggleShare","bind","assertThisInitialized","state","popoverOpen","shareLink","textAreaRef","React","createRef","_this2","longUrl","getShareLink","shorten","then","result","setState","url","catch","error","console","_this3","_this$props","visualize","restart","_this$props$disabled","disabled","onClick","id","className","reactstrap_es","placement","isOpen","target","toggle","readOnly","ref","value","addonType","lib","text","onCopy","Component","testASR","Node","type","name","line","functionName","Cog","WaitingScreen_templateObject","WaitingScreen","react_anime_default","loop","easing","rotate","duration","cog","getChildren","node","body","declarations","init","expression","left","right","callee","arguments","object","property","properties","key","argument","test","consequent","alternate","getLabel","raw","operator","params1","_","params","join","params2","AstVisualizer","recursiveBuilder","children","tree","forEach","child","push","title","expanded","start","end","buildTree","ast","highlightCode","codeEditor","cm","editor","doc","fromIndex","posFromIndex","toIndex","markText","clearHighlightedCode","getAllMarks","m","clear","treeData","nextProps","index_esm","onChange","canDrag","generateNodeProps","onMouseEnter","onMouseLeave","Image","FrontPage_templateObject","AppTitle","FrontPage_templateObject2","AppDescription","FrontPage_templateObject3","Container","_templateObject4","FrontPage","direction","scale","delay","CLogo","ErrorPageContainer","ErrorHandler_templateObject","TextJumbo","ErrorHandler_templateObject2","ErrorMessage","ErrorHandler_templateObject3","ErrorPosition","ErrorHandler_templateObject4","Robot","img","_templateObject5","ErrorHandler","tag","lineLength","getLine","length","ch","getErrorMessage","getErrorPosition","column","log","src","SadRobot","Tabs","_Component","_getPrototypeOf2","_len","args","Array","_key","apply","concat","selected","handleClick","index","event","preventDefault","_renderTitles","map","activeClass","href","label","_renderContent","inherits","createClass","nextState","Pane","_Component2","VAR_SIZE","TYPE_LENGTH","x","y","z","instance","Registry","set","register","array","_this$_keys$idx","idx","substring","_keys","splice","toConsumableArray","get","slice","fill","freeze","VectorContainer","table","Vector_templateObject","nbCols","colLen","colHeight","TD","td","Vector_templateObject2","_ref3","_ref4","Vector","cols","i","defaultProps","TdNumbers","vpslldq_templateObject","TdZeroes","vpslldq_templateObject2","_ref5","_ref6","TrNumbers","tr","vpslldq_templateObject3","_ref7","SHIFT_INDEX","INPUT_INDEX","Vpslldq","registry","shiftLen","input","output","computeCommand","numbersRef","zeroesRef","timeline","anime","autoplay","add","targets","current","translateX","translateY","_output","_this$state","Vector_Vector","e","toString","substr","vpaddd_templateObject","vpaddd_templateObject2","Operator","vpaddd_templateObject3","INPUT1_INDEX","INPUT2_INDEX","OUTPUT_INDEX","convertto32bitsfrom8bits","uint32","fromBytesBigEndian","convertto8bitsfrom32bits","getByteBigEndian","Vpaddd","input1","input2","input1_32bits","input2_32bits","output_32bits","addMod32","nbCols_32bits","colLen32","numbers1Ref","numbers2Ref","numbers1Ref_32bits","numbers2Ref_32bits","actualNumbersRef2","actualNumbersRef2_32bits","offset","opacity","childNodes","round","update","progress","innerHTML","hiddenStyle","_this$state2","vpaddd_TrNumbers","vpaddd_TdNumbers","style","ret_templateObject","ret_templateObject2","RetContainer","ret_templateObject3","width","Ret","returnValue","boxShadow","ret_TrNumbers","ret_TdNumbers","UnsupportedCommand","FunctionContainer","Function_templateObject","FunctionName","Function_templateObject2","Function","SequentialComponent_templateObject","SequentialComponent","isHover","undefined","component","onEnter","hoverHighlight","childAnimation","isLoop","onLeave","seek","Infinity","container","onComplete","sequentialHighlight","c","getAnimation","animeRef","complete","timelineFinished","finished","allAnimationCompleted","shouldBeVisible","play","pause","SequentialComponent_Container","cloneElement","ButtonContainer","ASMVisualizer_templateObject","AsmVisualizer","buildGraphicStack","stack","asm","func","commands","Function_Function","command","vpslldq_Vpslldq","vpaddd_Vpaddd","ret_Ret","UnsupportedCommand_UnsupportedCommand","commandFactory","getButtons","buttons","icon","button","outline","increment","setTimeout","componentDonePlaying","_this4","SequentialComponent_SequentialComponent","App_templateObject","LeftContainer","App_templateObject2","RightContainer","App_templateObject3","App","handleClear","clearCode","code","callback","compiling","codeWasModifiedSinceLastCompile","assign","JSON","parse","getValue","rawAsm","currentFunction","exec","source","trim","replace","split","generateASM","clangAst","request","method","headers","content-type","json","compiler","options","userArguments","compilerOptions","produceGccDump","produceCfg","produceAst","filters","binary","execute","labels","directives","commentOnly","intel","demangle","lang","response","alert","stderr","astOutput","keys","k","qs","savedState","localStorage","getItem","history","createBrowserHistory","disableButtons","location","pathname","search","frontPage","waitingScreen","asmVisualizer","astVisualizer","components_ASMVisualizer","components_ASTVisualizer","setItem","stringify","rightPage","components_ErrorHandler","Tabs_Tabs","Tabs_Pane","App_Container","ButtonPanel_ButtonPanel","react_codemirror2","mode","theme","lineNumbers","lineWrapping","gutters","onBeforeChange","data","onPaste","Boolean","window","hostname","match","ReactDOM","render","BrowserRouter","basename","components_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5585e54f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cog.a08a6ab0.svg\";","module.exports = __webpack_public_path__ + \"static/media/c-programming.b504359c.png\";","module.exports = __webpack_public_path__ + \"static/media/cryingboy.5b495fa1.svg\";","export function getFlatColors() {\n    return {\n        main: getComputedStyle(document.documentElement).getPropertyValue('--main'),\n        darkMain: getComputedStyle(document.documentElement).getPropertyValue('--dark-main'),\n        one: getComputedStyle(document.documentElement).getPropertyValue('--one'),\n        two: getComputedStyle(document.documentElement).getPropertyValue('--two'),\n        three: getComputedStyle(document.documentElement).getPropertyValue('--three'),\n        four: getComputedStyle(document.documentElement).getPropertyValue('--four'),\n        five: getComputedStyle(document.documentElement).getPropertyValue('--five'),\n        gray: getComputedStyle(document.documentElement).getPropertyValue('--gray'),\n        clearTextColor: getComputedStyle(document.documentElement).getPropertyValue('--clear-text-color'),\n        DarkTextColor: getComputedStyle(document.documentElement).getPropertyValue('--dark-text-color')\n    }\n}","import React from \"react\";\nimport styled from 'styled-components'\nimport {getFlatColors} from \"../Utils\";\n\nconst Status = styled.div`\n  background: ${({bg}) => bg};\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  font-weight: 300\n  font-size: 14px;\n  padding: 5px;\n  padding-left: 10px;\n  margin-bottom: 5px;\n\n  > span {\n    font-weight: 500;\n    margin-left: 10px;\n  }\n\n  @media (max-width: 700px) {\n    font-size: 8px;\n  }\n`\n\nexport default function CodeStatus({status = 'compiles'}) {\n    let color = '';\n    let message = '';\n    if (status === 'compiles') {\n        color = getFlatColors().five;\n        message = 'Code status: Compiles..';\n    }\n    else if (status === 'error') {\n        color = getFlatColors().two;\n        message = 'Code status: Error..';\n    }\n    else if (status === 'warning') {\n        color = getFlatColors().four;\n        message = 'Code status: warning..';\n    }\n\n    return (\n        <Status bg={color}>\n            {message}\n        </Status>\n    );\n}","import React, {Component} from 'react';\nimport styled from 'styled-components'\nimport CodeStatus from \"./CodeStatus\";\nimport { Popover, PopoverBody } from 'reactstrap';\nimport { BitlyClient } from 'bitly';\nimport { InputGroup, InputGroupAddon, Button, Input } from 'reactstrap';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\nconst ButtonPanelContainer = styled.div`\n  background: #1F292E;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst Top = styled.div`\n  padding: 3px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 10px;\n`\n\nconst Buttons = styled.div`\n    width: 100%;\n    display: flex;\n  > button {\n    border: none;\n    background: none;\n    color: #fff;\n    font-size: 18px;\n    padding: 8px;\n    text-shadow: -1px -1px 1px rgba(255,255,255,.1), 1px 1px 1px rgba(0,0,0,.5);\n\n    @media (max-width: 700px) {\n      font-size: 10px;\n    }\n  }\n\n  > button:hover {\n    color: #fff;\n    cursor: pointer;\n  }\n\n  > button:disabled {\n    color: #919191;\n  }\n\n  > button:active {\n    color: #fff;\n    text-shadow: none;\n  }\n  \n  > #sharePopover {\n    margin-left:auto;\n    opacity: 0.6;\n  }\n  \n  > #sharePopover:hover {\n    opacity: 1;\n  }\n`\n\nexport default class ButtonPanel extends Component {\n\n    constructor(props) {\n        super(props);\n        this.bitly = new BitlyClient('e17981e1eef5e2ec83995b478b899564448b9496', {});\n\n        this.toggleShare = this.toggleShare.bind(this);\n        this.state = {\n            popoverOpen: false,\n            shareLink: ''\n        };\n\n        this.textAreaRef = React.createRef();\n    }\n\n    toggleShare() {\n        let longUrl = this.props.getShareLink();\n        this.bitly\n            .shorten(longUrl)\n            .then((result) => {\n                this.setState({\n                    popoverOpen: !this.state.popoverOpen,\n                    shareLink: result.url\n                });\n            })\n            .catch((error) => {\n                this.setState({\n                    popoverOpen: !this.state.popoverOpen,\n                    shareLink: longUrl\n                });\n                console.error(error);\n            });\n\n\n    }\n\n    render() {\n        let {visualize, restart, disabled = false, status} = this.props;\n\n        return (\n            <ButtonPanelContainer>\n                <Top>\n                    <Buttons>\n                        <button disabled={disabled} onClick={visualize}>Visualize</button>\n                        <button onClick={restart}>Restart</button>\n                        <button id='sharePopover' onClick={this.toggleShare}><i className=\"fas fa-share-square\"></i></button>\n                    </Buttons>\n\n\n                    <Popover placement=\"left\" isOpen={this.state.popoverOpen} target=\"sharePopover\" toggle={this.toggleShare}>\n                        <PopoverBody>\n                            <InputGroup>\n                                <Input readOnly ref={this.textAreaRef} value={this.state.shareLink}/>\n                                <InputGroupAddon addonType=\"prepend\">\n\n                                    <CopyToClipboard text={this.state.shareLink}\n                                                     onCopy={ () => this.setState({ popoverOpen: false}) }>\n                                        <Button color=\"info\"> <i className=\"far fa-copy\"></i> </Button>\n                                    </CopyToClipboard>\n\n\n                                </InputGroupAddon>\n                            </InputGroup>\n                        </PopoverBody>\n                    </Popover>\n                </Top>\n                <CodeStatus status={status}/>\n            </ButtonPanelContainer>\n        );\n    }\n}","//import * as acorn from \"acorn\";\n\n\nconst testASR = `{\"type\": \"Program\",\\n  \"start\": 0,\\n  \"end\": 198,\\n  \"body\": [\\n    {\\n      \"type\": \"ImportDeclaration\",\\n      \"start\": 0,\\n      \"end\": 20,\\n      \"specifiers\": [],\\n      \"source\": {\\n        \"type\": \"Literal\",\\n        \"start\": 7,\\n        \"end\": 20,\\n        \"value\": \"x86intrin.h\",\\n        \"raw\": \"\\\\\"x86intrin.h\\\\\"\"\\n      }\\n    },\\n    {\\n      \"type\": \"FunctionDeclaration\",\\n      \"start\": 22,\\n      \"end\": 198,\\n      \"id\": {\\n        \"type\": \"Identifier\",\\n        \"start\": 31,\\n        \"end\": 40,\\n        \"name\": \"PrefixSum\"\\n      },\\n      \"generator\": false,\\n      \"expression\": false,\\n      \"params\": [\\n        {\\n          \"type\": \"Identifier\",\\n          \"start\": 41,\\n          \"end\": 45,\\n          \"name\": \"curr\"\\n        }\\n      ],\\n      \"body\": {\\n        \"type\": \"BlockStatement\",\\n        \"start\": 47,\\n        \"end\": 198,\\n        \"body\": [\\n          {\\n            \"type\": \"VariableDeclaration\",\\n            \"start\": 53,\\n            \"end\": 87,\\n            \"declarations\": [\\n              {\\n                \"type\": \"VariableDeclarator\",\\n                \"start\": 57,\\n                \"end\": 86,\\n                \"id\": {\\n                  \"type\": \"Identifier\",\\n                  \"start\": 57,\\n                  \"end\": 60,\\n                  \"name\": \"Add\"\\n                },\\n                \"init\": {\\n                  \"type\": \"CallExpression\",\\n                  \"start\": 63,\\n                  \"end\": 86,\\n                  \"callee\": {\\n                    \"type\": \"Identifier\",\\n                    \"start\": 63,\\n                    \"end\": 77,\\n                    \"name\": \"_mm_slli_si128\"\\n                  },\\n                  \"arguments\": [\\n                    {\\n                      \"type\": \"Identifier\",\\n                      \"start\": 78,\\n                      \"end\": 82,\\n                      \"name\": \"curr\"\\n                    },\\n                    {\\n                      \"type\": \"Literal\",\\n                      \"start\": 84,\\n                      \"end\": 85,\\n                      \"value\": 4,\\n                      \"raw\": \"4\"\\n                    }\\n                  ]\\n                }\\n              }\\n            ],\\n            \"kind\": \"let\"\\n          },\\n          {\\n            \"type\": \"ExpressionStatement\",\\n            \"start\": 92,\\n            \"end\": 124,\\n            \"expression\": {\\n              \"type\": \"AssignmentExpression\",\\n              \"start\": 92,\\n              \"end\": 123,\\n              \"operator\": \"=\",\\n              \"left\": {\\n                \"type\": \"Identifier\",\\n                \"start\": 92,\\n                \"end\": 96,\\n                \"name\": \"curr\"\\n              },\\n              \"right\": {\\n                \"type\": \"CallExpression\",\\n                \"start\": 99,\\n                \"end\": 123,\\n                \"callee\": {\\n                  \"type\": \"Identifier\",\\n                  \"start\": 99,\\n                  \"end\": 112,\\n                  \"name\": \"_mm_add_epi32\"\\n                },\\n                \"arguments\": [\\n                  {\\n                    \"type\": \"Identifier\",\\n                    \"start\": 113,\\n                    \"end\": 117,\\n                    \"name\": \"curr\"\\n                  },\\n                  {\\n                    \"type\": \"Identifier\",\\n                    \"start\": 119,\\n                    \"end\": 122,\\n                    \"name\": \"Add\"\\n                  }\\n                ]\\n              }\\n            }\\n          },\\n          {\\n            \"type\": \"ExpressionStatement\",\\n            \"start\": 129,\\n            \"end\": 159,\\n            \"expression\": {\\n              \"type\": \"AssignmentExpression\",\\n              \"start\": 129,\\n              \"end\": 158,\\n              \"operator\": \"=\",\\n              \"left\": {\\n                \"type\": \"Identifier\",\\n                \"start\": 129,\\n                \"end\": 132,\\n                \"name\": \"Add\"\\n              },\\n              \"right\": {\\n                \"type\": \"CallExpression\",\\n                \"start\": 135,\\n                \"end\": 158,\\n                \"callee\": {\\n                  \"type\": \"Identifier\",\\n                  \"start\": 135,\\n                  \"end\": 149,\\n                  \"name\": \"_mm_slli_si128\"\\n                },\\n                \"arguments\": [\\n                  {\\n                    \"type\": \"Identifier\",\\n                    \"start\": 150,\\n                    \"end\": 154,\\n                    \"name\": \"curr\"\\n                  },\\n                  {\\n                    \"type\": \"Literal\",\\n                    \"start\": 156,\\n                    \"end\": 157,\\n                    \"value\": 8,\\n                    \"raw\": \"8\"\\n                  }\\n                ]\\n              }\\n            }\\n          },\\n          {\\n            \"type\": \"ReturnStatement\",\\n            \"start\": 164,\\n            \"end\": 196,\\n            \"argument\": {\\n              \"type\": \"CallExpression\",\\n              \"start\": 171,\\n              \"end\": 195,\\n              \"callee\": {\\n                \"type\": \"Identifier\",\\n                \"start\": 171,\\n                \"end\": 184,\\n                \"name\": \"_mm_add_epi32\"\\n              },\\n              \"arguments\": [\\n                {\\n                  \"type\": \"Identifier\",\\n                  \"start\": 185,\\n                  \"end\": 189,\\n                  \"name\": \"curr\"\\n                },\\n                {\\n                  \"type\": \"Identifier\",\\n                  \"start\": 191,\\n                  \"end\": 194,\\n                  \"name\": \"Add\"\\n                }\\n              ]\\n            }\\n          }\\n        ]\\n      }\\n    }\\n  ],\\n  \"sourceType\": \"module\"\\n}`\nclass Node {\n    constructor(type, name, line) {\n        this.type = type;\n        this.name = name;\n        this.line = line;\n    }\n}\n\nexport function generateAST(editor) {\n    //let code = editor.doc.getValue();\n    // code = cleanExpression(code);\n    // let ast = new Node(\"Program\", 0, code.length);\n    // ast.body = recursiveASTBuilder(code, 0, 0);\n\n    //code = code.replace(new RegExp('int', 'g'), 'let');\n\n    //return acorn.parse(code)\n\n    //Temporary.. We disable AST parsing.. We\"ll come back to AST later.\n    return JSON.parse(testASR)\n}\n\nconst functionName = /([a-zA-Z]+): # @.*/;\n\n\nexport function generateASM(rawAsm) {\n    let asm = [];\n    let currentFunction = {\n        body: []\n    };\n    rawAsm.forEach(line => {\n        if (functionName.test(line.text)) {\n            let name = functionName.exec(line.text)[1];\n            currentFunction = new Node(\"Function\", name, 0);\n            currentFunction.body = [];\n            asm.push(currentFunction);\n        }\n        else if (line.text.length > 0 && line.source) {\n            // Remove comments, commas, trim it and then split\n            let command = line.text.trim().replace(/,| #.*/g, '').split(\" \");\n            let name = command[0];\n            let params = command.slice(1, command.length);\n\n            let node = new Node(\"Command\", name, line.source.line);\n            node.params = params;\n            currentFunction.body.push(node);\n        }\n    });\n    return asm\n}\n\n\n// function recursiveASTBuilder(code, start) {\n//     let ast = [];\n//\n//     if (isAssignExpr(code)) {\n//         let tokens = getAssignExpr(code);\n//         let end = start + code.length;\n//         let node = new Node(\"VariableDeclaration\", start, end)\n//         node.kind = tokens[1];\n//         console.log(tokens);\n//         ast.push(node)\n//     }\n//     if (isFuncDeclaration(code)) {\n//         let tokens = getFuncDeclaration(code);\n//         let end = start + code.length;\n//         let node = new Node(\"FunctionDeclaration\", start, end)\n//         ast.push(node)\n//     }\n//     if (isFuncCall(code)) {\n//         let tokens = getFuncCall(code);\n//         let end = start + code.length;\n//         let node = new Node(\"FunctionCall\", start, end)\n//         ast.push(node)\n//     }\n//     if (isReturnExpr(code)) {\n//         let tokens = getReturnExpr(code);\n//         let end = start + code.length;\n//         let node = new Node(\"ReturnExpression\", start, end)\n//         ast.push(node)\n//     }\n//\n//\n//     return ast;\n// }\n//\n// function cleanExpression(s){ //just supress superfluous space and other invisible characters\n//     return (s.replace(/\\s{1,}/g, ' ')).trim();\n// }\n//\n// function extractExpression(s){     //this function extract the different expressions of a given c code, by expression we mean a piece of code situated after a ';' or a '{' and ended either by ';' or by '}'.This extract the expressions at the \"same level\"\n//     s=cleanExpression(s);\n//     var accoladeIndication=0;\n//     var expresions=[];\n//     const delimiters=new Set([';', '}']);\n//     var i=s.indexOf('{')+1,lengthS=s.lastIndexOf('}'); // we first determine the begining and the ending of the piece of c code\n//     var  semicolonPosition=i;\n//     while(i<lengthS){\n//         if (s[i]==='{'){\n//             accoladeIndication++; //indicates if we are not inside an expression\n//         }\n//         if (s[i]==='}'){\n//             accoladeIndication--;\n//         }\n//\n//         if(delimiters.has(s[i]) && accoladeIndication === 0){ // if the caracter is a delimiter of expression and if we are not inside an expression\n//             expresions.push((s.slice(semicolonPosition+1, i)).trim()) //we extract the expression begining from the last delimiter to this delimiter\n//             semicolonPosition=i; // we save the position of this delimiter\n//         }\n//         i++;\n//     }\n//     return expresions;\n// }\n//\n// function extractParameter(s){     //this function extract the different effective parameter of a c function (call function)\n//     s=cleanExpression(s);\n//     var semicolonIndication=0;\n//     var expresions=[];\n//     const delimiters=new Set([',']);\n//     var i=0,lengthS=s.length; // we first determine the begining and the ending of the parameter previously extracted\n//     var  semicolonPosition=i;\n//     while(i<lengthS){\n//         if (s[i]==='('){\n//             semicolonIndication++; //indicates if we are not inside an expression\n//         }\n//         if (s[i]===')'){\n//             semicolonIndication--;\n//         }\n//\n//         if(delimiters.has(s[i]) && semicolonIndication === 0){ // if the caracter is a delimiter of expression and if we are not inside an expression\n//             expresions.push((s.slice(semicolonPosition, i)).trim()) //we extract the expression begining from the last delimiter to this delimiter\n//             semicolonPosition=i+1; // we save the position of this delimiter\n//         }\n//         i++;\n//         if(i===lengthS){\n//             expresions.push((s.slice(semicolonPosition, i)).trim()) //to take the last string\n//         }\n//     }\n//     return expresions;\n// }\n//\n// function processCCode(cCode){\n//     var tab=[];\n//     if(isSimpleExpression(cCode)){\n//         tab=Array.of(cCode);\n//         return tab;\n//     }\n//     if(regexFunctionDeclar.test(cCode)){\n//         var t=extractExpression(cCode);\n//         t.push('body');\n//         tab=Array.of(regexFunctionDeclar.exec(cCode)[2], ['returntype',[regexFunctionDeclar.exec(cCode)[1]]],t.reverse());\n//         for(var j=1; j<tab[2].length; j++){\n//             if (isSimpleExpression(tab[2][j])){\n//                 tab[2][j]=Array.of(tab[2][j]);\n//                 continue;\n//             }\n//             else{\n//                 tab[2][j]=processCCode(tab[2][j]);\n//             }\n//\n//         }\n//         return tab;\n//     }\n//\n//     if(regexFunctionCall.test(cCode)){\n//         var paramString = regexFunctionCall.exec(cCode)[2]\n//         var t=extractParameter(paramString);\n//         t.push('parameters');\n//         tab=Array.of(regexFunctionCall.exec(cCode)[1], t.reverse());\n//         for(var j=1; j<tab[1].length; j++){\n//             if (isSimpleExpression(tab[1][j])){\n//                 tab[1][j]=Array.of(tab[1][j]);\n//                 continue;\n//             }\n//             else{\n//                 tab[1][j]=processCCode(tab[1][j]);\n//             }\n//\n//         }\n//         return tab;\n//     }\n//     if(regexAssignExpr.test(cCode)){\n//         var regArray = regexAssignExpr.exec(cCode)\n//         tab=Array.of('=',[regArray[2],[regArray[1]]], [regArray[3]]);\n//         if (isSimpleExpression(tab[2][0])){\n//             tab[2][0]=Array.of(tab[2][0]);\n//         }\n//         else\n//         {\n//             tab[2][0]=processCCode(tab[2][0]);\n//         }\n//\n//\n//         return tab;\n//     }\n//     if(regexReturnExpr.test(cCode)){\n//         tab=Array.of('return',[regexReturnExpr.exec(cCode)[1]]);\n//         if (isSimpleExpression(tab[1][0])){\n//             tab[1][0]=Array.of(tab[1][0]);\n//         }\n//         else\n//         {\n//             tab[1][0]=processCCode(tab[1][0]);\n//         }\n//\n//\n//         return tab;\n//     }\n//\n//\n// }\n//\n// function isSimpleExpression(s){\n//     return !(isFuncDeclaration(s)||isFuncCall(s)||isAssignExpr(s)||isReturnExpr(s));\n// }\n//\n// function identifyNatureOfExpr(s){\n//     var regex=/^\\s*(?:void|char|uint8_t|short|int|long|float|double|signed|unsigned|Bool|Complex|__m128|__m128d|__m128i|__m256|__m256d|__m256i|__m512|__m512d|__m512i)\\s+(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s*\\(\\s*(?:void|char|uint8_t|short|int|long|float|double|signed|unsigned|Bool|Complex|__m128|__m128d|__m128i|__m256|__m256d|__m256i|__m512|__m512d|__m512i)\\s+(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s*(?:,(?:void|char|uint8_t|short|int|long|float|double|signed|unsigned|Bool|Complex|__m128|__m128d|__m128i|__m256|__m256d|__m256i|__m512|__m512d|__m512i)\\s+(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s*)*\\s*(?:\\)\\s*(?=\\{))/;\n// }\n//\n// const regexFunctionDeclar=/^\\s*([_$a-zA-Z][_$a-zA-Z0-9]*)\\s+([_$a-zA-Z][_$a-zA-Z0-9]*)\\s*\\(\\s*(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s+\\*?(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s*(?:,(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s+\\*?(?:[_$a-zA-Z][_$a-zA-Z0-9]*)\\s*)*\\s*(?:\\)\\s*(?=\\{))/;\n// const regexFunctionCall=/^\\s*([_$a-zA-Z][_$a-zA-Z0-9]*)\\s*\\((.*)(?=\\)$|\\)(?=;))/;\n// const regexReturnExpr=/^\\s*return\\s+(.*)/;\n// const regexAssignExpr=/^\\s*(?:([_a-zA-Z][\\._a-zA-Z0-9]*)\\s+)?([\\*_$a-zA-Z][\\._a-zA-Z0-9]*)\\s*=\\s*(.*)/;\n//\n// function isFuncDeclaration(code) {\n//     return regexFunctionDeclar.test(code)\n// }\n// function isFuncCall(code) {\n//     return regexFunctionCall.test(code)\n// }\n// function isReturnExpr(code) {\n//     return regexReturnExpr.test(code)\n// }\n// function isAssignExpr(code) {\n//     return regexAssignExpr.test(code)\n// }\n// function getFuncDeclaration(code) {\n//     return regexFunctionDeclar.exec(code);\n// }\n// function getFuncCall(code) {\n//     return regexFunctionCall.exec(code);\n// }\n// function getReturnExpr(code) {\n//     return regexReturnExpr.exec(code);\n// }\n// function getAssignExpr(code) {\n//     return regexAssignExpr.exec(code);\n// }\n","import React from 'react';\nimport Anime from 'react-anime';\nimport styled from 'styled-components'\nimport cog from \"../Images/cog.svg\";\n\nconst Cog = styled.div`\n    content: ${({url}) => 'url(' + url + ');'}\n    height: 40vh;\n    margin: 30vh auto;\n    color: var(--dark-main)\n`\n\nexport default function WaitingScreen() {\n\n    return (\n                <Anime loop={true}\n                       easing={\"linear\"}\n                       rotate='360deg'\n                       duration={4000}>\n                    <Cog url={cog}/>\n                </Anime>\n    );\n}","import React, {Component} from 'react';\nimport * as _ from \"lodash\";\nimport SortableTree from \"react-sortable-tree\";\nimport 'react-sortable-tree/style.css';\nimport '../css/ASTVisualizer.css'\n\nlet getChildren = (node) => {\n\n    switch (node.type) {\n\n        case 'Program':\n            return node.body;\n\n        case 'VariableDeclaration':\n            return node.declarations;\n\n        case 'VariableDeclarator':\n            return node.init ? [node.id, node.init] : [node.id];\n\n        case 'ExpressionStatement':\n            return [node.expression];\n\n        case 'BinaryExpression':\n            return [node.left, node.right];\n\n        case 'AssignmentExpression':\n            return [node.left, node.right];\n\n        case 'CallExpression':\n            return [node.callee, {type: 'arguments', arguments: node.arguments}];\n\n        case 'arguments':\n            return node.arguments;\n\n        case 'MemberExpression':\n            return [node.object, node.property];\n\n        case 'NewExpression':\n            return node.arguments;\n\n        case 'ObjectExpression':\n            return node.properties;\n\n        case 'Property':\n            return [node.key, node.value];\n\n        case 'FunctionDeclaration':\n            return [node.body];\n\n        case 'FunctionExpression':\n            return [node.body];\n\n        case 'BlockStatement':\n            return node.body;\n\n        case 'ReturnStatement':\n            return node.argument ? [node.argument] : [];\n\n        case 'UnaryExpression':\n            return [node.argument];\n\n        case 'IfStatement':\n            return [node.test, node.consequent];\n\n        case 'ConditionalExpression':\n            return [node.test, node.consequent, node.alternate];\n\n        default:\n            return [];\n    }\n};\n\nlet getLabel = (node) => {\n\n    switch (node.type) {\n\n        case 'Identifier':\n            return node.name;\n\n        case 'Literal':\n            return node.raw;\n\n        case 'UnaryExpression':\n            return node.operator;\n\n        case 'BinaryExpression':\n            return node.operator;\n\n        case 'AssignmentExpression':\n            return node.operator;\n\n        case 'FunctionDeclaration':\n            var params1 = _.map(node.params, 'name').join(',');\n            return 'function ' + (!(!(node.id && node.id.name) && !'')) + '(' + params1 + ')';\n\n        case 'FunctionExpression':\n            var params2 = _.map(node.params, 'name').join(',');\n            return 'function ' + (!(!(node.id && node.id.name) && !'')) + '(' + params2 + ')';\n\n        default:\n            return node.type;\n    }\n};\n\nclass AstVisualizer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            treeData: [],\n        };\n\n    }\n\n    componentDidMount() {\n        this.setState({treeData: this.buildTree(this.props.ast)})\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({treeData: this.buildTree(nextProps.ast)})\n    }\n\n    recursiveBuilder = (node) => {\n        let children = getChildren(node);\n        let tree = [];\n        if (children === [])\n            return children;\n        children.forEach((child) => {\n            tree.push({\n                title: getLabel(child),\n                children: this.recursiveBuilder(child),\n                expanded: true,\n                type: child.type,\n                start: child.start,\n                end: child.end\n            });\n        });\n        return tree\n    };\n\n    buildTree = (ast) => {\n        let tree = [];\n        tree.push({\n            title: getLabel(ast),\n            children: this.recursiveBuilder(ast),\n            expanded: true,\n            type: ast.type,\n            start: ast.start,\n            end: ast.end\n        });\n        return tree\n    };\n\n    highlightCode = (start, end) => {\n        let codeEditor = this.props.cm.editor.doc;\n        const fromIndex = codeEditor.posFromIndex(start);\n        const toIndex = codeEditor.posFromIndex(end);\n        codeEditor.markText(fromIndex, toIndex, {\n            className: 'highlighted-code'\n        });\n    };\n\n    clearHighlightedCode = () => {\n        this.props.cm.editor.doc.getAllMarks().forEach((m) => {\n            m.clear()\n        })\n    };\n\n    render() {\n        return (\n            <SortableTree\n                treeData={this.state.treeData}\n                onChange={treeData => this.setState({treeData})}\n                canDrag={false}\n                generateNodeProps={({node}) => {\n                    return {\n                        className: node.type,\n                        onMouseEnter: () => this.highlightCode(node.start, node.end),\n                        onMouseLeave: () => this.clearHighlightedCode()\n                    };\n                }}\n            />\n        );\n    }\n}\n\nexport default AstVisualizer;","import React from 'react';\nimport Anime from 'react-anime';\nimport styled from 'styled-components'\nimport CLogo from \"../Images/c-programming.png\";\n\nconst Image = styled.div`\n    content: ${({url}) => 'url(' + url + ');'}\n    width: 40vmin;\n    margin: 10vh auto;\n`\nconst AppTitle = styled.div`\n    text-align: center;\n    font-weight: 300;\n    font-size: calc(12px + 3.6vw);\n    letter-spacing: 1.8px;\n    margin-top: 40px;\n    border: medium none;\n    margin-bottom: 20px;\n`\nconst AppDescription = styled.div`\n    text-align: center;\n    font-weight: 300;\n    margin: 0px auto;\n    font-size: calc(8px + 0.91vw);\n`\nconst Container = styled.div`\n`\n\nexport default function FrontPage() {\n\n    return (\n        <Container>\n            <Anime easing=\"easeOutCubic\"\n                   duration={2000}\n                   direction=\"alternate\"\n                   loop={true}\n                   scale={.9}>\n                <div>\n                    <Anime rotate={\"360deg\"}\n                           loop={true}\n                           delay={6000}\n                           duration={4000}>\n                        <Image url={CLogo}/>\n                    </Anime>\n                </div>\n            </Anime>\n            <AppTitle>The Ultimate SIMD visualizer</AppTitle>\n            <AppDescription>Built by <strong>Jérémie Piotte</strong> and <strong>Pierre Marie\n                Ntang</strong></AppDescription>\n        </Container>\n    );\n}","import React, {Component} from 'react';\nimport styled from \"styled-components\";\nimport SadRobot from \"../Images/cryingboy.svg\";\n\nconst ErrorPageContainer = styled.div`\n    padding: 50px;\n`\n\nconst TextJumbo = styled.div`\n    font-size: 60px;\n    font-weight: 700;\n    color: rgb(72, 72, 72);\n    margin-bottom: 15px;\n`\n\nconst ErrorMessage = styled.div`\n    font-size: 32px;\n    font-weight: normal;\n    color: rgb(72, 72, 72);\n    margin-bottom: 15px;\n    margin-top: 25px;\n`\n\nconst ErrorPosition = styled.div`\n    font-size: 14px;\n    font-weight: bold;\n    color: #767676;\n    margin-bottom: 15px;\n    margin-top: 25px;\n`\nconst Robot = styled.img`\n    position: absolute;\n    bottom: 0;\n    right: 0;\n    width: 50vh;\n`\n\nclass ErrorHandler extends Component {\n\n    constructor(props) {\n        super(props)\n        console.log(props.error)\n        if (props.error.length !== 0) {\n            this.highlightCode()\n        }\n    }\n\n    componentWillUnmount() {\n        this.clearHighlightedCode()\n    }\n\n    highlightCode = () => {\n        const line = this.props.error[0].tag.line - 1;\n        const lineLength = this.props.cm.editor.getLine(line).length;\n        this.props.cm.editor.doc.markText({line, ch: 0}, {line, ch: lineLength}, {\n            className: 'highlighted-code'\n        });\n    };\n\n    clearHighlightedCode = () => {\n        this.props.cm.editor.doc.getAllMarks().forEach((m) => {\n            m.clear()\n        })\n    };\n\n    getErrorMessage = () => {\n        return this.props.error[0].tag.text;\n    }\n    getErrorPosition = () => {\n        return <div>\n            <p>Line: {this.props.error[0].tag.line} </p>\n            <p> Column: {this.props.error[0].tag.column} </p>\n        </div>\n\n    }\n\n    render() {\n        return (\n            <ErrorPageContainer>\n                <TextJumbo>Oops!</TextJumbo>\n                <ErrorMessage>\n                    {this.getErrorMessage()}\n                </ErrorMessage>\n                <ErrorPosition>\n                    {this.getErrorPosition()}\n                </ErrorPosition>\n                <Robot src={SadRobot}/>\n            </ErrorPageContainer>\n        );\n    }\n}\n\nexport default ErrorHandler;","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from \"react\";\nimport \"../css/Tabs.css\"\n\nexport class Tabs extends Component {\n    state = {\n        selected: this.props.selected\n    };\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return this.props !== nextProps || this.state !== nextState;\n    }\n\n    handleClick = (index, event) => {\n        event.preventDefault();\n        this.setState({\n            selected: index\n        });\n    }\n    _renderTitles = () => {\n        function labels(child, index) {\n            var activeClass = (this.state.selected === index ? 'active' : '');\n            return (\n                <li key={index}>\n                    <a href=\"#\"\n                       className={activeClass}\n                       onClick={this.handleClick.bind(this, index)}>\n                        {child.props.label}\n                    </a>\n                </li>\n            );\n        }\n\n        return (\n            <ul className=\"tabs__labels\">\n                {this.props.children.map(labels.bind(this))}\n            </ul>\n        );\n    };\n\n    _renderContent = () => {\n        return (\n            <div className=\"tabs__content\">\n                {this.props.children[this.state.selected]}\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <div className=\"tabs\">\n                {this._renderTitles()}\n                {this._renderContent()}\n            </div>\n        );\n    }\n}\n\nexport class Pane extends Component {\n    render() {\n        return (\n            <div>\n                {this.props.children}\n            </div>\n        );\n    }\n};\n","import * as _ from \"lodash\";\n\nexport const NB_REGISTERS = 32;\nexport const VAR_SIZE = 8; //Octets\nexport const TYPE_LENGTH = {\n    x: 512 / (4 * VAR_SIZE),\n    y: 512 / (2 * VAR_SIZE),\n    z: 512 / VAR_SIZE\n};\n\nclass Registry {\n    constructor() {\n        // the array _keys contains NB_REGISTERS arrays\n        // of size 512 / VAR_SIZE filled with byte-sized values (randomized)\n        this._keys = new Array(NB_REGISTERS).fill(0).map(() =>\n            new Array(TYPE_LENGTH[\"z\"]).fill(0).map(() =>\n                _.random(1, 255)\n            )\n        );\n    }\n\n    // stores the value in array into the \"register\" where register is something like xmm0\n    set = (register, array) => {\n        const idx = +register.substring(3); // should  be the number of the register, between 0 and 32\n        const type = register[0];// should be x, y, z\n\n        this._keys[idx].splice(0, TYPE_LENGTH[type], ...array);\n    };\n\n    // get either an x, a y or a z register, where \"register\" is a string like xmm0\n    get = (register) => {\n        const idx = +register.substring(3);// number of the register, should be between 0 and 32 on x64\n        const type = register[0];// should be x, y or z\n        //return the last n elements of the register.\n        return this._keys[idx].slice(0, TYPE_LENGTH[type])// slice apparently copies the value\n    };\n\n    // clear resets the \"registers\" to randomized valued (?)\n    clear = () => {\n        this._keys.map(() =>\n            new Array(TYPE_LENGTH[\"z\"]).fill(0).map(() =>\n                _.random(1, 255)\n            ));\n    }\n}\n\nconst instance = new Registry();\nObject.freeze(instance);\n\nexport default instance;\n","import React, {Component} from \"react\";\nimport styled from \"styled-components\";\nimport * as _ from \"lodash\";\n\nconst VectorContainer = styled.table`\n      margin: 30px auto;\n      width: ${({nbCols, colLen}) => (nbCols * colLen) + 'px;' }\n      overflow: hidden;\n      height: ${({colHeight}) => (colHeight) + 'px;'}\n      box-shadow: 3px 3px 2px rgba(0,0,0,.4);\n      background-color: var(--main);\n      color: var(--clear-text-color);\n      border-radius: 3px;\n      display: block;\n      position: relative;\n`\n\nconst TD = styled.td`\n    border-right: 1px solid var(--gray);\n    width: ${({colLen}) => colLen + 'px;'}\n    height: ${({colHeight}) => colHeight + 'px;'}\n    display: inline-flex;\n    // color: var(--clear-text-color);\n    text-align: center;\n    \n    :last-child{\n        border-right: none;\n    }\n`\n\nexport default class Vector extends Component {\n\n    static defaultProps = {\n        nbCols: 4,\n        colLen: 50,\n        colHeight: 50,\n        children: []\n    };\n\n    constructor(props) {\n        super(props)\n        this.cols = [];\n        _.times(props.nbCols, i => {\n            this.cols.push(\n                <TD colLen={props.colLen}\n                    colHeight={props.colHeight}\n                    key={i}>\n                    {}\n                </TD>\n            )\n        });\n    }\n\n    render() {\n        return (\n            <VectorContainer nbCols={this.props.nbCols}\n                             colLen={this.props.colLen}\n                             colHeight={this.props.colHeight}>\n                <tbody>\n                <tr>\n                    {this.cols}\n                </tr>\n                {this.props.children}\n                </tbody>\n            </VectorContainer>\n        );\n    }\n}","import React, {Component} from \"react\";\nimport styled from \"styled-components\";\nimport * as Registry from \"../Utils/Registry\";\nimport Vector from \"./Vector\";\nimport * as _ from \"lodash\";\nimport anime from 'animejs';\n\n\n\nconst TdNumbers = styled.td`\n    width: ${({colLen}) => colLen}px;\n    height: ${({colHeight}) => colHeight}px;\n    text-align: center;\n    line-height: ${({colHeight}) => colHeight}px;\n`\n\nconst TdZeroes = styled.td`\n    width: ${({colLen}) => colLen}px;\n    height: ${({colHeight}) => colHeight}px;\n    text-align: center;\n    color: var(--two);\n    line-height: ${({colHeight}) => colHeight}px;\n`\n\nconst TrNumbers = styled.tr`\n    position: relative;\n    top: ${({colHeight}) => -(colHeight)}px;\n    //font-size: 24px;\n    font-family: monospace;\n    display: inline-flex;\n`\nconst SHIFT_INDEX = 2;\nconst INPUT_INDEX = 1;\nconst OUTPUT_INDEX = 0;\n\nexport default class Vpslldq extends Component {\n\n    constructor(props) {\n        super(props);\n\n        let registry = Registry.default;\n        let shiftLen = (props.params[SHIFT_INDEX] * 8) / Registry.VAR_SIZE;\n        let input = registry.get(props.params[INPUT_INDEX]);\n        let nbCols = input.length;\n\n        this.state = {\n            colLen: 50,\n            colHeight: 50,\n            nbCols,\n            shiftLen,\n            input,\n            output: [],\n        };\n        this.computeCommand();\n        this.numbersRef = React.createRef();\n        this.zeroesRef = React.createRef()\n    }\n\n    getAnimation() {\n        let timeline = anime.timeline({\n            easing: \"easeOutCubic\",\n            loop: false,\n            autoplay: false\n        });\n\n        timeline\n            .add({\n                targets: this.numbersRef.current,\n                translateX: () => -this.state.shiftLen * this.state.colLen,\n                duration: 2000,\n                delay: 300\n            })\n            .add({\n                targets: this.zeroesRef.current,\n                translateY: () => -50,\n                duration: 500,\n            });\n        return timeline;\n    }\n\n    //Compute the command and set the registry.\n    computeCommand() {\n        let registry = Registry.default;\n        let shiftLen = (this.props.params[SHIFT_INDEX] * 8) / Registry.VAR_SIZE;\n        let input = registry.get(this.props.params[INPUT_INDEX]);\n        let output = _.cloneDeep(input);\n        output.push(...new Array(shiftLen).fill(0));\n        output = output.slice(-input.length);\n        registry.set(this.props.params[OUTPUT_INDEX], output);\n\n        //this.setState({output, input, shiftLen});\n    }\n\n    render() {\n        let {nbCols, colLen, colHeight, shiftLen, input} = this.state;\n\n        return (\n            <Vector colLen={colLen} colHeight={colHeight} nbCols={nbCols}>\n                <TrNumbers colHeight={colHeight} ref={this.numbersRef}>\n                    {input.map((e, i) =>\n                        <TdNumbers colLen={colLen} colHeight={colHeight} key={i}>{('0'+e.toString(16)).substr(-2)}</TdNumbers>\n                    )}\n                </TrNumbers>\n                <TrNumbers colHeight={colHeight} ref={this.zeroesRef}>\n                    {input.map((e, i) =>\n                        <TdZeroes colLen={colLen} colHeight={colHeight}\n                                  key={i}>{(i < nbCols - shiftLen) ? \"\" : '00'}</TdZeroes>\n                    )}\n                </TrNumbers>\n            </Vector>\n        );\n    }\n}","import React, {Component} from \"react\";\nimport Vector from \"./Vector\";\nimport * as Registry from \"../Utils/Registry\";\nimport styled from \"styled-components\";\nimport anime from \"animejs\";\nimport uint32 from \"uint32\";\n\nconst TdNumbers = styled.td`\n    width: ${({colLen}) => colLen}px;\n    height: ${({colHeight}) => colHeight}px;\n    text-align: center;\n    line-height: ${({colHeight}) => colHeight}px;\n`\n\nconst TrNumbers = styled.tr`\n    position: relative;\n    top: ${({colHeight}) => -(colHeight)}px;\n    //font-size: 24px;\n    font-family: monospace;\n    display: inline-flex;\n`\n\nconst Operator = styled.div`\n        text-align: center;\n        color: var(--main);\n        font-size: 24px;\n        font-weight: 700;\n        font-family: monospace;\n    `\n\nconst INPUT1_INDEX = 1;\nconst INPUT2_INDEX = 2;\nconst OUTPUT_INDEX = 0;\n\n// should be in a distinct file\nlet convertto32bitsfrom8bits = (array) => {\n    let output = new Array(array.length / 4);\n    // we have four bytes per 32-bit ints\n    for(var z = 0; z < array.length / 4; z++) {\n        output[z] = uint32.fromBytesBigEndian(array[4 * z], array[4 * z + 1], array[4 * z + 2], array[4 * z + 3]);\n    }\n    return output\n};\n\n// should be in a distinct file\nlet convertto8bitsfrom32bits = (array) => {\n    let output = new Array(array.length * 4);\n    // we have four bytes per 32-bit ints\n    for(var z = 0; z < array.length; z++) {\n        output[4 * z] = uint32.getByteBigEndian(array[z], 3);\n        output[4 * z + 1] = uint32.getByteBigEndian(array[z], 2);\n        output[4 * z + 2] = uint32.getByteBigEndian(array[z], 1);\n        output[4 * z + 3] = uint32.getByteBigEndian(array[z], 0);\n    }\n    return output\n};\n\nexport default class Vpaddd extends Component {\n\n    constructor(props) {\n        super(props);\n\n        let registry = Registry.default;\n        let input1 = registry.get(props.params[INPUT1_INDEX]);\n        let input2 = registry.get(props.params[INPUT2_INDEX]);\n        let input1_32bits = convertto32bitsfrom8bits(input1);\n        let input2_32bits = convertto32bitsfrom8bits(input2);\n        let output_32bits = new Array(input1_32bits.length);\n        // why not do the computation in the constructor? This seems simpler. No multiple render calls.\n        for(var i = 0; i < input1_32bits.length; i++) {\n            output_32bits[i] = uint32.addMod32(input1_32bits[i],input2_32bits[i])\n        }\n        let output = convertto8bitsfrom32bits(output_32bits)\n        let nbCols = input1.length;\n        let nbCols_32bits = input1.length / 4;\n\n        this.state = {\n            colLen: 50,\n            colLen32: 200,\n            colHeight: 50,\n            nbCols,\n            nbCols_32bits,\n            input1,\n            input2,\n            input1_32bits,\n            input2_32bits,\n            output_32bits,\n            output\n        };\n\n        this.state.output = registry.get(props.params[OUTPUT_INDEX]);\n\n        this.numbers1Ref = React.createRef();\n        this.numbers2Ref = React.createRef();\n        this.numbers1Ref_32bits = React.createRef();\n        this.numbers2Ref_32bits = React.createRef();\n\n        this.actualNumbersRef2 = React.createRef();\n        this.actualNumbersRef2_32bits = React.createRef();\n\n    }\n\n    getAnimation() {\n        //\n        // Daniel : this whole thing is unreasonably long and complicated.\n        //\n        let timeline = anime.timeline({\n            easing: \"easeOutCubic\",\n            loop: false,\n            autoplay: false\n        });\n        let {output, input2, input2_32bits, output_32bits} = this.state;\n\n        timeline \n            // move the byte arrays close\n            .add({\n                targets: this.numbers2Ref.current,\n                translateY: -70,\n                duration: 1000,\n                offset: 500\n            })\n            .add({\n                targets: this.numbers1Ref.current,\n                translateY: 70,\n                duration: 1000,\n                offset: 500\n            })\n            // at 1.5 s fade out the bytes and bring in the 32-bit words\n            .add({\n                targets: this.numbers1Ref.current,\n                duration: 1000,\n                opacity: 0,\n                offset: 1500\n            })\n            .add({\n                targets: this.numbers2Ref.current,\n                duration: 1000,\n                opacity: 0,\n                offset: 1500\n            })\n            .add({\n                targets: this.numbers1Ref_32bits.current,\n                duration: 1000,\n                opacity: 1,\n                offset: 1500\n            })\n            .add({\n                targets: this.numbers2Ref_32bits.current,\n                duration: 1000,\n                opacity: 1,\n                offset: 1500\n            })\n            // then merge the two 32-bit array\n            .add({\n                targets: this.numbers2Ref_32bits.current,\n                translateY: -70,\n                duration: 1000,\n                offset: 2500\n            })\n            .add({\n                targets: this.numbers1Ref_32bits.current,\n                translateY: 70,\n                duration: 1000,\n                offset: 2500\n            })\n            .add({\n                targets: this.numbers2Ref.current,\n                translateY: -150,\n                duration: 1000,\n                offset: 2500\n            })\n            .add({\n                targets: this.numbers1Ref.current,\n                translateY: 150,\n                duration: 1000,\n                offset: 2500\n            })\n            // fade out the first ref\n            .add({\n                targets: this.numbers1Ref_32bits.current,\n                opacity: 0,\n                duration: 500\n            })\n        this.actualNumbersRef2.current.childNodes.forEach((e, i) => {\n            timeline.add({\n                targets: e,\n                easing: 'easeInOutExpo',\n                title: [input2[i], output[i]],\n                round: 1,\n                duration: 1000,\n                offset: 3000,\n                update: (a) => {\n                    if (a.progress > 0) {\n                        e.innerHTML = ('0'+(+e.title).toString(16)).substr(-2)\n                    }\n                }\n            });\n\n        this.actualNumbersRef2_32bits.current.childNodes.forEach((e, i) => {\n            timeline.add({\n                targets: e,\n                easing: 'easeInOutExpo',\n                title: [input2_32bits[i], output_32bits[i]],\n                round: 1,\n                duration: 1000,\n                offset: 3000,\n                update: (a) => {\n                    if (a.progress > 0) {\n                        e.innerHTML = ('0000000'+(+e.title).toString(16)).substr(-8)\n                    }\n                }\n            });\n        });\n        timeline\n            .add({\n                targets: this.numbers2Ref_32bits.current,\n                duration: 1000,\n                opacity: 0,\n                offset: 5000\n            })\n            .add({\n                targets: this.numbers2Ref.current,\n                duration: 1000,\n                opacity: 1,\n                offset: 5000\n            })\n        });\n        // this was long!!!\n        return timeline;\n    }\n\n    \n\n\n    render() {\n        const hiddenStyle = {\n            opacity: 0\n          };\n        //\n        // it is really not clear how to use Vector and TrNumbers and TdNumbers... should we specify colLen once or all over?\n        //\n        let {nbCols, nbCols_32bits, colLen32, colLen, colHeight, input1, input2, input1_32bits, input2_32bits} = this.state;\n        return (\n            <div>\n                <div ref={this.numbers1Ref}>\n                    <Vector colLen={colLen} colHeight={colHeight} nbCols={nbCols}>\n                        <TrNumbers colHeight={colHeight}>\n                            {input1.map((e, i) =>\n                                <TdNumbers colLen={colLen} colHeight={colHeight} key={i}>{('0'+e.toString(16)).substr(-2)}</TdNumbers>\n                            )}\n                        </TrNumbers>\n                    </Vector>\n                </div>\n                <div ref={this.numbers1Ref_32bits} style={hiddenStyle}>\n                    <Vector colLen={colLen32} colHeight={colHeight} nbCols={nbCols_32bits}>\n                        <TrNumbers colHeight={colHeight}>\n                            {input1_32bits.map((e, i) =>\n                                <TdNumbers colLen={colLen32}  colHeight={colHeight} key={i}>{('0000000'+e.toString(16)).substr(-8)}</TdNumbers>\n                            )}\n                        </TrNumbers>\n                    </Vector>\n                </div>\n                <Operator>+</Operator>\n                <div ref={this.numbers2Ref_32bits} style={hiddenStyle}>\n                    <Vector colLen={colLen32} colHeight={colHeight} nbCols={nbCols_32bits}>\n                        <TrNumbers colHeight={colHeight} ref={this.actualNumbersRef2_32bits}>\n                            {input2_32bits.map((e, i) =>\n                                <TdNumbers  colLen={colLen32}  colHeight={colHeight} key={i}\n                                           title={e.toString()}>{('00000'+e.toString(16)).substr(-8)}</TdNumbers>\n                            )}\n                        </TrNumbers>\n                    </Vector>\n                </div>\n                <div ref={this.numbers2Ref}>\n                    <Vector colLen={colLen} colHeight={colHeight} nbCols={nbCols}>\n                        <TrNumbers colHeight={colHeight} ref={this.actualNumbersRef2}>\n                            {input2.map((e, i) =>\n                                <TdNumbers colLen={colLen} colHeight={colHeight} key={i}\n                                           title={e.toString()}>{('0'+e.toString(16)).substr(-2)}</TdNumbers>\n                            )}\n                        </TrNumbers>\n                    </Vector>\n                </div>\n            </div>\n        );\n    }\n}\n\n","import React, {Component} from \"react\";\nimport styled from \"styled-components\";\nimport * as Registry from \"../Utils/Registry\";\nimport Vector from \"./Vector\";\nimport anime from 'animejs';\n\n\nconst TdNumbers = styled.td`\n    width: ${({colLen}) => colLen}px;\n    height: ${({colHeight}) => colHeight}px;\n    text-align: center;\n    line-height: ${({colHeight}) => colHeight}px;\n`\n\nconst TrNumbers = styled.tr`\n    position: relative;\n    top: ${({colHeight}) => -(colHeight)}px;\n    //font-size: 24px;\n    font-family: monospace;\n    display: inline-flex;\n`\n\nconst RetContainer = styled.div`\n        border-radius: 3px;\n        width: ${({width}) => width}px;\n        margin: 0 auto;\n}\n`\n\n\nexport default class Ret extends Component {\n\n    constructor(props) {\n        super(props);\n\n        let registry = Registry.default;\n        //Ret returns value on top of the stack.  For now we will assume the value is always 128 bits... (Xmm)\n        let returnValue = registry.get('xmm0');\n        let nbCols = returnValue.length;\n\n        this.state = {\n            colLen: 50,\n            colHeight: 50,\n            nbCols,\n            returnValue,\n        };\n\n        this.computeCommand();\n        this.ref = React.createRef();\n\n    }\n\n    getAnimation() {\n\n        //We make an empty timeline because sequentialComponent needs to know when to jump to the next command.\n        let timeline = anime.timeline({\n            easing: \"linear\",\n            autoplay: false,\n        });\n\n        timeline\n            .add({\n                targets: this.ref.current,\n                duration: 1000\n            });\n\n        let eternalGlow = anime.timeline({\n            easing: \"linear\",\n            loop: true,\n            autoplay: true,\n            direction: 'alternate'\n        });\n\n        eternalGlow // Creates the glow arround the returned vector (glowing box shadow)\n            .add({\n                targets: this.ref.current,\n                boxShadow: [\"0px 0px 20px 5px var(--main)\", \"0px 0px 2px 1px var(--main)\"],\n                duration: 1000\n            });\n\n        return timeline;\n    }\n\n    //Compute the command and set the registry.\n    computeCommand() {\n\n    }\n\n    render() {\n        let {nbCols, colLen, colHeight, returnValue} = this.state;\n\n        return (\n            <RetContainer ref={this.ref} width={colLen * nbCols}>\n                <Vector colLen={colLen} colHeight={colHeight} nbCols={nbCols}>\n                    <TrNumbers colHeight={colHeight}>\n                        {returnValue.map((e, i) =>\n                            <TdNumbers colLen={colLen} colHeight={colHeight} key={i}>{('0'+e.toString(16)).substr(-2)}</TdNumbers>\n                        )}\n                    </TrNumbers>\n                </Vector>\n            </RetContainer>\n        );\n    }\n}\n","import React, {Component} from \"react\";\n\nexport default class UnsupportedCommand extends Component {\n\n    render() {\n        return (\n            <div>Unsupported Command: \"{this.props.name}\"</div>\n        );\n    }\n}","import React, {Component} from \"react\";\nimport styled from \"styled-components\";\nimport * as Registry from \"../Utils/Registry\";\n\nconst FunctionContainer = styled.div`\n  padding-top: 20px;\n`\nconst FunctionName = styled.div`\n    font-size: 32px;\n    font-weight: normal;\n    color: rgb(72, 72, 72);\n    margin-bottom: 15px;\n    text-align: center;\n`\n\nexport default class Function extends Component {\n\n    constructor(props) {\n        super(props);\n\n        //Reset the registry because this is a new function!\n        let registry = Registry.default;\n        registry.clear()\n    }\n\n\n    render() {\n        return (\n            <FunctionContainer>\n                <FunctionName>{this.props.name}</FunctionName>\n            </FunctionContainer>\n        );\n    }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport anime from 'animejs';\n\nconst Container = styled.div`\n  margin: 20px 0;\n  opacity: 0;\n`\n\nexport default class SequentialComponent extends React.Component {\n\n    constructor() {\n        super();\n        // create li DOM reference\n        this.container = React.createRef();\n        this.component = React.createRef();\n    }\n\n    allAnimationCompleted() {\n        this.props.onComplete(this.props.index);\n        //Remove sequential highlight since the component is done animating.\n        if (this.sequentialHighlight)\n            this.sequentialHighlight.clear();\n    }\n\n    componentDidMount() {\n        this.childAnimation = false;\n        let c = this.component.current;\n        if (c && c.getAnimation) {\n            this.childAnimation = c.getAnimation();\n        }\n\n        this.animeRef = anime({\n            targets: this.container.current,\n            easing: \"easeOutCubic\",\n            autoplay: false,\n            translateY: ['5vh', 0],\n            duration: 500,\n            delay: 800,\n            opacity: 1,\n            complete: () => {\n                if (this.childAnimation) {\n                    this.childAnimation.restart();\n                    this.timelineFinished = this.childAnimation.finished.then(() => this.allAnimationCompleted());\n                }\n                else\n                    this.props.onComplete(this.props.index)\n            }\n        });\n\n        if (this.props.shouldBeVisible) {\n            this.animeRef.restart()\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n        if (this.props.play === true && !nextProps.play) {\n            if (this.childAnimation) {\n                this.childAnimation.pause()\n            }\n        }\n        else if (!this.props.play === true && nextProps.play && nextProps.shouldBeVisible) {\n            if (this.childAnimation) {\n                this.childAnimation.play()\n            }\n        }\n\n        if (!nextProps.shouldBeVisible && this.props.shouldBeVisible) {\n            //Component is being hidden. Rewind animation.\n            if (this.sequentialHighlight)\n                this.sequentialHighlight.clear();\n            this.animeRef.seek(0);\n            if (this.childAnimation) {\n                this.childAnimation.seek(0);\n                this.childAnimation = this.component.current.getAnimation()\n            }\n        }\n        if (nextProps.shouldBeVisible && !this.props.shouldBeVisible) {\n            //Start Animation.\n            this.animeRef.restart();\n            //Highlight code to show user, which part of the code is being represented by this animation.\n            this.sequentialHighlight = this.highlightCode();\n\n        }\n    }\n\n    highlightCode = (isHover = false) => {\n        let line = this.component.current.props.line;\n        if (line) {\n            const lineLength = this.props.cm.editor.getLine(line).length;\n            return this.props.cm.editor.doc.markText({line, ch: 0}, {line, ch: lineLength}, {\n                className: isHover ? 'highlighted-code' : 'sequential-highlighted-code'\n            });\n        }\n        return null\n    };\n\n    onEnter = () => {\n        this.hoverHighlight = this.highlightCode(true);\n        if (this.childAnimation) {\n            this.isLoop = this.childAnimation.loop;\n            this.childAnimation.loop = true;\n            this.childAnimation.restart();\n        }\n    };\n\n    onLeave = () => {\n        if (this.hoverHighlight) this.hoverHighlight.clear();\n        if (this.childAnimation) {\n            this.childAnimation.loop = this.isLoop;\n            this.childAnimation.restart();\n            this.childAnimation.seek(Infinity);\n        }\n    }\n\n    render() {\n        return (\n            <Container\n                ref={this.container}\n                onMouseEnter={this.onEnter}\n                onMouseLeave={this.onLeave}\n            >\n                {React.cloneElement(this.props.component, {ref: this.component})}\n            </Container>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport Vpslldq from \"../ASMComponents/vpslldq\";\nimport Vpaddd from \"../ASMComponents/vpaddd\";\nimport Ret from \"../ASMComponents/ret\";\nimport UnsupportedCommand from \"../ASMComponents/UnsupportedCommand\";\nimport Function from \"../ASMComponents/Function\";\nimport SequentialComponent from \"../ASMComponents/SequentialComponent\";\nimport styled from \"styled-components\";\nimport {Row, Col, Button} from 'reactstrap';\nimport '../css/ASMVisualizer.css'\n\n\nconst ButtonContainer = styled.div`\n    text-align: center;\n`\n\n\nfunction commandFactory(c) {\n    switch (c.name) {\n        case \"vpslldq\":\n            return <Vpslldq/>;\n        case \"vpaddd\":\n            return <Vpaddd/>;\n        case \"ret\":\n            return <Ret/>;\n        default:\n            return <UnsupportedCommand/>\n    }\n}\n\nclass AsmVisualizer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            idx: 0,\n            play: true,\n            restart: false\n        };\n\n    }\n\n    componentDidMount() {\n        this.props.cm.editor.doc.getAllMarks().forEach((m) => {\n            m.clear()\n        })\n    }\n\n    buildGraphicStack = () => {\n        let stack = [];\n        this.props.asm.forEach((func) => {\n            let commands = func.body;\n            stack.push(<Function name={func.name}/>);\n            commands.forEach(c => {\n                let command = commandFactory(c);\n                stack.push(\n                    //c.line - 1 because line number starts at 1 and we need to start at 0.\n                    React.cloneElement(command, {name: c.name, params: c.params, line: c.line - 1})\n                );\n            });\n        });\n        return stack;\n    };\n\n    componentDonePlaying(key) {\n        if (this.state.play) {\n            let increment = key === this.state.idx ? 1 : 0;\n            this.setState({idx: this.state.idx + increment});\n        }\n    }\n\n    play() {\n        // if (!this.state.play) {\n        //     this.setState({idx: this.state.idx + 1});\n        // }\n        this.setState({play: true})\n    }\n\n    pause() {\n        this.setState({play: false})\n    }\n\n    forward() {\n        this.setState({idx: this.state.idx + 1});\n        //this.componentDonePlaying(this.state.idx - 1);\n    }\n\n    backward() {\n        this.setState({idx: this.state.idx - 1});\n        setTimeout(() => {\n            this.componentDonePlaying(this.state.idx);\n        })\n    }\n\n    restart() {\n        this.setState({idx: -1});\n        setTimeout(() => {\n            this.setState({play: true});\n            this.componentDonePlaying(-1);\n        })\n    }\n\n    getButtons = (play) => {\n        let buttons = [];\n        //buttons.push(<FontAwesomeIcon icon=\"backward\" onClick={this.backward.bind(this)}/>);\n\n        play === true ?\n            buttons.push({icon: <i className=\"fas fa-pause\"></i>, onClick: this.pause.bind(this)})\n            :\n            buttons.push({icon: <i className=\"fas fa-play\"></i>, onClick: this.play.bind(this)});\n\n        //buttons.push(<FontAwesomeIcon icon=\"forward\" onClick={this.forward.bind(this)}/>);\n        buttons.push({icon: <i className=\"fas fa-sync-alt\"></i>, onClick: this.restart.bind(this)});\n\n        return (\n            <Row>\n                {\n                    buttons.map((button, i) => (\n                        <Col key={i}>\n                            <ButtonContainer>\n                                <Button outline color=\"primary\" onClick={button.onClick} className={'playback-button'}>\n                                    {button.icon}\n                                </Button>\n                            </ButtonContainer>\n                        </Col>\n                    ))\n                }\n            </Row>\n        )\n    };\n\n    render() {\n        return (\n            <div>\n\n                {this.getButtons(this.state.play)}\n\n                {\n                    this.buildGraphicStack().map((func, index) => (\n                        <SequentialComponent\n                            key={index}\n                            index={index}\n                            component={func}\n                            play={this.state.play}\n                            shouldBeVisible={this.state.idx >= index}\n                            onComplete={this.componentDonePlaying.bind(this)}\n                            cm={this.props.cm}\n                        />\n                    ))\n                }\n            </div>\n        );\n    }\n}\n\nexport default AsmVisualizer;","import React, {Component} from 'react';\nimport {Controlled as CodeMirror} from 'react-codemirror2'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/material.css'\nimport 'codemirror/mode/clike/clike.js'\nimport 'codemirror/addon/selection/mark-selection.js'\nimport '../css/App.css';\nimport styled from 'styled-components'\nimport ButtonPanel from \"./ButtonPanel\";\nimport {generateASM, generateAST} from \"../Utils/Parser\";\nimport WaitingScreen from \"./WaitingScreen\";\nimport AstVisualizer from \"./ASTVisualizer\";\nimport FrontPage from \"./FrontPage\";\nimport {compile} from \"../Utils/Compiler\";\nimport ErrorHandler from \"./ErrorHandler\";\nimport {Pane, Tabs} from \"../Utils/Tabs\";\nimport AsmVisualizer from \"./ASMVisualizer\";\nimport { createBrowserHistory } from 'history';\nimport * as qs from 'qs';\n\nconst Container = styled.div`\n  display: flex;\n`\n\nconst LeftContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh\n  width: 50vw;\n  overflow: scroll;\n`\n\nconst RightContainer = styled.div`\n  width: 50vw;\n  height: 100vh;\n  overflow: hidden;\n`\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        let savedState = localStorage.getItem('app-state');\n        this.history = createBrowserHistory();\n        console.log(this.history)\n        this.state = {\n            code: `#include <x86intrin.h>\\n\\n__m128i PrefixSum(__m128i curr) {\\n  __m128i Add = _mm_slli_si128(curr, 4); \\n  curr = _mm_add_epi32(curr, Add);   \\n  Add = _mm_slli_si128(curr, 8);    \\n  return _mm_add_epi32(curr, Add);       \\n}`,\n            codeWasModifiedSinceLastCompile: true,\n            disableButtons: false,\n            status: 'compiles',\n            compiling: false,\n            ast: {},\n            clangAst: {},\n            asm: [],\n            error: [],\n            visualize: false\n        };\n        if (this.history.location.pathname === '/link') {\n            this.state.code = qs.parse(this.history.location.search.substr(1)).code\n        }\n        else if (savedState) {\n            this.state = JSON.parse(savedState);\n        }\n\n        this.frontPage = <FrontPage/>;\n        this.waitingScreen = <WaitingScreen/>;\n        this.asmVisualizer = null\n        this.astVisualizer = null;\n    }\n\n    handleClear = (clearCode = true) => {\n        this.setState(({code}) => ({\n            code: clearCode === true ? '' : code\n        }));\n    };\n\n    visualize = () => {\n        this.setState({compiling: true});\n        if (this.state.codeWasModifiedSinceLastCompile) {\n            this.setState((state) => {Object.assign(state.ast, generateAST(this.cm.editor))});\n            compile(this.cm.editor.getValue(), (error, asm, ast) => {\n                if (error.length === 0) {\n                    asm = generateASM(asm);\n                    this.setState((state) => {\n                        asm.forEach(e => {\n                            state.asm.push(e)\n                        });\n                        return {\n                            compiling: false,\n                            status: 'compiles',\n                            error,\n                            clangAst: ast,\n                            codeWasModifiedSinceLastCompile: false,\n                            visualize: true\n                        }\n                    });\n                }\n                else {\n                    this.setState({compiling: false, status: 'error', error, clangAst: {}, asm: {}});\n                }\n            })\n        }\n        else this.setState({compiling: false});\n    };\n\n    componentDidMount() {\n        if (this.state.asm.length > 0) {\n            this.asmVisualizer = <AsmVisualizer cm={this.cm} asm={this.state.asm}/>;\n        }\n        if (this.state.ast) {\n            this.astVisualizer = <AstVisualizer cm={this.cm} ast={this.state.ast}/>;\n        }\n    }\n\n\n    componentWillUpdate(nextProps, nextState) {\n        localStorage.setItem(\"app-state\", JSON.stringify(nextState));\n    }\n\n    restart = () => {\n        this.setState((state) => {\n            Object.keys(state.ast).forEach(k => delete state.ast[k]);\n            state.asm.splice(0,state.asm.length);\n            return {\n                compiling: false,\n                codeWasModifiedSinceLastCompile: true,\n                clangAst: {},\n                error: [],\n                visualize: false\n            }\n        });\n    };\n\n    getShareLink = () => {\n        //We need to specify the whole URL since we are in dev and bitly cannot work with localhost links.\n        return 'https://piotte13.github.io/SIMD-Visualiser/link?' + qs.stringify({code: this.state.code})\n        //return window.location.origin + \"/link\" + qs.stringify(this.state)\n    };\n\n    render() {\n        const {code, disableButtons, status, compiling} = this.state;\n        let rightPage = this.frontPage;\n        if (compiling) {\n            rightPage = this.waitingScreen;\n        }\n        else if (this.state.error.length > 0) {\n            rightPage = <ErrorHandler cm={this.cm} error={this.state.error}/>\n        }\n        else if (this.asmVisualizer && this.astVisualizer && this.state.visualize) {\n            rightPage = <Tabs selected={0}>\n                <Pane label=\"Graphical\">\n                    {this.asmVisualizer}\n                </Pane>\n                <Pane label=\"AST\">\n                    {this.astVisualizer}\n                </Pane>\n            </Tabs>\n        }\n\n        return (\n            <Container>\n                <LeftContainer>\n                    <ButtonPanel\n                        visualize={this.visualize}\n                        restart={this.restart}\n                        getShareLink={this.getShareLink}\n                        disabled={disableButtons}\n                        status={status}\n                    />\n                    <CodeMirror\n                        ref={(cm) => this.cm = cm}\n                        value={code}\n                        options={{\n                            mode: 'text/x-csrc',\n                            theme: 'material',\n                            lineNumbers: true,\n                            lineWrapping: true,\n                            gutters: [\"CodeMirror-lint-markers\"],\n                        }}\n                        onBeforeChange={(editor, data, code) => {\n                            this.setState({codeWasModifiedSinceLastCompile: true});\n                            this.history.push(\"/\");\n                            if (code === '') {\n                                this.handleClear(true)\n                            } else {\n                                this.setState({code});\n                                //this.myInterpreter = getInterpreter(code)\n                            }\n                        }}\n                        onPaste={() => {\n                            this.setState({codeWasModifiedSinceLastCompile: true});\n                            this.handleClear(false)\n                        }}\n                    />\n                </LeftContainer>\n                <RightContainer>\n                    {rightPage}\n                </RightContainer>\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","import * as request from 'request';\n\n\n//Callback must be -> callback(error, asm, ast)\nexport function compile(code, callback) {\n    let options = {\n        url: 'https://godbolt.org/api/compiler/cclang700/compile',\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json'\n        },\n        json: true,\n        body: {\n            \"source\": code,\n            \"compiler\": \"cclang700\",\n            \"options\": {\n                \"userArguments\": \"-O3 -march=native\",\n                \"compilerOptions\": {\n                    \"produceGccDump\": {},\n                    \"produceCfg\": false,\n                    \"produceAst\": true\n                },\n                \"filters\": {\n                    \"binary\": false,\n                    \"execute\": false,\n                    \"labels\": true,\n                    \"directives\": true,\n                    \"commentOnly\": true,\n                    \"trim\": true,\n                    \"intel\": true,\n                    \"demangle\": true\n                }\n            },\n            \"lang\": \"c\"\n        }\n    };\n    request(options, (error, response, body) => {\n        if (error) {\n            alert(\"oops! https://godbolt.org/ seems to be down! \\n You will have to wait my friend.\")\n            callback({}, [], \"\")\n        }\n        else {\n            callback(body.stderr, body.asm, body.astOutput)\n        }\n    })\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter basename={\"https://piotte13.github.io/SIMD-Visualiser\"}>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}